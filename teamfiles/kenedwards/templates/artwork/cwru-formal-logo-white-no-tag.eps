%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: cwru-formal-logo-white-no-tag.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Cindy
%%CreationDate: 9/1/15
%%BoundingBox: 0 0 526 85
%%HiResBoundingBox: 0 0 525.1055 84.4750
%%CropBox: 0 0 525.1055 84.4750
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 24 8%%BeginData: 1678 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFD2FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">cwru formal logo black tag</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-09-01T13:19:04-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-09-01T13:19:04-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-09-01T13:19:04-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>44</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:75AB47B77F26681194579F0F1860DE95</stEvt:instanceID>
                  <stEvt:when>2009-08-13T18:31:46-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F62A79AACDA1C39</stEvt:instanceID>
                  <stEvt:when>2009-09-10T09:06:52-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681191099B53BFBDA700</stEvt:instanceID>
                  <stEvt:when>2009-10-13T13:18:36-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811994CFE267E856696</stEvt:instanceID>
                  <stEvt:when>2009-10-16T14:17:10-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068119109D82D8615CAC9</stEvt:instanceID>
                  <stEvt:when>2010-02-17T13:39:59-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068119109B728D19AC37B</stEvt:instanceID>
                  <stEvt:when>2010-02-26T09:28:32-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118822946731C68967</stEvt:instanceID>
                  <stEvt:when>2010-02-26T11:03:58-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:04801174072068118822946731C68967</stEvt:instanceID>
                  <stEvt:when>2010-02-26T11:48:49-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:99d8556c-ca73-4fe6-8e91-ab90c88407d1</stEvt:instanceID>
                  <stEvt:when>2015-09-01T13:19:04-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:04801174072068118822946731C68967</stRef:instanceID>
            <stRef:documentID>xmp.did:04801174072068118822946731C68967</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:99d8556c-ca73-4fe6-8e91-ab90c88407d1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:99d8556c-ca73-4fe6-8e91-ab90c88407d1</xmpMM:InstanceID>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -84.4749 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 84.4749 li
525.105 84.4749 li
525.105 0 li
cp
clp
98.8037 47.7405 mo
86.8203 47.7405 79.3486 39.6956 79.3486 30.722 cv
79.3486 22.1097 87.4961 12.3548 99.0132 12.3548 cv
103.89 12.3548 109.027 14.3245 110.115 15.1575 cv
110.48 15.4691 110.995 19.2034 111.102 22.4202 cv
111.102 22.678 110.271 22.6273 110.218 22.471 cv
109.337 18.4261 105.499 13.9114 97.7661 13.9114 cv
89.9863 13.9114 84.1211 19.4095 84.1211 28.8001 cv
84.1211 40.2679 91.853 46.0794 99.2729 46.0794 cv
104.667 46.0794 110.011 42.8616 110.427 37.5687 cv
110.427 37.4144 111.413 37.3597 111.413 37.6722 cv
111.256 40.888 110.736 44.6234 110.326 44.9349 cv
108.455 46.3372 105.187 47.7405 98.8037 47.7405 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
120.645 35.7503 mo
127.859 35.7503 li
124.642 27.0374 li
120.645 35.7503 li
cp
127.859 46.9085 mo
127.546 47.0111 127.704 45.9232 127.859 45.9232 cv
129.622 45.7113 130.711 45.972 130.711 44.9349 cv
130.711 43.7425 130.038 42.0316 129.363 40.0579 cv
128.427 37.3089 li
120.025 37.3089 li
118.832 40.0579 li
117.846 42.3431 117.275 43.846 117.275 44.8851 cv
117.275 45.7659 118.259 45.7659 119.922 45.9232 cv
120.181 45.9232 120.181 47.0111 119.868 46.9085 cv
118.677 46.7542 117.066 46.6995 115.406 46.6995 cv
113.175 46.6995 112.813 46.6995 111.102 46.9085 cv
110.791 46.9613 110.946 45.9232 111.102 45.9232 cv
113.694 45.7113 115.044 44.3128 117.016 39.9564 cv
125.627 21.1224 li
125.731 20.8636 126.248 20.8109 126.354 21.1224 cv
133.825 39.9564 li
135.69 44.14 135.411 45.6419 138.518 45.9232 cv
138.672 45.9368 138.778 47.0111 138.465 46.9085 cv
137.219 46.7542 136.263 46.6995 134.552 46.6995 cv
132.319 46.6995 129.519 46.6995 127.859 46.9085 cv
cp
f
139.564 45.2318 mo
139.344 45.0911 139.258 42.1839 139.189 39.432 cv
139.168 39.1702 140.105 39.1976 140.115 39.3021 cv
140.75 43.2064 143.075 46.137 147.11 45.805 cv
149.901 45.5726 151.677 43.7581 151.47 41.2767 cv
150.935 34.8128 139.563 35.7581 138.975 28.6741 cv
138.679 25.1058 141.579 21.1693 146.336 20.7738 cv
148.611 20.5882 150.115 21.14 151.524 21.8021 cv
151.852 21.9847 152.439 24.0687 152.66 26.7073 cv
152.67 26.8616 151.636 26.9476 151.625 26.7933 cv
150.925 23.9876 148.899 22.178 146.107 22.4066 cv
143.679 22.6087 141.966 23.9486 142.164 26.3275 cv
142.678 32.5325 153.832 31.4534 154.45 38.8978 cv
154.801 43.1361 151.796 47.0804 146.884 47.4886 cv
144.038 47.7259 141.721 46.7698 139.564 45.2318 cv
cp
f
173.275 46.9085 mo
171.825 46.9085 169.385 46.6995 166.479 46.6995 cv
162.536 46.6995 157.815 46.6995 154.912 46.9085 cv
154.602 46.9085 154.755 45.9232 154.912 45.9232 cv
158.855 45.4554 159.216 44.9349 159.216 40.0072 cv
159.216 28.2816 li
159.216 23.3548 158.855 22.7318 154.912 22.3157 cv
154.755 22.3157 154.602 21.2259 154.912 21.2777 cv
157.815 21.5374 162.381 21.5902 166.324 21.5902 cv
169.127 21.5902 171.825 21.4847 174.21 21.2777 cv
173.951 22.1097 173.951 23.1976 173.951 23.9749 cv
173.951 24.3929 173.898 25.5316 173.951 25.7913 cv
173.951 25.8968 172.965 25.9476 172.965 25.846 cv
172.655 24.1312 172.032 23.304 167.001 23.304 cv
163.627 23.304 li
163.47 24.1859 163.42 25.6341 163.42 28.0745 cv
163.42 32.848 li
166.012 32.848 li
170.372 32.848 170.683 32.7425 171.099 31.0823 cv
171.099 30.9808 172.082 30.9261 172.032 31.1878 cv
171.876 31.7601 171.825 33.3655 171.825 34.2464 cv
171.825 34.7152 171.825 36.1155 171.825 36.4788 cv
171.926 36.5316 170.837 36.5833 170.837 36.5316 cv
170.476 34.5081 170.163 34.3538 166.012 34.3538 cv
163.42 34.3538 li
163.42 39.4886 li
163.42 44.4691 163.679 44.9349 165.442 44.9349 cv
167.465 44.9349 li
173.432 44.9349 173.589 44.1058 174.159 41.5667 cv
174.159 41.512 175.197 41.512 175.197 41.6663 cv
175.04 42.6546 174.624 45.1956 174.367 45.972 cv
174.21 46.7542 173.951 46.9085 173.275 46.9085 cv
cp
f
320.951 34.1888 mo
320.277 34.1888 319.967 34.1341 319.5 34.1341 cv
319.5 27.9095 li
319.5 25.1068 319.604 23.6038 319.813 22.8763 cv
320.381 22.8265 320.538 22.7757 321.105 22.7757 cv
325.622 22.7757 328.112 24.3304 328.112 28.6898 cv
328.112 32.2152 326.09 34.1888 320.951 34.1888 cv
cp
364.647 21.3187 mo
363.504 21.4788 361.74 21.5804 360.082 21.5804 cv
357.799 21.5804 356.501 21.5804 354.945 21.3187 cv
354.631 21.2171 354.631 22.2542 354.892 22.3089 cv
358.263 22.6693 358.783 23.8118 358.783 28.2728 cv
358.783 40.3587 li
340.675 21.6322 li
338.445 21.6322 335.435 21.5804 333.828 21.3187 cv
333.517 21.2171 333.619 22.3089 333.776 22.3089 cv
335.538 22.5159 338.809 24.9027 338.809 26.6663 cv
338.809 40.0003 li
338.809 44.2366 338.141 45.4837 335.38 45.7484 cv
335.317 45.7601 334.955 45.7757 334.692 45.5902 cv
328.775 40.7366 328.846 37.6331 327.454 34.0843 cv
330.516 32.7874 332.383 30.2445 332.383 27.6527 cv
332.383 23.5003 328.642 21.5882 321.642 21.2698 cv
317.67 21.0882 313.435 20.93 311.111 21.3577 cv
310.8 21.4154 311.06 22.3968 311.268 22.2913 cv
311.838 22.1878 312.324 22.2679 312.737 22.2679 cv
314.553 22.2679 315.365 23.7572 315.365 28.2728 cv
315.365 40.0003 li
315.365 44.928 314.744 45.5491 311.371 45.9105 cv
311.215 45.9105 311.06 47.0023 311.371 46.8988 cv
313.033 46.6907 315.574 46.6907 317.858 46.6907 cv
319.517 46.6907 322.162 46.7415 323.355 46.8988 cv
323.667 47.0023 323.563 45.9105 323.41 45.9105 cv
319.877 45.5989 319.517 44.6663 319.517 40.0003 cv
319.517 35.639 li
319.983 35.6917 320.242 35.6917 321.021 35.6917 cv
321.8 35.6917 322.992 35.5374 323.925 35.3841 cv
325.541 41.1566 331.242 46.0394 333.795 46.8704 cv
333.841 46.8861 334.138 46.9163 334.138 46.9163 cv
334.838 46.8909 li
334.848 46.8909 338.188 46.6907 340.468 46.6907 cv
342.076 46.6907 343.479 46.7415 344.671 46.8988 cv
344.982 47.0023 344.879 45.9105 344.776 45.9105 cv
341.196 45.5989 340.833 44.1507 340.833 40.0003 cv
340.833 27.4925 li
360.182 47.1585 li
360.497 47.4681 361.117 47.262 361.117 47.1077 cv
360.908 45.4447 360.858 41.9183 360.858 40.0003 cv
360.858 28.2728 li
360.858 24.1224 361.171 22.5648 364.8 22.3089 cv
364.908 22.3089 365.166 21.2698 364.647 21.3187 cv
cp
f
250.367 45.4378 mo
250.154 45.2864 250.197 44.2913 250.282 41.5364 cv
250.276 41.2796 251.168 41.3695 251.216 41.4613 cv
252.874 44.8831 253.877 45.9769 257.724 45.805 cv
259.983 45.6995 262.3 44.0218 262.235 41.5316 cv
262.074 35.0491 250.665 35.3363 250.485 28.2308 cv
250.395 24.6527 253.517 20.888 258.289 20.7679 cv
260.572 20.7103 262.04 21.3489 263.408 22.0941 cv
263.726 22.2913 264.193 24.4085 264.258 27.055 cv
264.263 27.2113 263.228 27.2376 263.222 27.0794 cv
262.684 24.2405 260.767 22.3157 257.967 22.387 cv
255.529 22.4476 253.743 23.6849 253.804 26.0726 cv
253.962 32.2952 265.16 31.8597 265.345 39.3265 cv
265.456 43.5784 262.332 47.346 257.402 47.471 cv
254.551 47.5433 252.431 47.096 250.367 45.4378 cv
cp
f
215.148 47.3636 mo
215.045 47.6263 214.424 47.7288 214.268 47.3148 cv
206.433 25.3167 li
196.732 47.3636 li
196.629 47.6263 195.955 47.7288 195.798 47.3148 cv
185.785 22.3089 li
183.293 16.0823 182.464 14.3157 178.366 13.9534 cv
178.108 13.9534 177.9 13.0198 178.418 13.0706 cv
179.869 13.2816 181.945 13.3812 183.97 13.3812 cv
186.77 13.3812 190.247 13.3304 192.271 13.0706 cv
192.788 13.0198 192.477 13.9534 192.322 13.9534 cv
189.937 14.1624 188.637 14.4749 188.637 15.8714 cv
188.637 16.9642 189.83 20.5433 190.507 22.2034 cv
197.924 40.6732 li
205.605 22.93 li
205.344 22.3089 li
202.802 16.2366 202.233 14.3157 198.291 13.9534 cv
198.132 13.9534 197.924 13.0198 198.34 13.0706 cv
199.845 13.2816 201.869 13.3812 203.894 13.3812 cv
206.693 13.3812 210.637 13.3304 212.659 13.0706 cv
213.076 12.9691 212.918 13.9534 212.763 13.9534 cv
209.546 14.2132 208.508 14.5755 208.508 16.1331 cv
208.508 17.2757 209.028 19.1409 210.064 22.2034 cv
216.343 40.6732 li
223.764 21.9437 li
224.955 18.8812 225.628 17.2757 225.628 15.9261 cv
225.628 14.6292 224.801 14.2132 222.257 13.9534 cv
222.101 13.9534 221.791 13.0198 222.31 13.0706 cv
223.813 13.2816 225.372 13.3812 227.447 13.3812 cv
230.3 13.3812 230.246 13.3304 232.322 13.0706 cv
232.737 12.9691 232.531 13.9534 232.376 13.9534 cv
229.107 14.264 228.07 16.4954 225.628 22.3089 cv
215.148 47.3636 li
cp
f
246.274 46.8988 mo
244.823 46.8988 242.386 46.6907 239.479 46.6907 cv
235.537 46.6907 230.816 46.6907 227.91 46.8988 cv
227.598 46.8988 227.755 45.9105 227.91 45.9105 cv
231.853 45.4447 232.215 44.928 232.215 40.0003 cv
232.215 28.2728 li
232.215 23.346 231.853 22.722 227.91 22.3089 cv
227.755 22.3089 227.598 21.2171 227.91 21.2698 cv
230.816 21.5277 235.38 21.5804 239.322 21.5804 cv
242.127 21.5804 244.823 21.4788 247.21 21.2698 cv
246.953 22.0989 246.953 23.1878 246.953 23.9661 cv
246.953 24.3792 246.9 25.5218 246.953 25.7835 cv
246.953 25.888 245.964 25.9398 245.964 25.8343 cv
245.653 24.1224 245.031 23.2913 240 23.2913 cv
236.626 23.2913 li
236.472 24.1741 236.419 25.6273 236.419 28.0657 cv
236.419 32.8382 li
239.014 32.8382 li
243.369 32.8382 243.682 32.7347 244.097 31.0765 cv
244.097 30.971 245.084 30.9202 245.031 31.1771 cv
244.877 31.7464 244.823 33.3577 244.823 34.2415 cv
244.823 34.7073 244.823 36.1068 244.823 36.47 cv
244.926 36.5218 243.838 36.5745 243.838 36.5218 cv
243.476 34.4993 243.163 34.3441 239.014 34.3441 cv
236.419 34.3441 li
236.419 39.4779 li
236.419 44.4613 236.679 44.928 238.441 44.928 cv
240.466 44.928 li
246.431 44.928 246.588 44.098 247.157 41.554 cv
247.157 41.5013 248.194 41.5013 248.194 41.6566 cv
248.04 42.6429 247.626 45.1859 247.365 45.9652 cv
247.21 46.7415 246.953 46.8988 246.274 46.8988 cv
cp
f
288.567 26.4554 mo
288.567 26.6136 287.633 26.5609 287.633 26.4554 cv
287.268 24.7464 286.559 23.553 282.406 23.553 cv
279.621 23.553 li
279.621 40.0003 li
279.621 44.6155 279.934 45.5989 283.564 45.9105 cv
283.719 45.9105 283.824 46.9476 283.408 46.8988 cv
282.215 46.7415 279.567 46.6907 277.909 46.6907 cv
275.68 46.6907 273.135 46.6907 271.526 46.8988 cv
271.109 47.0023 271.32 45.9105 271.476 45.9105 cv
274.898 45.5491 275.418 44.8734 275.418 40.0003 cv
275.418 23.553 li
272.422 23.553 li
268.43 23.553 267.509 24.6927 266.992 26.5062 cv
266.786 26.5609 266.003 26.5609 266.058 26.4046 cv
266.213 25.5765 266.353 23.6038 266.316 22.5159 cv
266.31 22.2786 266.213 21.8499 266.109 21.387 cv
266.073 21.2259 266.916 21.2327 267.043 21.3382 cv
267.846 21.9886 269.147 21.7298 272.422 21.7357 cv
282.406 21.7357 li
285.553 21.7298 287.469 21.9886 287.892 21.3382 cv
287.98 21.1956 288.93 21.2327 288.825 21.4398 cv
288.618 22.2698 288.513 22.722 288.513 24.0189 cv
288.513 24.6409 288.513 25.9398 288.567 26.4554 cv
cp
f
308.178 46.8988 mo
306.726 46.8988 304.288 46.6907 301.379 46.6907 cv
297.438 46.6907 292.717 46.6907 289.811 46.8988 cv
289.502 46.8988 289.655 45.9105 289.811 45.9105 cv
293.755 45.4447 294.118 44.928 294.118 40.0003 cv
294.118 28.2728 li
294.118 23.346 293.755 22.722 289.811 22.3089 cv
289.655 22.3089 289.502 21.2171 289.811 21.2698 cv
292.717 21.5277 297.281 21.5804 301.225 21.5804 cv
304.026 21.5804 306.726 21.4788 309.113 21.2698 cv
308.851 22.0989 308.851 23.1878 308.851 23.9661 cv
308.851 24.3792 308.799 25.5218 308.851 25.7835 cv
308.851 25.888 307.865 25.9398 307.865 25.8343 cv
307.556 24.1224 306.931 23.2913 301.9 23.2913 cv
298.527 23.2913 li
298.371 24.1741 298.317 25.6273 298.317 28.0657 cv
298.317 32.8382 li
300.913 32.8382 li
305.273 32.8382 305.583 32.7347 305.998 31.0765 cv
305.998 30.971 306.983 30.9202 306.931 31.1771 cv
306.775 31.7464 306.726 33.3577 306.726 34.2415 cv
306.726 34.7073 306.726 36.1068 306.726 36.47 cv
306.829 36.5218 305.738 36.5745 305.738 36.5218 cv
305.375 34.4993 305.064 34.3441 300.913 34.3441 cv
298.317 34.3441 li
298.317 39.4779 li
298.317 44.4613 298.58 44.928 300.343 44.928 cv
302.365 44.928 li
308.333 44.928 308.49 44.098 309.06 41.554 cv
309.06 41.5013 310.096 41.5013 310.096 41.6566 cv
309.941 42.6429 309.525 45.1859 309.267 45.9652 cv
309.113 46.7415 308.851 46.8988 308.178 46.8988 cv
cp
f
422.404 45.4466 mo
422.193 45.2991 422.233 44.3021 422.321 41.5491 cv
422.314 41.2884 423.209 41.3802 423.252 41.4769 cv
424.912 44.8929 425.914 45.9915 429.763 45.8148 cv
432.02 45.7103 434.336 44.0316 434.276 41.5433 cv
434.111 35.0609 422.701 35.348 422.522 28.2425 cv
422.435 24.6624 425.556 20.9007 430.325 20.7796 cv
432.609 20.723 434.079 21.3607 435.445 22.1048 cv
435.762 22.303 436.232 24.4183 436.3 27.0638 cv
436.301 27.22 435.266 27.2464 435.26 27.0902 cv
434.723 24.2513 432.807 22.3265 430.006 22.3968 cv
427.566 22.4564 425.783 23.6956 425.843 26.0804 cv
425.998 32.306 437.196 31.8695 437.384 39.3382 cv
437.49 43.5902 434.368 47.3568 429.442 47.4827 cv
426.588 47.557 424.471 47.1107 422.404 45.4466 cv
cp
f
380.704 14.4827 mo
380.441 15.5208 380.338 17.9085 380.338 21.7464 cv
380.338 30.3577 li
381.013 30.4124 381.428 30.3577 382.259 30.3577 cv
390.092 30.3577 392.789 27.5062 392.789 23.2503 cv
392.789 16.1956 388.175 14.3265 382.986 14.3265 cv
382.209 14.3265 381.584 14.3812 380.704 14.4827 cv
cp
385.526 31.5501 mo
384.645 31.762 383.451 31.8109 382.31 31.8109 cv
381.325 31.8109 381.013 31.762 380.338 31.7073 cv
380.338 37.8323 li
380.338 45.2484 380.287 45.6136 385.112 46.0296 cv
385.373 46.0296 385.475 47.1175 385.059 47.014 cv
383.401 46.805 380.807 46.7015 378.629 46.7015 cv
375.564 46.7015 373.18 46.7015 371.001 47.014 cv
370.483 47.0657 370.691 46.0794 370.949 46.0296 cv
375.517 45.5091 375.824 45.6136 375.824 37.8323 cv
375.824 22.2122 li
375.824 16.3519 375.671 14.5355 372.713 14.5355 cv
372.193 14.5355 371.467 14.5882 370.74 14.7445 cv
370.586 14.7952 370.171 13.9652 370.691 13.8109 cv
372.816 13.1341 378.004 12.928 383.659 12.928 cv
391.237 12.928 397.46 15.2093 397.46 21.0198 cv
397.46 23.9261 395.129 28.3382 389.729 30.515 cv
394.763 37.5706 395.041 52.7962 407.663 53.6263 cv
409.526 53.7454 409.777 53.6155 411.667 53.1058 cv
411.986 53.0208 412.421 53.8333 412.03 53.9866 cv
409.237 55.0872 407.447 55.2962 404.757 55.0794 cv
391.033 53.9632 389.834 38.0892 385.526 31.5501 cv
cp
f
418.041 46.9105 mo
416.588 46.9105 414.15 46.7015 411.244 46.7015 cv
407.303 46.7015 403.218 46.7015 400.314 46.9105 cv
400.001 46.9105 400.159 45.9232 400.314 45.9232 cv
404.257 45.4554 403.982 44.9378 403.982 40.0081 cv
403.982 28.2835 li
403.982 23.3558 403.619 22.7337 399.675 22.3187 cv
399.522 22.3187 399.362 21.2288 399.675 21.2777 cv
402.582 21.5394 407.147 21.5921 411.092 21.5921 cv
413.893 21.5921 416.588 21.4847 418.975 21.2777 cv
418.717 22.1116 418.717 23.1995 418.717 23.9788 cv
418.717 24.3929 418.664 25.5345 418.717 25.7933 cv
418.717 25.8978 417.73 25.9476 417.73 25.846 cv
417.42 24.1331 416.797 23.304 411.767 23.304 cv
408.392 23.304 li
408.233 24.1859 408.185 25.6361 408.185 28.0745 cv
408.185 32.8499 li
410.779 32.8499 li
415.137 32.8499 415.45 32.7454 415.862 31.0843 cv
415.862 30.9808 416.847 30.931 416.797 31.1898 cv
416.642 31.762 416.588 33.3675 416.588 34.2484 cv
416.588 34.7191 416.588 36.1175 416.588 36.4808 cv
416.692 36.5335 415.604 36.5863 415.604 36.5335 cv
415.24 34.5101 414.928 34.3558 410.779 34.3558 cv
408.185 34.3558 li
408.185 39.4905 li
408.185 44.472 408.442 44.9378 410.207 44.9378 cv
412.232 44.9378 li
418.196 44.9378 418.354 44.1077 418.925 41.5667 cv
418.925 41.512 419.96 41.512 419.96 41.6683 cv
419.806 42.6566 419.392 45.1986 419.131 45.9749 cv
418.975 46.7562 418.717 46.9105 418.041 46.9105 cv
cp
f
456.771 46.9105 mo
455.32 46.9105 452.884 46.7015 449.976 46.7015 cv
446.033 46.7015 441.313 46.7015 438.408 46.9105 cv
438.096 46.9105 438.251 45.9232 438.408 45.9232 cv
442.351 45.4554 442.713 44.9378 442.713 40.0081 cv
442.713 28.2835 li
442.713 23.3558 442.351 22.7337 438.408 22.3187 cv
438.251 22.3187 438.096 21.2288 438.408 21.2777 cv
441.313 21.5394 445.876 21.5921 449.821 21.5921 cv
452.622 21.5921 455.32 21.4847 457.707 21.2777 cv
457.445 22.1116 457.445 23.1995 457.445 23.9788 cv
457.445 24.3929 457.396 25.5345 457.445 25.7933 cv
457.445 25.8978 456.46 25.9476 456.46 25.846 cv
456.15 24.1331 455.526 23.304 450.496 23.304 cv
447.123 23.304 li
446.967 24.1859 446.918 25.6361 446.918 28.0745 cv
446.918 32.8499 li
449.509 32.8499 li
453.868 32.8499 454.178 32.7454 454.596 31.0843 cv
454.596 30.9808 455.582 30.931 455.526 31.1898 cv
455.371 31.762 455.32 33.3675 455.32 34.2484 cv
455.32 34.7191 455.32 36.1175 455.32 36.4808 cv
455.424 36.5335 454.335 36.5863 454.335 36.5335 cv
453.969 34.5101 453.663 34.3558 449.509 34.3558 cv
446.918 34.3558 li
446.918 39.4905 li
446.918 44.472 447.175 44.9378 448.938 44.9378 cv
450.963 44.9378 li
456.93 44.9378 457.084 44.1077 457.656 41.5667 cv
457.656 41.512 458.695 41.512 458.695 41.6683 cv
458.537 42.6566 458.121 45.1986 457.862 45.9749 cv
457.707 46.7562 457.445 46.9105 456.771 46.9105 cv
cp
f
467.809 22.887 mo
467.602 23.6155 467.5 25.1214 467.5 27.9212 cv
467.5 34.1468 li
467.965 34.1468 468.275 34.1995 468.951 34.1995 cv
474.085 34.1995 476.111 32.2269 476.111 28.6986 cv
476.111 24.3421 473.619 22.7845 469.105 22.7845 cv
468.537 22.7845 468.38 22.8343 467.809 22.887 cv
cp
469.001 35.7034 mo
468.225 35.7034 467.965 35.7034 467.5 35.6527 cv
467.5 40.0081 li
467.5 44.68 467.858 45.6136 471.389 45.9232 cv
471.545 45.9232 471.65 47.014 471.336 46.9105 cv
470.143 46.7562 467.5 46.7015 465.836 46.7015 cv
463.553 46.7015 461.013 46.7015 459.351 46.9105 cv
459.042 47.014 459.197 45.9232 459.351 45.9232 cv
462.723 45.5609 463.347 44.9378 463.347 40.0081 cv
463.347 28.2835 li
463.347 23.7718 462.523 22.2279 460.707 22.2279 cv
460.291 22.2279 460.303 22.2366 459.733 22.3402 cv
459.526 22.4437 459.275 21.4915 459.579 21.4066 cv
461.362 20.9144 465.645 21.307 469.625 21.2777 cv
476.626 21.2347 480.365 23.5111 480.365 27.6614 cv
480.365 30.2542 478.496 32.7972 475.434 34.095 cv
477.512 39.387 483.075 46.5472 487.592 46.5472 cv
487.746 46.5472 487.902 47.5335 487.592 47.5335 cv
479.082 47.5335 473.619 41.512 471.905 35.3909 cv
470.975 35.5472 469.779 35.7034 469.001 35.7034 cv
cp
f
493.928 47.1702 mo
493.875 47.3236 493.252 47.428 493.096 47.1175 cv
484.901 28.3382 li
483.034 24.0804 481.838 22.5794 478.728 22.3187 cv
478.57 22.3187 478.414 21.2288 478.728 21.3304 cv
479.971 21.4847 482.307 21.5921 483.914 21.5921 cv
486.196 21.5921 489.053 21.5921 490.608 21.3304 cv
490.92 21.2288 490.92 22.2659 490.658 22.3187 cv
488.946 22.5247 487.963 22.6273 487.963 23.6644 cv
487.963 24.3929 488.168 25.7425 489.259 28.2327 cv
494.914 41.0462 li
500.516 28.2327 li
501.762 25.3255 501.92 24.5989 501.92 23.6644 cv
501.92 22.7845 501.088 22.473 499.377 22.3187 cv
499.221 22.3187 499.063 21.2288 499.377 21.3304 cv
500.57 21.4847 502.178 21.5921 503.834 21.5921 cv
506.171 21.5921 506.301 21.5394 508.088 21.5618 cv
508.417 21.5648 508.351 22.3187 508.193 22.3187 cv
505.758 22.5794 504.354 23.7718 502.332 28.3382 cv
493.928 47.1702 li
cp
f
523.185 46.9105 mo
521.732 46.9105 519.295 46.7015 516.388 46.7015 cv
512.445 46.7015 507.726 46.7015 504.821 46.9105 cv
504.508 46.9105 504.663 45.9232 504.821 45.9232 cv
508.763 45.4554 509.125 44.9378 509.125 40.0081 cv
509.125 28.2835 li
509.125 23.3558 508.763 22.7337 504.821 22.3187 cv
504.663 22.3187 504.534 21.5648 504.851 21.5618 cv
507.688 21.5179 512.288 21.5921 516.233 21.5921 cv
519.035 21.5921 521.732 21.4847 524.119 21.2777 cv
523.859 22.1116 523.859 23.1995 523.859 23.9788 cv
523.859 24.3929 523.809 25.5345 523.859 25.7933 cv
523.859 25.8978 522.875 25.9476 522.875 25.846 cv
522.563 24.1331 521.941 23.304 516.908 23.304 cv
513.535 23.304 li
513.381 24.1859 513.328 25.6361 513.328 28.0745 cv
513.328 32.8499 li
515.924 32.8499 li
520.28 32.8499 520.592 32.7454 521.006 31.0843 cv
521.006 30.9808 521.99 30.931 521.941 31.1898 cv
521.787 31.762 521.732 33.3675 521.732 34.2484 cv
521.732 34.7191 521.732 36.1175 521.732 36.4808 cv
521.838 36.5335 520.748 36.5863 520.748 36.5335 cv
520.384 34.5101 520.071 34.3558 515.924 34.3558 cv
513.328 34.3558 li
513.328 39.4905 li
513.328 44.472 513.586 44.9378 515.351 44.9378 cv
517.375 44.9378 li
523.34 44.9378 523.498 44.1077 524.067 41.5667 cv
524.067 41.512 525.105 41.512 525.105 41.6683 cv
524.951 42.6566 524.534 45.1986 524.273 45.9749 cv
524.119 46.7562 523.859 46.9105 523.185 46.9105 cv
cp
f
99.3496 68.2933 mo
99.3496 72.3275 96.3032 75.7327 91.0024 75.7327 cv
86.4116 75.7327 82.4941 72.8402 82.4941 68.0921 cv
82.4941 61.1302 li
82.4941 57.3704 82.0615 56.8577 79.4902 56.5433 cv
79.3701 56.5433 79.291 55.7493 79.5264 55.8284 cv
80.7534 56.0277 82.6509 55.9886 84.4336 55.9886 cv
85.6977 55.9886 87.6787 55.9466 88.6269 55.8284 cv
88.8667 55.7493 88.8667 56.5433 88.6689 56.5433 cv
85.9765 56.7777 85.7412 57.5706 85.7412 61.1302 cv
85.7412 67.4212 li
85.7412 72.0472 88.7456 74.1058 91.7934 74.1058 cv
95.7881 74.1058 97.8872 71.971 97.8872 67.8968 cv
97.8872 60.8548 li
97.8872 57.4515 97.4526 56.8577 94.8799 56.5433 cv
94.6846 56.5023 94.6846 55.7493 94.9175 55.8284 cv
96.1455 56.0277 97.0557 55.9886 98.7954 55.9886 cv
100.025 55.9886 101.329 55.9466 102.238 55.8284 cv
102.556 55.7904 102.398 56.5433 102.317 56.5433 cv
99.5879 56.7777 99.3496 57.6488 99.3496 60.8548 cv
99.3496 68.2933 li
f
135.5 70.0335 mo
135.5 71.4954 135.538 74.1888 135.696 75.4505 cv
135.696 75.5716 135.221 75.7327 134.985 75.4925 cv
120.224 60.4984 li
120.224 70.0335 li
120.224 73.1966 120.503 74.306 123.232 74.5423 cv
123.312 74.5423 123.391 75.3734 123.153 75.2933 cv
122.243 75.1761 121.176 75.138 119.95 75.138 cv
118.209 75.138 116.944 75.138 115.675 75.2933 cv
115.479 75.3363 115.559 74.5423 115.675 74.5423 cv
118.288 74.2679 118.684 73.3958 118.684 70.0335 cv
118.684 59.8636 li
118.684 58.5198 116.191 56.7025 114.847 56.5433 cv
114.727 56.5433 114.647 55.7113 114.885 55.7904 cv
116.113 55.9886 118.408 56.0277 120.108 56.0277 cv
133.917 70.3128 li
133.917 61.0921 li
133.917 57.6898 133.521 56.8187 130.947 56.5433 cv
130.752 56.5023 130.752 55.7113 130.988 55.7904 cv
132.176 55.9886 133.164 55.9886 134.905 55.9886 cv
136.173 55.9886 137.515 55.9066 138.39 55.7904 cv
138.782 55.7493 138.585 56.5433 138.507 56.5433 cv
135.738 56.7405 135.5 57.9241 135.5 61.0921 cv
135.5 70.0335 li
f
158.282 75.138 mo
156.5 75.138 154.604 75.138 153.335 75.2933 cv
153.017 75.3734 153.216 74.5423 153.293 74.5423 cv
155.906 74.2679 156.301 73.7523 156.301 70.0335 cv
156.301 61.0921 li
156.301 57.3314 155.906 56.8187 153.293 56.5433 cv
153.216 56.5433 153.06 55.7493 153.375 55.7904 cv
154.604 55.9886 156.5 55.9886 158.282 55.9886 cv
159.468 55.9886 161.526 55.9066 162.437 55.7904 cv
162.754 55.7493 162.593 56.5433 162.513 56.5433 cv
159.783 56.7405 159.507 57.5706 159.507 61.0921 cv
159.507 70.0335 li
159.507 73.5521 159.783 74.306 162.513 74.5423 cv
162.593 74.5423 162.754 75.3363 162.437 75.2933 cv
161.526 75.1761 159.468 75.138 158.282 75.138 cv
f
187.495 75.4925 mo
187.453 75.6136 186.976 75.6917 186.86 75.4505 cv
180.607 61.1302 li
179.184 57.887 178.273 56.7405 175.901 56.5433 cv
175.783 56.5433 175.661 55.7113 175.901 55.7904 cv
176.849 55.9066 178.63 55.9886 179.857 55.9886 cv
181.6 55.9886 183.774 55.9886 184.962 55.7904 cv
185.198 55.7113 185.198 56.5023 185 56.5433 cv
183.697 56.7025 182.945 56.7777 182.945 57.5706 cv
182.945 58.1224 183.104 59.1497 183.933 61.0511 cv
188.245 70.8245 li
192.519 61.0511 li
193.468 58.8363 193.585 58.2816 193.585 57.5706 cv
193.585 56.8968 192.952 56.6614 191.646 56.5433 cv
191.529 56.5433 191.41 55.7113 191.646 55.7904 cv
192.559 55.9066 193.784 55.9886 195.05 55.9886 cv
196.831 55.9886 197.107 55.9886 198.334 55.7904 cv
198.572 55.7113 198.495 56.5433 198.372 56.5433 cv
196.516 56.7405 195.448 57.6488 193.901 61.1302 cv
187.495 75.4925 li
f
224.581 75.2933 mo
223.469 75.2933 221.612 75.138 219.398 75.138 cv
216.392 75.138 212.789 75.138 210.574 75.2933 cv
210.335 75.2933 210.456 74.5423 210.574 74.5423 cv
213.58 74.1888 213.86 73.7904 213.86 70.0335 cv
213.86 61.0921 li
213.86 57.3314 213.58 56.8577 210.574 56.5433 cv
210.456 56.5433 210.335 55.7113 210.574 55.7493 cv
212.789 55.9466 216.271 55.9886 219.278 55.9886 cv
221.415 55.9886 223.469 55.9066 225.292 55.7493 cv
225.097 56.3851 225.097 57.2113 225.097 57.805 cv
225.097 58.1224 225.056 58.9964 225.097 59.1917 cv
225.097 59.2708 224.344 59.3089 224.344 59.2318 cv
224.106 57.9241 223.631 57.2913 219.793 57.2913 cv
217.221 57.2913 li
217.101 57.9661 217.063 59.0736 217.063 60.932 cv
217.063 64.5726 li
219.04 64.5726 li
222.365 64.5726 222.601 64.4954 222.918 63.2259 cv
222.918 63.1488 223.668 63.1097 223.631 63.306 cv
223.512 63.7415 223.469 64.9671 223.469 65.64 cv
223.469 65.9964 223.469 67.0667 223.469 67.3421 cv
223.551 67.3831 222.724 67.4212 222.724 67.3831 cv
222.444 65.8382 222.204 65.72 219.04 65.72 cv
217.063 65.72 li
217.063 69.638 li
217.063 73.4349 217.257 73.7904 218.604 73.7904 cv
220.148 73.7904 li
224.699 73.7904 224.817 73.1595 225.255 71.22 cv
225.255 71.181 226.042 71.181 226.042 71.3001 cv
225.923 72.0472 225.612 73.9896 225.411 74.5843 cv
225.292 75.1761 225.097 75.2933 224.581 75.2933 cv
f
248.203 56.9749 mo
248.044 57.5316 247.967 58.6761 247.967 60.8157 cv
247.967 65.5638 li
248.322 65.5638 248.558 65.6019 249.073 65.6019 cv
252.991 65.6019 254.536 64.0989 254.536 61.4085 cv
254.536 58.0823 252.638 56.8968 249.191 56.8968 cv
248.756 56.8968 248.637 56.9378 248.203 56.9749 cv
cp
249.115 66.7474 mo
248.521 66.7474 248.322 66.7474 247.967 66.7103 cv
247.967 70.0335 li
247.967 73.5941 248.243 74.306 250.931 74.5423 cv
251.051 74.5423 251.13 75.3734 250.894 75.2933 cv
249.982 75.1761 247.967 75.138 246.7 75.138 cv
244.96 75.138 243.021 75.138 241.755 75.2933 cv
241.515 75.3734 241.635 74.5423 241.755 74.5423 cv
244.325 74.2679 244.8 73.7904 244.8 70.0335 cv
244.8 61.0921 li
244.8 57.6488 244.168 56.8968 242.781 56.8968 cv
242.465 56.8968 242.108 56.9378 241.677 57.0179 cv
241.515 57.0941 241.317 56.3441 241.558 56.3011 cv
242.821 55.9066 246.344 55.7493 249.585 55.7493 cv
254.93 55.7493 257.777 57.4515 257.777 60.6175 cv
257.777 62.5941 256.353 64.5345 254.019 65.5218 cv
255.603 69.5609 259.362 75.0169 262.801 75.0169 cv
262.921 75.0169 263.039 75.7698 262.801 75.7698 cv
256.314 75.7698 252.638 71.181 251.329 66.512 cv
250.616 66.6292 249.706 66.7474 249.115 66.7474 cv
f
276.711 73.9114 mo
276.543 73.804 276.523 71.5853 276.506 69.4847 cv
276.49 69.2874 277.209 69.3206 277.216 69.3968 cv
277.643 72.3841 279.376 74.6517 282.453 74.4534 cv
284.588 74.3187 285.966 72.9583 285.846 71.0628 cv
285.527 66.1302 276.842 66.6878 276.49 61.2786 cv
276.318 58.553 278.584 55.5911 282.217 55.3577 cv
283.95 55.2484 285.092 55.6937 286.156 56.2152 cv
286.404 56.3558 286.825 57.9573 286.953 59.97 cv
286.963 60.0882 286.171 60.139 286.162 60.0198 cv
285.671 57.8743 284.154 56.4652 282.021 56.6019 cv
280.162 56.72 278.842 57.7171 278.957 59.5335 cv
279.263 64.2728 287.783 63.6038 288.15 69.2884 cv
288.358 72.5277 286.013 75.4925 282.26 75.7366 cv
280.086 75.8753 278.334 75.1175 276.711 73.9114 cv
f
309.275 75.138 mo
307.494 75.138 305.593 75.138 304.328 75.2933 cv
304.013 75.3734 304.211 74.5423 304.288 74.5423 cv
306.9 74.2679 307.297 73.7523 307.297 70.0335 cv
307.297 61.0921 li
307.297 57.3314 306.9 56.8187 304.288 56.5433 cv
304.211 56.5433 304.051 55.7493 304.371 55.7904 cv
305.593 55.9886 307.494 55.9886 309.275 55.9886 cv
310.463 55.9886 312.522 55.9066 313.43 55.7904 cv
313.75 55.7493 313.586 56.5433 313.509 56.5433 cv
310.779 56.7405 310.504 57.5706 310.504 61.0921 cv
310.504 70.0335 li
310.504 73.5521 310.779 74.306 313.509 74.5423 cv
313.586 74.5423 313.75 75.3363 313.43 75.2933 cv
312.522 75.1761 310.463 75.138 309.275 75.138 cv
f
347.101 59.7064 mo
347.101 59.8245 346.384 59.7874 346.384 59.7064 cv
346.108 58.4027 345.078 57.4905 341.917 57.4905 cv
340.009 57.4905 li
340.009 70.0335 li
340.009 73.5521 340.25 74.306 343.017 74.5423 cv
343.134 74.5423 343.215 75.3363 342.898 75.2933 cv
341.984 75.1761 339.969 75.138 338.703 75.138 cv
337.001 75.138 335.063 75.138 333.836 75.2933 cv
333.521 75.3734 333.678 74.5423 333.796 74.5423 cv
336.41 74.2679 336.803 73.7523 336.803 70.0335 cv
336.803 57.4905 li
334.74 57.4905 li
331.695 57.4905 330.506 58.3616 330.115 59.7464 cv
329.951 59.7874 329.357 59.7874 329.398 59.6663 cv
329.52 59.0335 329.546 57.4847 329.546 56.6527 cv
329.546 56.5296 329.475 56.3275 329.436 56.1468 cv
329.413 56.0238 330.07 56.013 330.148 56.1068 cv
330.446 56.4495 330.467 56.1068 334.74 56.1068 cv
341.917 56.1068 li
346.15 56.1068 346.347 56.4671 346.586 56.1068 cv
346.656 56.0023 347.376 56.0277 347.297 56.1868 cv
347.139 56.8187 347.057 56.8577 347.057 57.847 cv
347.057 58.3226 347.057 59.3089 347.101 59.7064 cv
f
381.751 56.7025 mo
376.924 56.7025 373.401 62.6331 373.401 69.2825 cv
373.401 70.0335 li
373.401 73.5941 373.642 74.306 376.369 74.5423 cv
376.492 74.5423 376.568 75.3734 376.334 75.2933 cv
375.384 75.1761 373.367 75.138 372.138 75.138 cv
370.398 75.138 368.455 75.138 367.191 75.2933 cv
366.875 75.3734 367.074 74.5423 367.152 74.5423 cv
369.763 74.2679 370.199 73.7523 370.199 70.0335 cv
370.199 69.2825 li
370.199 62.0413 366.242 56.7405 361.612 56.7405 cv
361.217 56.7405 360.861 56.7777 360.506 56.8577 cv
360.425 56.8577 360.229 56.182 360.465 56.1448 cv
361.455 55.7904 362.523 55.5511 363.472 55.5511 cv
367.865 55.5511 371.504 58.9534 372.693 63.3831 cv
374.471 58.4417 377.638 55.7493 381.2 55.7493 cv
381.834 55.7493 383.203 55.9066 383.834 56.1448 cv
384.072 56.182 383.834 56.9378 383.678 56.8577 cv
383.203 56.7405 382.268 56.7025 381.751 56.7025 cv
f
433.647 84.0745 mo
433.507 83.9144 li
433.401 83.7357 433.465 83.4593 433.538 83.3314 cv
433.604 83.2132 li
433.932 83.1605 li
435.897 82.9495 435.897 82.9495 435.897 79.8011 cv
435.897 72.9495 li
435.897 69.7777 435.897 69.7777 433.93 69.5462 cv
433.748 69.5238 li
433.746 69.5238 433.746 69.5238 433.744 69.5238 cv
433.521 69.5238 433.441 69.1907 433.441 69.0296 cv
433.441 68.9417 433.461 68.8626 433.504 68.8021 cv
433.563 68.7064 433.664 68.6556 433.779 68.6556 cv
435.326 68.7581 437.477 68.8138 440.03 68.8138 cv
441.852 68.8138 443.344 68.762 444.603 68.6566 cv
444.945 68.6253 li
444.841 68.9544 li
444.718 69.348 444.689 69.7239 444.689 70.2093 cv
444.689 70.43 444.689 70.8734 444.713 71.0491 cv
444.726 71.1468 li
444.655 71.2562 li
444.59 71.3372 444.483 71.3773 444.334 71.3773 cv
444.215 71.3773 443.928 71.3548 443.855 71.1527 cv
443.707 70.348 443.517 70.0052 440.42 70.0052 cv
438.428 70.0052 li
438.354 70.6566 438.342 71.7435 438.342 72.8353 cv
438.342 75.5286 li
440.466 75.5286 li
442.588 75.5286 442.609 75.4124 442.68 75.0726 cv
442.71 74.929 li
442.738 74.8382 442.813 74.723 443.031 74.723 cv
443.031 74.723 443.404 74.7308 443.531 74.8714 cv
443.617 74.9652 li
443.586 75.0872 li
443.508 75.387 443.459 75.9066 443.459 76.4456 cv
443.459 76.6868 443.459 77.1282 443.478 77.307 cv
443.49 77.3909 li
443.439 77.4974 li
443.375 77.598 443.255 77.6458 443.072 77.6458 cv
442.9 77.6458 442.684 77.6068 442.619 77.429 cv
442.508 76.8372 442.461 76.6038 440.466 76.6038 cv
438.342 76.6038 li
438.342 79.7113 li
438.342 82.722 438.74 82.722 439.529 82.722 cv
440.74 82.722 li
444.188 82.722 444.251 82.4447 444.556 81.0989 cv
444.551 81.0521 444.601 80.89 444.922 80.89 cv
445.134 80.89 445.28 80.9388 445.359 81.0364 cv
445.43 81.1185 li
445.417 81.262 li
445.33 81.8138 445.125 82.8997 444.977 83.4046 cv
444.829 83.9515 444.572 84.0511 444.119 84.0511 cv
443.77 84.0511 443.309 84.0306 442.77 84.0081 cv
442.017 83.9739 441.109 83.9359 440.121 83.9359 cv
438.112 83.9359 435.579 83.9515 433.814 84.0745 cv
433.647 84.0745 li
433.647 84.0745 li
cp
f
451.896 84.3929 mo
450.263 84.3929 448.896 83.8909 447.594 82.8109 cv
447.438 82.6829 447.442 82.4749 447.545 81.0726 cv
447.579 80.639 447.621 80.137 447.646 79.6068 cv
447.646 79.5687 447.667 79.3079 448.085 79.3079 cv
448.487 79.3079 448.518 79.5286 448.518 79.596 cv
448.681 81.93 449.955 83.2249 452.103 83.2249 cv
453.397 83.2249 454.91 82.5853 454.91 80.7845 cv
454.91 79.0648 453.357 78.1605 451.709 77.2034 cv
449.904 76.1536 448.039 75.0697 448.039 72.8118 cv
448.039 70.6614 449.938 68.3577 452.767 68.3577 cv
454.271 68.3577 455.178 68.7415 455.867 69.1185 cv
456.174 69.2698 456.33 70.1741 456.33 71.807 cv
456.33 71.8802 456.297 72.1195 455.871 72.1195 cv
455.483 72.055 li
455.413 71.8294 li
455.167 70.3206 454.185 69.5032 452.584 69.5032 cv
451.367 69.5032 450.074 70.2386 450.074 71.6009 cv
450.074 73.2054 451.542 74.055 453.097 74.9583 cv
454.84 75.9661 456.813 77.1146 456.813 79.5257 cv
456.813 82.2562 454.652 84.3929 451.896 84.3929 cv
451.896 84.3929 li
cp
f
461.217 84.0775 mo
461.076 84.0775 460.924 83.9749 460.902 83.7513 cv
460.882 83.5491 460.96 83.2318 461.196 83.1839 cv
463.115 82.9876 463.115 82.9876 463.115 79.8011 cv
463.115 70.1663 li
462.671 70.1663 li
460.075 70.1663 459.983 70.5316 459.762 71.4105 cv
459.689 71.681 li
459.559 71.7113 li
459.483 71.7308 459.381 71.7318 459.34 71.7318 cv
459.121 71.7318 459 71.6917 458.931 71.595 cv
458.862 71.4993 li
458.896 71.3685 li
458.959 71.0374 458.996 70.3958 458.996 69.5472 cv
458.996 69.2161 458.966 69.0697 458.913 68.8255 cv
458.871 68.6175 li
458.921 68.5091 li
459.007 68.3714 459.196 68.3441 459.343 68.3441 cv
459.512 68.3441 459.627 68.3812 459.696 68.4613 cv
460.123 68.931 460.293 68.9417 461.783 68.9193 cv
465.91 68.9066 li
466.375 68.9105 466.764 68.9193 467.097 68.9271 cv
468.507 68.9613 468.777 68.932 469.053 68.4954 cv
469.082 68.4486 469.146 68.3499 469.453 68.3499 cv
469.634 68.3499 469.755 68.3978 469.822 68.4954 cv
469.892 68.5941 li
469.851 68.7415 li
469.744 69.2396 469.684 69.5159 469.684 70.2552 cv
469.684 70.5892 469.684 71.1497 469.725 71.4056 cv
469.74 71.4993 li
469.68 71.5911 li
469.634 71.6595 469.546 71.7279 469.27 71.7279 cv
469.164 71.7279 468.858 71.7279 468.858 71.4652 cv
468.836 71.3909 li
468.67 70.5491 468.592 70.1663 465.91 70.1663 cv
465.586 70.1663 li
465.586 79.8011 li
465.586 83.0364 465.586 83.0364 467.493 83.182 cv
467.497 83.182 467.497 83.182 467.497 83.182 cv
467.699 83.182 467.814 83.4163 467.814 83.6458 cv
467.814 83.8988 467.663 84.0745 467.45 84.0745 cv
466.764 83.9876 465.671 83.9359 464.621 83.9359 cv
463.271 83.9359 462.24 83.9593 461.267 84.0706 cv
461.217 84.0775 li
461.217 84.0775 li
cp
f
469.137 82.6009 mo
469.137 81.9183 469.664 81.2679 470.468 81.2679 cv
471.211 81.2679 471.771 81.888 471.771 82.5384 cv
471.771 83.223 471.181 83.8734 470.405 83.8734 cv
469.664 83.8734 469.137 83.2523 469.137 82.6009 cv
cp
f
487.83 84.2073 mo
487.799 84.2005 li
487.125 84.1097 486.088 84.1097 485.175 84.1097 cv
484.225 84.1097 483.15 84.1097 482.459 84.2044 cv
482.326 84.2181 482.204 84.1517 482.152 84.0013 cv
482.134 83.9456 482.126 83.8812 482.126 83.8089 cv
482.126 83.4964 482.24 83.3109 482.43 83.3109 cv
483.967 83.1253 483.996 83.1243 483.996 81.4779 cv
483.996 77.3753 li
483.996 76.1439 483.797 76.0501 483.52 76.0501 cv
483.35 76.0501 483.111 76.1019 482.793 76.2093 cv
482.539 76.221 482.404 76.056 482.353 75.9124 cv
482.289 75.7269 482.329 75.5472 482.457 75.4456 cv
482.725 75.2943 li
483.684 74.7562 485.001 74.0218 485.721 73.347 cv
485.788 73.2855 li
485.901 73.2747 li
486.046 73.2747 486.267 73.3861 486.367 73.5062 cv
486.435 73.5921 li
486.442 73.7747 li
486.329 74.2239 486.303 76.262 486.303 77.2767 cv
486.303 81.4779 li
486.303 83.1253 486.303 83.1253 487.871 83.3128 cv
487.871 83.3128 487.872 83.3128 487.875 83.3128 cv
488.034 83.3128 488.146 83.4974 488.146 83.807 cv
488.146 84.1878 487.901 84.2073 487.853 84.2073 cv
487.83 84.2073 li
487.83 84.2073 li
cp
f
494.908 68.6468 mo
493.529 68.6468 492.638 69.5462 492.638 70.9417 cv
492.638 72.4945 493.906 73.4154 495.585 74.4359 cv
496.755 73.6614 497.373 72.5989 497.373 71.3538 cv
497.373 69.7855 496.338 68.6468 494.908 68.6468 cv
494.908 68.6468 li
cp
494.292 76.6419 mo
492.625 77.4954 491.908 78.5745 491.908 80.2396 cv
491.908 82.223 493.369 83.263 494.813 83.263 cv
496.575 83.263 497.763 82.1927 497.763 80.6029 cv
497.763 78.72 496.117 77.7337 494.375 76.6907 cv
494.292 76.6419 li
494.292 76.6419 li
cp
494.52 84.4749 mo
491.75 84.4749 489.58 82.6146 489.58 80.2396 cv
489.58 78.4798 490.838 76.9085 493.043 75.8782 cv
491.721 74.9964 490.43 73.8695 490.43 72.0091 cv
490.43 69.4134 492.543 67.4573 495.346 67.4573 cv
497.667 67.4573 499.556 69.1507 499.556 71.2337 cv
499.556 72.8441 498.718 74.0325 496.768 75.1536 cv
498.338 76.1566 499.895 77.429 499.895 79.557 cv
499.895 82.3607 497.584 84.4749 494.52 84.4749 cv
494.52 84.4749 li
cp
f
510.615 84.2064 mo
510.291 84.2064 509.813 84.1907 509.259 84.1702 cv
508.48 84.1429 507.547 84.1097 506.656 84.1097 cv
504.604 84.1097 503.122 84.1097 501.6 84.2064 cv
501.6 84.2064 li
501.321 84.2064 501.196 83.8529 501.155 83.7025 cv
501.064 83.3743 501.17 83.2337 501.273 83.1732 cv
505.705 80.8529 507.594 78.8587 507.594 76.4993 cv
507.594 74.8841 506.701 73.8411 505.324 73.8411 cv
504.313 73.8411 503.538 74.2152 502.646 75.1302 cv
502.579 75.1995 li
502.434 75.2191 li
502.227 75.2191 502.053 75.0189 501.988 74.8841 cv
501.92 74.7366 501.928 74.5941 502.013 74.4886 cv
503.232 72.8216 504.618 71.9739 506.125 71.9739 cv
508.365 71.9739 509.994 73.5511 509.994 75.721 cv
509.994 77.9222 507.816 80.3089 505.463 81.8773 cv
508.091 81.8773 li
510.381 81.8773 510.55 81.6976 510.676 80.4339 cv
510.676 80.2728 510.836 80.181 511.141 80.181 cv
511.494 80.181 511.547 80.3529 511.547 80.4564 cv
511.626 81.057 511.422 83.2523 511.321 83.6234 cv
511.256 83.8763 511.105 84.2064 510.615 84.2064 cv
510.615 84.2064 li
cp
f
519.063 84.4749 mo
515.3 84.4749 513.586 81.5101 513.586 78.7581 cv
513.586 74.7415 516.987 69.6937 524.582 67.4661 cv
524.674 67.4534 li
524.905 67.4534 525.045 67.678 525.078 67.8812 cv
525.111 68.0921 525.029 68.264 524.865 68.3187 cv
517.053 71.2298 516.209 76.5726 516.209 78.7337 cv
516.209 81.429 517.571 83.3841 519.449 83.3841 cv
520.932 83.3841 521.893 82.0999 521.893 80.1175 cv
521.893 78.1771 520.93 76.971 519.379 76.971 cv
518.986 76.971 518.439 77.18 518.213 77.3245 cv
518.074 77.3655 li
517.844 77.3655 517.578 77.0179 517.545 76.8841 cv
517.506 76.7064 li
517.675 76.6107 li
518.338 75.9046 519.476 75.3968 520.445 75.3968 cv
523.038 75.3968 524.438 77.5413 524.438 79.557 cv
524.438 82.221 521.976 84.4749 519.063 84.4749 cv
519.063 84.4749 li
cp
f
425.847 82.5384 mo
425.847 84.1419 li
79.7466 84.1419 li
79.7466 82.5384 li
425.847 82.5384 li
cp
f
3.8042 80.7484 mo
3.34716 52.8182 li
19.6416 58.8221 27.9726 71.2347 32.1445 80.9945 cv
3.8042 80.7484 li
cp
66.0366 32.6483 mo
65.4184 32.6258 65.4145 33.4031 65.4145 33.4031 cv
64.1294 81.2718 li
34.5161 81.014 li
33.5635 77.9788 31.6445 73.6038 30.707 71.5198 cv
56.2993 78.055 li
56.2993 78.0511 li
56.3432 78.057 56.3852 78.0648 56.4321 78.0648 cv
56.7602 78.0648 57.0268 77.7913 57.0268 77.4515 cv
57.0268 77.1859 56.8657 76.9671 56.6401 76.8812 cv
56.6431 76.8695 li
56.4184 76.7874 38.5776 70.348 31.4258 67.764 cv
58.5962 66.4847 li
58.5962 66.473 li
58.9087 66.4554 59.1548 66.1898 59.1548 65.8616 cv
59.1548 65.5374 58.9087 65.2738 58.5962 65.2562 cv
58.5962 65.2445 li
30.3789 64.0081 li
58.3413 53.4754 li
58.3413 53.4696 li
58.5513 53.3758 58.7046 53.16 58.7046 52.9041 cv
58.7046 52.5643 58.437 52.2908 58.1098 52.2908 cv
58.063 52.2908 58.0161 52.2996 57.9731 52.3084 cv
57.9682 52.2967 li
28.4868 60.6238 li
58.7046 35.3582 li
58.8462 35.2479 58.9341 35.078 58.9341 34.8817 cv
58.9341 34.5428 58.6665 34.2684 58.3413 34.2684 cv
58.1763 34.2684 58.0796 34.3406 57.9243 34.4471 cv
26.5723 57.2635 li
55.6059 14.1658 li
55.6714 14.0653 55.7104 13.9451 55.7104 13.8153 cv
55.7104 13.4754 55.4477 13.203 55.1138 13.203 cv
54.897 13.203 54.769 13.2908 54.6069 13.5096 cv
23.3667 54.8211 li
34.7041 15.9608 li
34.7222 15.9022 34.7344 15.8397 34.7344 15.7781 cv
34.7344 15.4363 34.4697 15.1629 34.1421 15.1629 cv
33.873 15.1629 33.6518 15.3436 33.5762 15.5897 cv
19.8496 53.0789 li
19.8496 53.0789 19.4795 18.7127 19.4795 18.7088 cv
19.4795 18.3719 19.2119 18.0965 18.8828 18.0965 cv
18.5561 18.0965 18.2871 18.3719 18.2871 18.7088 cv
18.2871 18.7137 18.2871 18.7196 18.2871 18.7254 cv
18.209 19.8973 16.5351 44.3455 15.9751 52.4891 cv
7.80761 27.9276 li
7.6914 27.5301 7.46435 27.2088 7.00537 27.3162 cv
6.42334 27.453 6.62548 28.203 6.62548 28.203 cv
12.2422 53.2938 li
9.44241 51.9315 6.44482 50.8494 3.29687 50.078 cv
2.52099 2.8221 li
36.3218 1.241 li
36.3218 1.241 37.1255 1.2781 37.1255 .635603 cv
37.1255 -.0489967 36.2964 .000803331 36.2964 .000803331 cv
0 .000803331 li
.27002 84.1234 li
66.6216 83.8499 li
66.6216 33.4227 li
66.6216 33.4227 66.6411 32.6707 66.0366 32.6483 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 17.1.0%%For: (Cindy) ()%%Title: (cwru-formal-logo-white-no-tag.eps)%%CreationDate: 9/1/15 1:19 PM%%Canvassize: 16383%AI9_DataStream%Gb",KH!fjJoC2>UGRpIA+D]Xr7<VL);/fmH5S7NU(:a+1miT<rrZp`7\tm,%!XJ2WEhH,RRE8tp1Wa1op'a))[^sB&%/jPM8m$q3%2&qEUj)L"5?L$BFA,1Ii1`#]'rS/JGmL@,;OZ<(O"-k+f=?IF\73]!]3#&^=A);GU)Y"&b6%:-m#QhLr\iCd-_b#QUS()\QV>E)*%:0?lIZZ*V)m8F1W)3>L^&bPqY6R#@Q9Y:8SeTB02R"R=.%Dp0%3i[E`-9nJ_'n(juU\1qoGZ(@b'@?&b_?s]'Z^4H(daeu,kWd,2%/bRd;:De-#V2&ta%PgD4"shY"eNLaI2amEC4O-6n-PVSdK:uu.)NKQbiE/2\",M[U+i4SJoL?]K5b&*MM*Nc56E<t9;4j@TLkL:\%?9bA%%gMr_5euZA"M?Gh9S@=dJqFCYKck\t38;>a+<6A/_'!th"PZ:n-pWH;0efK`#jQ+d&.Jep!ROahbk<k%H64<)/51%oW.2D.%^Bn\4,$Pc!%S`C[<4i/4ZmJ*_^RtI8hqV!('QZ5":0;P7cf4<D>gb4(%o=&,(]#Bq'(d7hI^0,l,kFT%!70'k.3+>#29***`kG.G%U&^Zb$+>EN&N-Z;pSaEHOC5?R-q;-A&33!Jn1#-]7f?b2+H2bHJ0tAk",-Hk[KE3iR!`CP^cW@I:=i26ZTCj"bRb)7_Ee5gjB3W=%NWd3MpD'*694YbM^`$]I&>%_q2fXXu^`O**EM'JA.iKSJ0d7=IH,:1#d!IOAL)eUV7*8h.-ALE)=_0[#l[ZN',eIHgLd90&#[(X;%nI1d&_]1Z[_:(q3#+4@6CZa6%)I)Qa%tj@-&qQZp,SRIdrb2p=GOPpr#(uD^0Z^s['OYdd<[7`>73_5&,Q^V-,-Y#l;CM#gj)J0J%*f";LK!9D\%SOe$YS@!>5@LO-(7**T@EiU(^<'tqR6gqg/JKB@=M%C[mgB<-%bkL%^MJDP(>61$-N?78-6E)<V'&P&':+50nX-WN%+@bi6Q@Tmh:P^r*$+;J)$%B`u&0prV+gH,u+[_4H-c?u'$_KbU@%/])g%Ji'L_ouBAI8V9N#s.oF-afs'j3$&:UVU.3SSnhmqgn6%emZo#1#bj1J$9X*%t6i9lj0n!ZgZNYKE&ed&3kVs=fS]K+b&nordre-it"B-T#2rF':+7F_,#4g=Y=.Ib-hgbjEUb!SECuCbh2p"%</7;P]('lN0kYhDHd;>CD3ot#Nu)#Ps+=l*G!'D(lsOZGC\B?u%t;An/:U%b=IQI:i?p/YZ*W).cK=:"90'EaQFhD`k';[D2V<):%;cmAak64)I/D]"9YuGAjAa'DGcAr6l)r#R=MJo&>cIQXcZ[Zf;fpTs&1HX_MD-.&IoZ-O+38<+I(-=`b`L4]o8`Y;c]6V+,q%)$l%H&/*Wi[FCt(<6ILLo2N"/Q.5i/)O^J>o#%sP9>*Y%9G%Q)uCH01^<JWp(+<pn5&tKrNk.o@J5QQ0Dienr8PKX?]82;@PPUa)#'@l%ZZ!d3ftU48r@S#lr`STu*;`/%Qi5+jg#(f(m%7Y[A*#]j48?pX/,Ph9`Vp87$\YgZE$8;5oJH@M7RlK6J:h[a%pO"D@_ZL=!RtPt%r!EWB^HVV<^(\5U2de5-NnB%-rN9MTTQGA`(J)^aH5!>\qGZm`aO&D`fs"1T*9e6pTWIleF$_ZJ+)4r^)dhNYe*92eVmXO+9`P1k%(<UmDm`;@8%]n.gAS#5#Rcl.!YArqLeHS(@=Ijl/+9"Y#l&c+Mn:VdiX:HR41'V%KP=(M<U?;U=Eq^[FL'3_R@>iGcJ-+hI"Gh]1%TH]6tF:(QF@5LAI3n?us)RdWeD"ad>j6SR3Gh"-?W#0<)R>sA[)GTr0YjtisFRCl0$HoVB)\l=\GWfRD1trXE5hQdsiE*/s:g1I7%n8aefB?>V;qoOqp::I4RJBE54-2*lI`qhQ+d/EBW+S(`W8VL\%h.E:ZrYeS2!VYGTo;sVVEZ3D/[nQI%Emj<=]+'L*\s2XLK*0Kg%%Y63HX\QJA8gFs2(dS[d[Fuco'LH<X.A2i(!FWDI7))^2HT_.&TCB1jWqXJ![gu<>pk5j%KZ3\1=hXsG/c;('2PI6F1;EHf**F<^%%JiH]aob2OF;n.d7QISgM_E=/UnU8`e*XU]C'`]%XM-J5AVG?tA+C":lF&\MG,Njqm-Z3F=9VNVTCRU6OSpV4ns=gA+ZVgL5UV#S%?EG[us'asXh[eWGPX'%Yrp@-@*GfQ%dOU;SL['>3-J0a:`W%nm1fDpNISF&MgM$R258Q5DZ9!ITeb!!-h&gd\3e<3![foABhuq65%0m^J^@WF58)H3<e2(;c[YZ3E5QuD.`$VdfhN/LJa*)d#qqORa4i%G7k>(7MZ3,Z5C1=UR&`tppenNW&_OKM?i5jQ8*CQ(kQ?U)9K%Ok'9f(^=qV)bpXibmF3,$-]2FE$UN7rs>7qX%P\!,!a\Si^CQ!3lGCa\^VW<N1k>FJ7\a?O$WXJ%i9O[0dNtdYRqKur,Jg<oTX&f%7Fp21+"S(8on0RT)/<Yl\f"83hpDJ#LDdPfb>E-BdFR#U%6V)MhWeRW[J!S(>S1a)oJ^!$D2&0C@fM>RN]52=_`$M`k+2X^Xh"2\%0Z987>B=^OkL.r:gR<InF)U0a4\oHa$pHJ7XLQ@gg,P;B"@h]dnc:g#6iBCFWu\K7s8.$/I5Uk"K>hg.P\P$"F$+0uW.2B,[)7PX%/ZnY4=okqh2bbYJP1/s29+Ea/:TfU.9t/keC6JC^-W1=Z_.`e#L1*QoR@Yu\4"0m8;X;(>SG(QJriFM#-iDU)b_U"/q]qC*DaY,8%+o[^uXn_':5I3mml/?kRc@McnnW+pJLFO]7nC^3<TDs(:M\K*:psmFZ$?N'D3/6'uJAtNb9fAtcP;IoWXO81\%W]qhe:?T1Dr(Ao%bLQIA-6<j`[37_oYR+90gWAC\Ql24i@H6pn+4NS+FE]\nF7+sYn4-AVDD<\`/(,@#6Z\ZkX1kL9ThER@DO$S/XEAN=R+W`f'k)X+%0_>b^%*9X-U8r)0o^G:PD[duFlAK8%(,PHF84P#6dOZ0P7jRjSB(Q3pG&Q)L8M]*nB0]2\pYXS:e_D3"0NpQia&Y+5$*c)bGtB`_%'Vse..7%S-i?jT(n*@d_aO%Sk)\[ue<o'=$NQ>irdg0E0@VGF1%/jHt,$CB&B,HO&+8/af-D$15pLUf&([opN(bqLlQ*n3m[bT-8%aF<U:Y!9T>Gd.AM)7%e`ilap-ps3Zl1c+F4qZ;8LO_KChp9EUdD<#*A2HQtsL"TLor>lhamd0p&9/CBXejZ*S2Ws`%VRc6Jm_nLi%`p>XgQ]kF9?[hp<EBS4^^`TS!&^["spAjp?kCr@G=BTKL?'_:o]L=!']pY&NOM`6lY>TdjjZib$b"Tc=c>0oA)_LY*3EpKWV>KO"%O"r[F,SB8&69TcG`hS*Ec`6;%pmA.@$F+mB:p)l$ouSNa1W3O]UGZ56"sa2&]eR&-erek4s(@nu9$"a+@ZA+\lZdgI5<l?qh9`XR%1(P=f[?5b0ld;0B4>n!'00[rUhDMO>]9T!5fU/b`*5R[V?c*gb9F0h+NQl=03Zll>pA8II5P9LmgG$t^,S!N5e&9=JV,u:E250OT%62Cft):Clg7O+DIl!S8=O"S7?>%Mg[AXf@upbN0jrdcJj+[ok\+#M)g'.*_"`_*?%k799=s!</'b6P9<:.WCS1<l-bo:^`fbHGH6%n]bDa$ufjI][e1FPbF1AO,[\NeV+l/naR8Br-:Shc'U)XkTK+bqipn2PCsp!#NUqO%D/e;co!cE0FU,llXCEN@b\dS/*d)c*emf0%GAhPT%`<+/l:(WU=r.LYq57ZjYH;'=j"Mf:T/Bc9[`;fUa(0N:B%=isl5tetf"BVp3)"C'Nl0dbZ7\2Vk,h#*j"Mr-Z7<n'Lqi%2%9QO^(_r,%12DT2t*+gMX?#sM9_r,%1/otQuO2I=rc>+U(QF6b!5,W["#`gh\_f`ULd):d\m3qnHZQ=Vf+T/q`r(uG>Iq`EhXI_d<%_plqVI]ue`oi\"IpNE&kEt.`@"sImV4ZQ`'VD$=@>D]eRBPSg>Y^(@AdJcUlQ=n!c^KX.%+:5LICea!D<^YWa1IHH]="@rgH+$K=%Coa1FjdD,kPA][8c(-670X6@lr).\_f4,>04)Jr6:%W@q2V?)hVp/R4D>p\S6'^kf<56j/J(;f_T<@2$UTiVo`]cQ-;Z>7c!D5qC%Fcq+\25#pqiRdCu(W&ca"oMCF$pOVjnGa*q%fSTm0<CXdH?Rai[b9a=@)aF9M$bkYgFH5+,Q5Zc:r-B?f)>T4m]]-f]>H9#L*]3H%-utJ,ETN"P`ZN6>KC=R=n/$W"]-(]cFJsq^bhO^t5i2u&lZ,DncW^'-ipZo\BdMBK@Bh<A@*Td[<KFP*dXr,p#"lc*e6pS*T7ene%&aQtBBPLgV':FsD\T!N2!k-^[BAd?b$j%uk]!6-9HstV'$!B1<U:KOj)P>7_FpY"?'3]*.1H=PC73qZG9BO6"HUopJ8S::_n9(7D%>!(opG5eL!FFCSWk*h"i17$Yp_!Q=9)K$pl]+/ot*G+!mA2UB'hKCXmB=OWTn/n&:oBd=aFpiTK\8AQkCq#MV\T5<9]\Pp2DBWr-%OQiChN43$4gF_JdEK@3c(36J1DGTdYJ?6=M^qT\^4D!5SRB;piX]nijO!A:XXO]i"rRT6R5E*c=Wo'`S`Pn_3rTm4nHVY;](5n0?%ZJ+S]S$>(eDN`-,X=e8CAB`Ih@.4WqVqFbWXjcYbSSmeI4o/\;C3Tk,&Tn3bbjHj,oM:hA;j/G\C)t\13W-h8HL$RFHK1<NgX[=Q%DVd?/9Dd9dLGP)tQe_%+GQ-a3^T4)/7Bh"4W'9ubb2FSEn`Q;jL5d&G^[>Jj0h@c^SMGTg+7o6f\k%<(6TP0F-Xq+t/Q(Z]RPeQ"%!oHj2U7+@7@e0PYJ:_FNd$h*3!ui:nYr$;mc;sjo2.VoADENJ/0G\5`*,iVfs5RFpXl&:(r&1(3L@s;?:)r?/g%oQoI[dIsB'ZqZ%qJEZiS#tR[laQ]GZ=6a-:2HIt>:7p*IAh/jneuhJ2DR7=K,k_sH$RCL"1Bh;,1l>p%K&9g<r<F:r*((?r!j1BB2hr=6uU<J)>K#h%q#)*/m\E0mNV6Z/DoLMuX#'`K#+Fr5\\3K-D:d(DPfrIj\T2Mp-L9jgm]!Tt5g?;lJ(<8`525t3BA^:Zj7^bI_m[$u:3$4-j*+6u%4(O9KpNP[O=s$>CM%TR92i);qnlKSr=OW(R]%nE+'A.#RC7-!-FdZ(YWC'n)n4t\7q>iuBkl<=7TGXcidR!]t#H.SZRR_j_!AM:4%=;PC``Y)C=;;#XWo[Yj'CX^KpK^H9#M8'Dt`$0"%'E"]m^E:7E#l1_[q7#*6EDhcHrT>mBia^K3N/pn0:u[E5ELd##VoEYb7=0Hi%X%d\N7(,jM[8acH:5p!Z:pI-$A+c?1pk,kpC963r]6.kiU*SVW27?8><HW'SAZ".61iY'\'+M9+6T-<&s,-7(7gH8`0uoZ"kmuh)%1hU^0E)`goMg[T^K,denLAIK>_^<*TXJiPD6a\P$b`Ju&\s'"BF&D3FJ>I&;^5:$3A9Ima<tbE.n8LFu"qp&?'<"L'r-<2XaV03*%Z79\IAOh2&G#j\2NPE!N59aAkpU2.WMd;gG#P_PZ$NIp#nEo=+gqp`OQPZ&dTsf.]i=+f@m\8Thg>@:#d;O"CeYZ#Mg';\JrVVHj%G5'-k?;P+J*O-r??8M+[>?@l*Y%upRdpr/tXSCI's2LTM1P*sIm$J-G5JBE,l6US*nFb&_VO0pIZ]3Y6n9b*Qmb<NW[e9'lRs,tO%bg4/Or?"pD\)uPugfkMu[l*rh#2e"igDYHDK5YPpaUC@LdpNgu^.gbWk4`?B'!Se='W>k#^>FYg2H+KF^-=S,>DmE8nSKkl27E9B%`2;17Ah[A-X"V,*<hB\W[T9"-Q9T9[4j\<:P9KI_`_A;c9LV[ZGgO__hKONf,HU?^(E49V]@JoICl1d9r;/RaQ]g@LJ<_.>^ZPNU%5OHV]"7;+CL7N#Ma_("_b!)OiA@"AnPq_/1*`%7XnU91tks'[OfhCDo<L;I;OI9<Ps3P:+5Xo"R\[9G32QQ6_*M[r_Z^Wdq2IGY#%9Q.@"!PTm]coPb@1n1ss`T7-oObWCjBp28kg*FqA40hJ.*''3m[4W)0PDl2b4!p\mqp>!FhKprPT`d)][6MDH@#b?6bqW@leO>Ie%Mck?cSrcF`q4s=YZJIW&ck5GXbe7'ilmmgh558R/fds,mkBT%C]aBr&lOKd=2B[_E5GhrP\nKrb\P:)93&L^4JECg=PJ_13mGZs&%`TJMls#6[-PR.@L>B+e>38[fd;LGq4<mt?SVo!gNm&d_n[qNBhVCuf:V6.?$=0"to:7/5Y^9j$cUGmF;h+VJW*!<WlRBM-dd5*1"%)$F(6c\IBd,D%SsH9WS#b\gmk]SOQL)2!P^dZFj<1a3.5%nR?>rW"/@m\E0mNEcVP[pkLoGL@@*-B_?0e&o5KLMk^`mDP=r/&$2d%.fh07G0ZphDV*4"A$bS!\QqFLI+8.qV/q(_d+^+2X/HDClJu-<"HBJ!#b-,TdDfNW>;L\An@GPURsuU/jsHIbCX[#]QBnqkA8+:1%:tXAmXFjn.XFBS%[;Wnq>a3Vpr5lnos5Rc/6.N710rjo1p?'u3FV,H=f^4ioJEnC62E@Ar0=^(Q,F@7E^#J'uir_\4fLFGlhhpqo%*)qE6FLKe2XKMn3rJ`GnaG-)42XjW*brj3_g5&iI"^rF4,=n^CG$O(=bT?mNebM8kg@L-7FdYm<WbfQrH#-DQU!%8BO(9!dp8X)C%KP]Sq@3$>V!A!k]!5e]kSB"N.kNB#-RLYgrCEuV4Nm#(4X5Ebtn6'bSB0XIM`8;ca1-]p"";s;jH@m,'%``FF//##$mrKP-?O'X<%MqTMXT:>'RRE&];(E764r?:Cc>e8hmmB^GRCn:C?b.9:kg76^k*K?O\s("ot&cR**fFlUt_+.r/Ujb`C.f]^`VSpA9c;:.hU%F'#%C,B"G3;Y&I9WITfmBOWS0r4giU*"n9*&!t3,a_SM!0JeYBui'[mU4PBp`b1Q[=pi/df\KF/c:Hr$]B7IkOBA`E=T^1JOf`D6e4or%bF@DC!`'nV!M'P_A'<k!#F5BJ,ZKUfN5Y-%i`IB$e7:n>:/i,;1AoJgEXU`a-OfPn!c1-6@uKoWV:(Udicm^)d"i2=pb2fR5Xu>*%fb;-n')_b4rkCE9r-n:JOqE#^GK.i<PX0epFIs]X.PT1N!sV,rWkS`I\duXT57-5h+)1f=qO41KdfE9@F6&"]f]ta#2dcmc9.Dje%oaj'=5](;1&&\u9K_+/79(ol\?e."*&(QGV_-Zk?ICBpD[fRIH<3&KLmePP3I!5rOqiJJPASd'0@)U`oq[_%=]<-C=S#l=039Ku3%ftRM!%eJ&3(!9L&P5fI;h(30A#Q7gPZW+\HmJ`.K:M<(Jjg+NC#8dfgU*5NQ_V<;&,"&WP#N;2Hkrp@5iO?6ug/3foSkf.<+_@3@%s)Cl#1`+*A]adG7Q0O^W#oKHnh'Dl:)NW9mY-*(RcpN[Nb=P?!?e:s9#$^3Q'So5Q)JGh\P+WQ@Ua[M'24IW31$n0o\]nU%!nq$T%1t2CF4Y-o]_"@M^5i5HkUY[3-PeC(N#aT5.h+0LF%-u;4BU:CiHm#i\*kR5D2iL"6KP=nO[9-BID)asp=@8T8JASSn7PQ+TpVtTf%392HgYu$6ak@>u+KRtqe_$UVS%OaIJX?&XV)AV0W;bXNapKd&k+D07FMOK,.LrTdlY);FuF<s>+Cf9NVB:kMS&^Z"JYS,gEL5UdY%!>naKTrM"ijWHlr:fF*9o[7B+Btqt%l?`L3O:o3+PHGdL18+qni@FD,7)Fj-=;n8+N0@bCB*lIAjR<#9'j<pS!$VZ0T.3RHcR>[0%GXMopRV2ZOW9[IUGX.:9>d4QqjG7W["GrF.Z_jW6g3QDPJ\Vp%]#5)GmAZsD/X*'H)oNBICZrIkJuY^D!rgmqNpH_,bkO^r^\p[`%*V=_qTEbif)9[K2.<QQb+jBdR?k<PSYt@`n&/gEU,V?\T-Cksn+[+??Z4t&;h<\!.)-Tiipl\8grWTRYZi#>U_\q&Ye<"Vdhf'jm%Bqd!S_4KqrkRV_h7'ATkK@TC&-/%bI_o.pqeiL1fJEXd[a59'6WeP.Ks(#1h@?ur.s/tj+r56ukh![/Q>o!O54qnMqinRn"f4MF0%re3/N]FWr`Yjt7n0n5_"Er:S&<^qX@Ce&po/)L3N6DK**/7_@/h,!+X2oKI>cHd[P%YVNK59,PN+u*KQ)_r\2NSY4D+VFZK@M]-q%/K0NDK>F3F&da5NYS/e@)ktrHpn:_S0!b@M-s-A.lN^f4qro^AW!V,YlI)F*LbIDAh%o1T_;Qh7@F"fpn`N0"+nt,lNb')SP\)=!%NP%'Rla^K5!BD04]hso*4;s2^UX;'q+;P=&U/@cQkB>RW(oaIn)pWTHUH\M>P%6Q(N+7#m;`&NK-)$L9jTJ@9j:0/hd23EUTh(!D%H:$SX2].^#iKic\kZbK@e=?s%0'E1g!>^hG)"iUhIt1mTJlXS]]od7V&1>=l+qP/k6R3A/s(n3;-4QDS>230(eL]bM,pYZtWN2#_%ntTseNp/_fTr^Ld7D=JD_K"mt*)VZ;g`9)c_P)6LGeG7S\*<.qqT7+5&R/6"Rt^o7Y'3p2)o5-sZ@X1IYUh$ocNA\XZqCVAP(kY0%U3G;sW/75]X9d'kneD8@T>74),EdVE_Z1P0(*L;p)\`UuJjNVsl'`oRs,^a4Srmi&.L\23R"$N"NV[R&c*t7tZI/%I:3NK*4;p0A%4GP\bdO0fLN?1YRkZSo16Ljs@\BFRJ]&+t8>%eG_Ho6bR3#f<)rsE%DCsYCXPq(=[LE%B:Yp>D\&.\uIYojXHMcOfc:?koA7A9kE%#S@AI_5N_>"`E4<fH#1O,aOD,U3e*j0^:I[][m1$Q?,I@GcW-U=(Qtc-n'0bm#T+ZO,aKQ3BVbk-g^RHeu,0gr!2>DB%4gE.LI?P%c5VCZ#X&+e=?pg^aM,0hUpX@WlutrbJ3XXhImDA/!jOl=Y;,%U!<!GIN8Wh[=!8J."M,2MY^,)8[=IAFShOA\37%,88[Z.YJb><1%bL_t?H(eL-On9;^&6,XNFMsdb!;&NcEFP33"6.TO'Z69e\0L@rTQO&Y)I"HMQdrU;:.AXMe$%dJ=^\+JATIQ+,sNhoKc]c"VdLP[%q_[5i>A?"^Ns02en84A$>#^F1ZD=LceTXGXbe3)I)L\@!i9Ll"rUIh\'Fu)f33*_qrt&MB5ABhZ&3!Q'L2KoLZ1S_P2O#Z*>4k>_%e"E\57T8YF)P`%=jr4ZKa&'IR*tW2nk1Bg?0UdlrH4e't/=H_<,m0#WkS@0mVUs]*f3cBoBe8TPhX7m6psh/(R3+RF&M^9cN1dGK%+U&:c,4V#j*;BXP&Gfa$((B--?pN$'KK!Ya/2A3`irPV,`R=j@0#Bo%IL2I2$:-IX)O0iZ&UH_lH9m1$i(b7YNh&Aa#ROV.h@e8n%)YHBc1iLlo[0\it@*8%jWR=(2V=C@6h\9nAI'OU:gQ,-K^DSBk.o>k-#bqa4d1O;gp(o_G'IJ9V@H'5PSe9EHDS1;5j"p)eY_aaI%J[%9L-Uu$N#e$S]VA`0?(-L)b(qe]1'YQHj:Jf^d*=[l@/b8lX#t-drN"m7P]dK&Xf3d_IF1iq8]f/nlA>SsQWF+<n,?4V6</i8h%S<c[8`dTi4=lELqX*?s2lJ#/aoHRbVE(?"<R4b[dVlSLWZWK1W6":)4%%U_n^UT:G:(E<*8,%:Js4WZ.0uZF+nN!tI(Mn!06+0F4%a*Wr\;EhCU8DP#EQ_Dkrq=WZ$`CucK69]?+ZP0%ZY2;IhIH<ZKrk6h/]D""%llM-bj,8H6@S\#0D%'e8I$4:Vh3:jY+f_!uSg9dc%YP6srVQ"V%$+(Mn($pe@F)dB?HHUu54mqrm/s"IoeOdfHN9j:I\^92#k,X"$@'SnKrptjoYe=__*PK45GtlnrhL"WZV<&>.WT.=D%/X70"#HjTO4tSaOXgZ3/LfO5K?Vbb1[teXoTB\Wfg6p53gPJ*-13.d/kF+g74*>psnA)mA>omY95Mp2ED>u\AeiL-K4L)*'FOd]Z%AGbje[\ager6+&6k*t<K8%')2+!%9H_0oDIb5L9kAIn29=_`8M]Kb<@*&X3r%t<iUo'LIQD40nja=,NnqabhdcWcgOrUdnC\6c)t%EcqC$p>;9!3q!2'p;kY[>:MdP*Xl:$QUedRi:WlbNV^Z^@%(f$&[#Gl&0NlPkMpnS[cd`,I0f[RM/Lm7K(1->:E1E7Q0Cdh!u?Ne%Z9=I945PD,]Aqj)(mhRqaDNc%V;GS!pT9cMTX"BK^a=h[J5A"A\-n)Q-1VVX)+$A11HfBh_m/?PX6_4jFt[o#np%oWF$2=`PmDd-%NhE$h(;%>dEu%+"?-0r<p[.`!J&)oH](7!pYeX2q%']/phj$mth1=AGk6VCViT0d4ol]qf7T/G(J9ROjF00sZR<,&(DdiqWa2ona%7"s!oYUu'>,?!^'nS'EB*;O?HCUl*"Y3ijrcBI>*?7++1]/_M*lH+.Me"!3aHd0`U/J&&[T8pWKm=IC$kPXA\ku8c;bI')`IIE$.%@XTn.iWnh,cF'_K(8</V90-A#h4k3uKHOf`4^TRApR0CgGp1-\S\%_Xo&1:B:b:C5,%0mMh6%/,Iohe2Njt>A4It,UKqL!j,M1&e%;98EeN;l#1!$=XZQ\CW^2!EFdD6fA.SPQ,hUf<;KK^ScR5;G.lX9Rb<\$qi-dV4"HV[AI_OYbaKgcjm?ro:m9`@u0o<B3&P3l7%I%+@`o/Y+HA`gQ"E="ZTF6]XbAP.*9b_G!KQfn%hHhqE8n&aL9E)Ic@*L.V)b9-R:fS`h8^`7nt*nfTAc$j>g/=m@Ga&@'P>j:tN6e%cVB%gDN:ED$2WD5#C<hfb&U5GbrmM9FrKn\lR6kOTZGO6Qu6QKj)+ul9@$6Wi7pIGM-(cqM>[IBagY$d?C.gYoB12/dEbl:a+E6O%]mNqPe6@QIp#A0tl^g'C/:dF[.?^i>d\!N9g)4&7a)2qMp1'FRs!j+?P]tSXJ\lj]nHd-^)UC?hhtqd'BS,kJ<\X!W*0c#!4?5si%p.'ndE]7M8LqeR=oX8i)9j^"_LDIKiK_+ZuWEOED3a;Td&[E_CE'MrL+2#eJJD3Dam^.*J)F3Ep.57U8%E2Oho\o\=Co*9D4p6dW%Oj:RSbnE@]Rg1XP+89$^P=Q7u9ip/M@CFq(BgL6bYXg?iEDc9@Nq6[,H4+`g4<1ZGCR6JsVLS%._QeD!k@ZVpg-#k@mMilRV0$uU%1u@]L_0t'E52b4CcP"353<d/D!K.U=I]AMi-/=OIWUMHQZ-2I;-.+OD1BW>?(0*ae,Lphm#/35d[=ngjn6(JLPs4mUU1$jc2GelE%j^F9]+Hp5Rp`Lq@Q%=Xl6o]!5YWY"&PgK6%:u_frJ\A%U/tkH/>QC9NgD,MkM_OK3UeV@_4$pa$<Y,N_M-u\#)FZkNMF!%u3AFC%%,PW%JE@R-7/IX_];K;JWF<cm?MWcLrE\,$q*5&*8csdN=@MgY>`B^YM+L+>e#Rs0L3B9hG<oQmX8nba`p;(4)O(D4Kj`H92m5"Mb%@)Y#Rra^:JPqauF!Z!Br=Ga,RjB3679k'ZtR%g"dPN,'L)&Bqe,H>4M>3l:s:D@IL1eGbSSB?2B($hU'MFP-r&a,^<@q;@''Y+to%L6P609U-irLD<+"YY<4!;F#=l?u\ail%:V'+HhB)LNF5<-e/>B6;<i9k1C4S#YVF4T`NZ`gIR9B?DDEiq#sHeOaD!c#k5#?\*h5a%_t7gCo)bkU(F-nNOfmMI$k"M9kZR7@Ha+&o&p?Yg]#jTaIU&gIC58c5J&UQmh`mG%V9H7n;(!VmJ^R/RQ33Wc%0KXZ!DBXi@[[mK%@'EmH+pUC+F1u<k;phB'EZlIim@>I`5`Up6)$h")N'?u+o,`*;Pe/pR%S9mHe>`*-Y^2Y=:<j&h=4ubu^[2h8EVkPN.W1fOn\mD*%p/:c_?Y;/0W5ET.eNcS@@"CWr9TH)?fn^\,mr$V%fCRbP3HOth"s=p=]q(uQ*c?M"bk:>JhCFVi.>Ce"b)m*7[U6_"mGQO(*V:og%W*So$!sBC!hRuc&\b=:XlK_JWJD-OncEd:i0X1/CD[^?K65I2_(_ShCU;gBhO6Pssmd$R<m=%KO8*tm+'Blo\"JA?W,9"74dBI[5%;*X'ifP:F\"9gcQ"1Cde7H@;7#:+A_*p5!,^eHNY!>Ms-K5AU$PkB0_-OF[ljE-R<,!Ea8hL]DH"$%\KK1ZH4+#FnkL!G<+bOZ]p%8ii\X<9tu84r5S3V:5a9KrG$p[=:b<j#uZO$P7'`$6SqO4BHof[XgH1&,67Gd%qBANQq:!0N)!obO`u-guR15Xs/tVKj;FHb-Nl8%=fQEMLpM^!rHQ)T26Wa.pUA&r6@Lom#h\0i(cV<3mQKH#/D;YIB5T1JJBQF"MDOb":\OG*<V=(fF11i[,.#bqrb-6(W;+OPNKIm!%.t%nYk8kJ,D!0?7E$^G83mUrI?8-ufMbNTf"]Y@k>F`#+k\5=goE$BunV,m,n0_Cl^)nsO=-2.^U:15,Hn&td]4G#A\rohEOnZk<%H;B"]%Fh,OUPl#j?p8aMEnK".C9dF8`oVj[V!`&=1^7Ur:)q^_"^/!f?3!!/g)3]6+NJDN:^*u6P5n!fS?J!07dB4*^ajDf"iC5/%U\;(cQ*/r*:S<8,hd:V&"[R'!*^Mh;*>fQ=]O.>d=r]m8-#<GFPlejn]g8Vf;1JTA"-N5)Xq@D.L9jt0&NG,%!@J\RQ2XW((Ock(%P#$"OZOejmHjSH2AG0WXoa[]D(medoI%'Z`[QLP-eQ5OKU2#g]_D'0D"p+=@7c/;HkBf<`nanr:Hl_MN"4D87Ffq)ni?[X)8Jj)O%J^!%5$!&dKic,^U>Yg!uJCM'g]^%9"QE414ha(;#m-T8B;Mg1tmSUUGpe2tT$W9g&`+El\Gf*u\/,$7F.8iL:-#5G@ddI0ZqP4G;%n+eA%NNUGqSVZWu6bDhj+Ep\pg_$$:hY52NYgAs/jm2p)>HV8T[4V*bS%bDi_l<9$^00\^($ZFpRJaGdJ3]+_7*!$BqfJs1K$uFA%RI0pW,K4oedra^&pQk$Wa4aq>*tH,s8CST%3BH[2N[Z%O"m,E[:d=7?P`5m1hZGRRT=38DBp00:^p0?*@u\m6QRL\%\S#<+JNd,h%qt:^DFPNj?75W/"!>1!h^;;L0Gr#>L^CBt7pDcaOY+JT^UGsud)HRE/$RcmPh9^qGKi!n"X4@!:/b88Mq;]d+Ke*u'V/&)SaRiuS%0n7";h+]2uDu+._,SF^DMpVIA8b;HU9UaaJqR2^dT&ksfEOL473DLk-Fu"(VGq<R2ZM18KFr92hQfrFuq3!gThGuD*LVRG4i88`q%@.EaD'HH;6j`p$t0]A7(D@jL3d4QV5(OPCimW8+S'MXP!=eH7I%n0;cl\!",'FgJujk.+VY=%_Ac8U-s,Ius]p+08!hl@OX]DGTY%TBeB7r\\C6+64t9Mj&N5F6Kj\':5l[9=e0Y\&k$!oLo6hk.FY5>Ei86bl<(@@$&fS+e*o_.Uq]0&]h5I]+u00L2:eg]l^uSNlH!%%j.VOX!$I^"CDMI/!=;IHVe>4r$0iD4_J8hC^!q%BoDmIbrm8E`!eSSe%OUA,d*p9Gl/X^DJ;#GMk/j8U]W\Q)hUrVt5Ou1'hF1=!%>Rf#QY7mQJ%djB3iAiNB8.[N1<PeK1RA;L-LmFjaPDcJBXu2$IV0`uNB+?'GYBun9r+1R9rQtpEAu`(^_$XH!(&aD5a3XXn`aRI?%07P[rKlhgSKA<.-IK?2S\+1/5=l4#_io8V2WbR*SWi(q+g5\KDICmB-k^rt.rgGK\;Fi/k&c3uH4!XXr)>Vab3!!mQDP8WSjt=r&%Z9VU9-d],F>'VTnr0'/Yo3nD%4*2.OKY<"\iW1`SJfeA=T#N$`K80paCKs>Ed<C'..V4t8^2ZP#.QG]Xl$2CaC:B;*>ZM7+;$[Go%#O4)[bWL[!\]Ca9i1$ZQTfp&1[(;`$KE"TD@uo6@g'TC<?\H_a=&::eS=O0%]l_>X\][(SNAi7V#UQbRA+qbt!AJLV:R\CbbF*me%>uLnm*1XL2aaB5J44f6cb=QWL,.?Yd5$c/ESF8+E(BBIq+@fIjY=3g./I)!H2jG)KPRDD;oM^*-'g[22:f!+I/p#n8cEW%<P7]`Z%3-;_V5Re(RJLQ`HUWpe'.c.i$[br@mG>_,2/r7tAiQ/\W)XoOF-=+&MX`hO#;2e-Q)=d":lRmS4:KJL12JXlK,!2Eb_+s>iU+)p2%UMkT^MX(XbjWSkB7ZVGi/*Z?k/hjo1KULWKTK<A$<b;>XfT-_10(!Xq%H'9eHj_?GfdcHj%l^[j`8\/-R;^FuO$U>1rkhs3r&EHQ%$s`[m"e+U/M=tq8oa"$u/(qC5!0bX=),0"@d]S3g/000AQ2Bp*?]gKGr*g-W$iABbPmL/@^sW7L[_sL_70\bhOJ(HX5P+PJ8`e6$%2j<%-_bks=TP*W*;7]O5OD:#Pm%;u+QHuHo)kU,:bA%qHVoCL(/]`/(oZ^ebXH:[-+Vi&\du"+kV0K)/%id2e6#"m_=7;,_iT!'T%J34S]2Ue:pXE6d?,iTokF-[;ZJ+!Ol%ZcWTH[iCAR9WE\$MD-b-YoRUmf!?a0g:OChHa-k+66=[9@,[-!ehabVF(RnFI[Tcn>0X6%nH9mP!".O"q3W'^+*V`AkAT6<lM,ct*&+2[ItYTMh&ZUen`l#X)V=kr[:.lN0Wn$E6@JFe.ARHPRX?nDJgLgT@<f\_!g_u5V\91"%\VnGi=RA!'W21SVTAfaO6@&riMjIS`.a?*bDFj>3/1btO"e"bj*.JdQQ..4%3M+Z>f3flp9uLskbq.Pk*HlkUk]&:Pje(:?H,2Y#%MH%ENY86'M7&FH8mgeuD'Tq$7'WX>dCEFj0+ZE,jD93`iE?'4DKjjfjXIh@_VK[.Ki=lt0`(qN6Wmb-E4Li4"6Or>):+#<Ypja?"%-$#UjC!"&lm;c1gBQofWV99sCjL;HC245VI1C(t^]_a8_m/9I_+?F-IZ,#)jg'&0`INP0E)NWB"Qu0rCnYn_K5Vc6)4rTY%#)Dd`%ScAfZ.I9NkS'i`^I85?L^A-!H0(IfG^l;h*q<9kZ=)%KG9YGK`m">Jnbr<-"gpsQSQX[`G*YFP3mrfU$#mGZ9RS^d8$3M>"lp#t0%F)CcuKj7-JrbG9YB4B4L>UrR_U\FE"ZSNqg5!/mcODdm<hIG06?nEFAT-"g5me_Y=(BI8_:Fh`J3Ll/sB;]\KGJ.Ll/dhYKO^adY%*rFm[NpGJ)pM!^?>:g24`&W*m.H3!:UMk\^HW`<Vg'aa.?krbFl!_o-4*U(HV(MEhHhh9kh1DO1*Wi7pe%s<n*;DSEf8aF6m^Hlp%khS$hf<WdbYW?"(_Y/8r1nCKN@cpiA5tCc"FnBjDM%7jH7.0I6/HG/9C-Uh?JH:$nBn?*34U)28<7-)%^K;P6a-"$CrV1ddEo-bR%e3$OQJ\96knTBR<E\IFf^js.b@$GSaaEDDR#@P9U%\)?9s.3kZQM7U8HUn.+@'Ba_rOYN2H;<iqnGeZgBt8ceS8MH47kiq5CsAZp%B/\Zr/r>1BQP+of%:W>eNYB8CHBha/?6MP4ZXK?S3=F"HQ!?t;>Im:bZqiOL-#61u!5jo=`^Nb-h[IVc[8/tQ1;T^8#ml?AC$Col%_3-giM)pQQe?*t:J-K,YY6,V3"s]5?,KdD(25[H#6WkcWb1^;LP-&5/!q1:Q>Q=(e6gL-;#9L8uLXre\Iu8-_V&='\gBSJ6n8Z$.%2^g1i5_pZY>49H:,l!T+qaF;_UHYVE&$8g3$f@VS=`C!DGA-Bd)KK%J@m\]h5h7ui+c%IVm7q%tdb6'u_3eeS2!T:SCuElhg?cWC%SIL-6hYeFO@+a%bJ=]]d41["%h]5q!_]HJRfK1%4VDb(IFHbsLB#DO9$J--A5KT"%Nm]NP.H`jH_2!Sb`aaMC`siq'AYF:&4la6l%aRS>BC;=%2q:Ik[P=TSJefe[ime8.U/];TlQ-b"<U2oubs"[lBNV:QD_\NU05AL;&mC'Y)M<+K*bY]0_V`UDJ(`IFfBe05dJf-u!%8Z*qf,S_dcQn6"2WuqG07A2JH'@f(,cA#'/%X@YKl-BOEVOJ"M+=Cak(WGTr@Jq^<2;0gu3Z"Q_:)%VKA(m@\9NBZ`$<"j$Y>q.=%_EH[jI-m1U,XkoCYdJ5/Rh%J6q":XeV[_!@JK@R(+Wal:J=a8\mr^6:oDkt#s3aS:=No#iP:W'_.S<\MF#?B0mIpfa".GIca+NG6%+C0*r$?_5W<Q&[teKS/k$CCCHDK\:s-sdtq%!'bWY=T"Roid!5F's]4Y7E`7!*q24T`<CU4c3jjqI6LVE($TV9S6FLdR87ML2L]3%C>=g>_PlGEPB8Dg2Q3K?&m]P#lRF9f&X)8_M1dlQ,rsXsSs7BT\?nZsjs?n!Z5IC,Wf#W_*<N_XO;"YFR1:-&ZJ3u<VpM^ToO9Xc%_&*I0or*S\8QBpV*MliO6o>7+Gpc$W="(,o;DX!eQZ%]rQtOtI/3.0XY3?iUZ$P,d</U`g.O`Ck<*;M@'L9"VB[#6f4sWSo:SUI9%rjUBoc/*GH-3'YkJNDNh1uYWOi_XWN2A"UdmhafQ=fYX;qDi%>b8+4=ifAUII0Q$aUm9H*Wf4S](+LG0:'%oU\jf'lXf=o&+M#6-%hKTM`DGS0.gBH`h:aT]iJXUmDF%C5E)UdUS-I@!QMYX9J/5ZWLbEM]PVr2n9b*T;23Anm%cZ4;#b2r3kX^GR;HHP2P/+-Fm`gs60%K=m_mYcnIo$-gc<L2.9k$K+8>\CV`Y!,6b*Z'2EM#RFY-_gUf$%&b#=&D?Mf$ThGt)Kdhp4=LXm'XT><8LUNgi<(V#2fP2K.Oh!l%8&F(cO:/mPK^L0Y9W.ucA_E,<g9kZY*DcN<cLir%PrUC!^hR-M+g0d[lASmKn@Cj&maS1h%@k*h>H"5Rn=pT5("7%@QJl$1PRSaI%<0Uus:3%q"1p0tRHFkL9djin%$AZ)DH;k;F:3Zjd*"V;#AAmW*@Ei,aAK)7<_Z=uk8:m/8n]RA2^`'&4@SmHNi$O#PJnj"n3cZ0-%$PY27\"a%!;/Bjk;(6U:T"`]f+ci5U1./IjG@C>,\-l"'+JOHYahT;pNZ6frJ6*sL"P-E$MJi,*0:\+"-+LQZ?s(#N0!M.U]JeDh%PVgQ=/MG@jiN5lO%SU!/%5a%Sc2<W4G)]BEmc$l&:-bq1H?EAO/+\h?MkFBk%(!tCYRJ_RUQ=HF3U5pUW7WlMU%/[[AXSBC[F`D/%N)H8f):O-eVpkCfkFh"7L@EK74fJf^NFAP@/A=Ql=Xbpt$_08.i@!H<0Te2^*N1@tn5.5h9-X%h2e9NDl=HEChUW/d!]?LNFDFI]%(aI0%B@J=d*#g/ukH,OT!"r,6\6p#B85M&kb8>K3;!A#9=cdh0U[U\'cR(<gkjLsJLD+U,Y:oCt1*`Yj&+u_=/2j(Xq"^k#7ZYOh%;/%4?[1Wpj[tej`+n\Ea[ioN$C5W!#K5tA))=#-)'2<$5l["4M\T*B-]!F0LS$ES_JZaPIkaO7[WmKh'<#lGJNP$+r"AjtaP\pS'%k7&j8W@Y#GN`uVYIJ[J6et'!O&hIh0"^iZ5;J)tDoSjnLFef?o0\.+]<1l,!<bF[KnT9H:lX-$.Pb4'"IJj//^-VlPX0M2@JkCkY%m&4q=>D=qoH*/o)6r4nE32C]#X?rbBN/6U]U0'GD]N)0.JSJ;n1pBVWelPB7iO\UF[/Qh`@pT1J`(6+[[G_-tTHU2E]o(aPhD*\(%A9nFD8Or6`-E(4Ub,EGs10Q=L7[k99\LoJ:C9ks3:WF0!LdBST:@f2HB"-:+K:GOprgd2YM68X.#$1!NOnrb.i[%EdmXJ3N68<=L%\1:0ta".V!aH/!P6X.Z@Mqd"8]4RA2</.QH1rE?\pNk/q=Cj(h#b#UfX_$:RffO&3Aj%>I8nN>U?jMoi%1HJ'hcZ&M=SbGY?7f56%r"4(BhD]h2TBjqc3pfUmn67#WI$4gC05cG]kf$EgZo6%eg@8XU[!R-dk1]g4V!p;#3k:5lCsHGQ`9-S1gfj&&=0d$dF'_#MD=1.8%]_Z;gD6@TIC3*`Gk%l+=A\darH#fS?_mZZ<-8Z3k01"cA^!Q$:7l$Hg"_3\XaP[rlFb9b,`OGhES]Y.&%$NefUtqfHo@-3VS;`_n%+1qdR3HUm+?D%2,kJC0"E0<D!&r5`8OD?/PGN6hl%W=X[jbO\`/4/3$3PG_o>q6;J`sd#GY(9'tB7=3db+^'QC`Fs!mK;p"Dr9I+%-W&"<,$=!P5<]:U@oHI7B\Q%5UN+EK]Y8Be(lE_`I=\$05,eFEP;i?\]Nr8.W&In=^5!A7mp=O6htO:r(;$;DZ-c,:U1dVHo[r;6%`e9m[DmVjDL3<WT6a9LH?#4\3i4ehs1`GdAaFgD'HD;YHX6Vb7WK-4<iB:_Vn(s'#AMm`kL!2tXUX@0NhN2`KBJfSXmOtrNWa_ae%*]g"JU@!2t33Uq5)_I?W2,3WGSs-Pme0s7o7UA9U%tKjNVo^]1ei>glNi1f.T5]BO6hCd;Q2MT'dE9:VU=!q):`kORMO_mK>A)eR%_jX&i.5DMflk-7W^7Tl0C,K2#f_9uXUK;SCO)8gqh%"S.hWR\bRJbn\Pgp[p*VC(;Yu*2-E`P4`I84(K2]@!gne^<b/(I+5$D5_Z%gHjb$X\k#4?[-oJB]'f^[J,EB=fk.bJ'n47YMNs?T0Anfd3mGB`NCKUACl7P2>ZBR-jY3H'ft<pRt'f?A;rbpqo_hI!?41$1hs:V%G=iPi\KsB>ctmg"jPTOO1TAc8A2i4X(#H>:c1s"'hr:S3'Vckmp$=c&qI6UF<?&%]*<\5=]qDAk^KRC/nqUO6rbC9"UPA)ZkFt@M%]f\@sWf>jW$pQTgX`eSG)Q6MkI2:G$UAt4%FKF>43G?/XUlJ7#)]bL<W&4om12QZu?JLr^&GYA@s)<:H;fD:`RBOB_]Y1:&qKC[V%6]JtUAJWn$Vf8]0dHGAis#0:le/Q*t)@`k0Z(RggcjFNrIc_M_&t#q*>rI[3TC2XQmbh?XdFa^sa-M&C!'(7P9meH=c*SOoF,`)0%:;s#K5*sAYe7db_kpXY./c.aB'5?*t>AP"\!h0@$^V4ueJ&3TQ*Rjm5>bdK]QNC+?/,A18)pLJWB6$<%B#]$d)e]C3l^a;5B-)^V%BJ_f=&V['P#i"PlET'b#6MDmM`ND&6]gVPq2%!RHRb_HjZ8%#lqA"uF9U_]$r]R_>)BFUJ'&6*#R^hl;aLaf<+#OG(5>YlR,4ALq%DZ?8&BYJo++U7[ED`dsHLOCYdSWWh8o]Gj)C4e7nG@gT!I8Nk\gIR:%f=8<M?>O4S7Y[J)8%&)m:op05?8^W[!f+6,g2B(6qgh#;%g%XaHrc;$0D:pd/%;<Ln>dod4[gJ!]G-?+YNKQcu=D>NlHoGZp[L^+4MRn#70!CeRM4MQn`U4Z-eY1]D<m'N/4\#&1K>$6MBto)@%,u/]BWP&88^IS#ThgS9LUQXcohL-Mf,JK_BfUu;:^2)7'?+N$'CVDqBKT_DM'XK`RNG;Usp:bDDm.F3HD*EC$TJYPt#>TIKD2P0,%JN[X4j))<ec^u3J3%#\9MRTbBc1mNMS+RgQB4\(9;*7O1mmH,sqc7TcAc8``QRjM654!^mG/TfDKmK+$4W/Qn`I=#mZ+sl\>*rH^%k</_H/Bk:9r:%R9"e.StRtVppaF4f(2c`Cem?+jq?Lfg4JV0/DLQgo:cB7@$akbkUW-CKkEs#T,Or<5jN"$;J*W%f"U31)j[+@JW%g=u:C:DutNSTaSJoY^!WM-FT4@MbM&QB"G0O^2Y`]Vmb-H@".Y'J(G8KL-cEief9-bspZTf@4QB-#GJ<"ZEZ^g"9<%.VZ8t^V;9W%MR7l,d@c*(;#;%_/bWb83hMN,.W&3Ui0/\'UIb:6BGB*O5l6$I)[3amE.-2O'G,L/dV]b6s-epNlqm`NW8i2?oBJ2:51"*[knIU%%E:1o<KfVXs2QB`HD]X>e#/ZdVD@LR-]h\l#l.jl=);4t;cTb_TQ4%mr^>l"X#2oEJk+q+_eGX=p+E_QJ%[pp:b&G4/^RA'EG[GYR%i>+Y@,=efS)=(*GZ1`Wej?+Ii&02$E11&]36G5q0M_@(5\B$dK3@Kb3Y5)Vbc@*2UBs%K4!qQj,\g?PN5ji1$(/fCLJCr'?3`OBW%I,%=OB$P%4/JQLH<f0ds5L*%bT+^AY>m3@CLC3G@OJ`Sh[r^P2JjEsT:-cYU#!2*8&)6L8"#Aqige(K1<%i]tk`iGIp#uKbh+MtM%i7'FMUFFuLLu^g)^.gC"7RW"R>j#7"?3S(GRjNS"]8.X,cl>?#r2Miuj0pPsGKB<A)MV(6^!e,?rqOls5?Z/2P?9l]Lr7G<5nfId%LY[5b*I1=uQH3.5'q+0bip4(!b,`r2-o]Hl-SJ0h5it(UY"s8"2R2>;a#PYrhXbd8'@[^Z(*hDT^Rd/X!X`5!&TF?W4mKD$L\E[t%"P2dt47?cG38+s3FkT!(Cmng;CK;X/S188L46BD(Y$q[Ii9>[WdYQDlMg]J%6+%ptQNA]%.OMuhWd+9Kd@V#GH-j\sD$hFD#m5DW%Que<$g'Z;*b3'klIF,OFSAm7n7g-AH:dTS<rVU^L`im'JGA,S7cT)V57SXtH?j&)92,K+sP$OZsfm-('E9EekX935a\aqf2*Qqa*%I7Lg+a,<Tr8MS*u5VbCk(M^ho-mfs2p]1RuF@=IG#/F#rK!W+0I3Wi*dP$9sUo<"RA?dl?68IZ#-?m0A/SoT$7#UN^2*3(cU6-4G%.scNHZ,NlV0Oa1(@UYqS]M(/K-&^U'p_G#I9'3N/[CP0Eb2ou;YqBa1iRR2@jRc\uXh;C0qLbQkJM(XeFSsKgm!'`\XF+<m_FWjV%NSr0dX&t`+^LCasJmp`c!FXG$7_ca?_u_8m:sAWkhr3[I4m<n?Arr6lFUM-Lc7G)eEf"D6?R**'js/$m(p9(`GY[X.[f6F*;c5CU%[1lfp"Zh`jm+;a-QpebkT9YVhSYaTRbiAGh3CB4jO.@01'&55kMmS&$\9[@%mHijO++eC0UeYq]/B`cc"Eh\fU_!m5o>PsAP%/nR%:XKc7P@qL:+9eu1U<kLTUPZgoQZRngO^/kue7T*!Y$XlTjQrb>r/d%[[O:Q&DKmH;D=Hp$npK:^!uaoDTF'=oF;S$JTeSjYo[OG0%h+X_ik7do:BaL]mgVg80/E7(f1Jn/1gABV!*FOuaJk'pNY$gVB:hoQqYOCccDX'A9K;il),6'PRMNU8K(/EELdBL^nmrsAnr5n>.%kn+;QMJJYDa@ZNP1-*<b`"Jq,WY+$EpO)N<IL^@[:N9C8gXs+@\98,'6_`a:3*3\%Q+bRdaXTCuK6+R-Y@/+a]4:qWP)7,:^1fOJ%3BWXIM<j"0X<_@YcDU5EGn0QQi.LIu63s,]R2IUSYu7[&)L`cd?-c/&3/=!8:CHuH+BaYOI0riEiNIg^M-t>/6uL.0%3q8jSXM$.%Btsu-c9tDS@joffaqmZMg'm@NI15ehY2:=+s$H5I/pa2K#`1-FC*C5dBYsAcQc+k^+#ROl^CV2G@==Q])a1c/Y'X=X=mS2>%X:LX%kfk=P:@IOXMnte@&Z0I(Uphb<3\=VQ:e.e;)6H8(?'`GuZIH_8WWVM]%>YaDL;OFgZVJBZ=jS7o3M6$scAtu5eP<h/MS00"J8+g`%e\&#cAYJ4(KtpAU5';2Y9H&h;iCsY9CALSp"WNKWO>PQ.DGQdVZfhg.Ta95F#_eVeB&K%`pB5hM"dj+]d+ffph]FsGg4e9)f/U,#%R-IRm(p`ApWPra;%5F.f#V=mk]uR%E7)6.!LKL@:W1Sobfd`k`B]G\*7\YlhapgHAM5KP]aTB>T^)*&JGG7LcX]I:s]FpU:7'g:h%+@0E,9/L'X(@UK682N#8C(ee`g]qfB9=,So"Ues_M$BY)^A!NCkj/Ma1Cdh0a(MZXB`kY0kapA3TVYkJl8hPYI4IO#$#H1Nh`-"l%kQWTQ^9eEb[D`]SAsNVlr-G(qR9:'53ACnlh:kU0=c6Qabg(M15sC_*OY&/k`90uo^o/[l2/,W!@lS_5]d=HSLB2?056?D/BGf6V%STeR'nkF=%pThqZ!Woe=?T#G2!rQ;"]9'4Ni2L?$rEd@:jNd.;@>jUE!S<eenQfh2L(C0RH[Qte"Lbghs8&k+(7JOJi2E&fC!Eei%&C)Kr]`a4s(='[P+ZLtJ]c%U$HI[Ou],Kt<Kh0(nIP8>Pb1=G@Eh=2V!hM%+3"hH?WopUr[8M0m8j%j%W=.2nSKX,YdZ(O/p@u.R%Y?KoJ#J_+Gh3*5db\d<beiFM_;Kqr!KWSoj6sqRZ=S#d1pG<9AH105P>[\VM;fkTp,LG*b_s+"&R'L&Ebd*K+qQT<YN.i^BH#.19%cdP(gVIAqGSd"USM(uOZj5li?"i)thD?OkgmX]Za/@]nG;-o!4"AgXa:;tR>K*XuQm`"b5ZG8:DqigI,>F$Kb]`0%R;j\OZ1V("1%R@UqKHBntH%TP(gD@B@Kh"]@\);`k[mecakc'&XO_mm7i=p,jmF3EPtFOF0*2M+[90f4(_SUL\^P0$@QU!mfl7F5a<$_!$JduU/c%7LLg]6`2"l-e%o-LnW:YTT_eP/eCCJ+$le</SHVg:-X=?711^kL/,K'(L+Rl%,K.GPss%+QGnG1FSZSk809XJTp$Kfeql)]*#-o0%D='.Kg6"XX__)d3;YB\EN"9eJil+P*'K5O;LLG6rm8q7eJEuHJaiRV2F$h>.j3&k^Cs5VOUI,p2b%!ko2;Wlt$q>YBpI7mlq&Z.L%0`?&pGk`FhT2FYh2LZ"Zea.\"-b@WOQS]m.%6R^<>uD&uK=I9UR_t:GH,WVlnSF8s!31mTUEJq!1"F/ak2"$\:1JB%fY[Wf-dSqZ%C)5$$2u-$9Z]7>ia^E=/obb$ODHbdQE\#6[fM1*ae_b>-8B\[6@1\i@C1N([("!Gq87=Vgnfq8Tm#Fdbn8/m8LaTOMJgmH2bt9Ro%[h7+R6>7pf'ZIdl@R_@Vg\-/"C4"Wc4uV^f1NFK/@O$Sr"Ot+`4Z#7@N`AqTmF$ppPA!S23&!_-$TjAeC30[:6l]RO./mdZk-WPH%:"'T(d9!/WcbLWmFEY&QPu8";e/gil1[s%p#[0[-#?,dCE9$_&N)<9-*](l5VaFibM\'I<SI_jD'JmO`3?Ff%EX1o^'Jg.2`CEgj%BQI$Eme@6%*hPRcK2*`3_0VA;/j*E_`ofF!AdME7<o%\n+"sMlT`Lgq,@?R55^W^k$2F%a41e-&`h$T.)&R^m-#@'e$\7f,iZ')"%Y!rHP/DR7V(FhAq#hAmnlO0oEW)!d<ib%OfYirZo@8r\M&N@W$H80FUK.pqs/Ph%]rfnjs)=pHjO%bLFNq,8P'+C$sG"/huq<Q7p%HUl%S@PoHa!4`uHUE'q(;-hH0d)XFNB=p4]2>+5X1NVt)m4^W`$)4upe1pGL=;7Wc2@GoEaN1q<MamuB$CGg_k]BB[R>k9&*BJmn%];0p;h)HfXY=m$M41kq#0,p(]%$/Umo#NA,8e#INHPdeADNE*d4D->+h-\)F,I.!h(\buN!"PRK*@AYMk4-O:6jkX8Ob$qS$BL-H%7&j+3?HA@$7b,h7NY.k8(RtRpoY?,9k%)-bHSAHT?`kqeLs!$s\T&U#3I#l5g;RG(rKtON`H"^/^i;s$*%].0"&MWM%*nM)KV?Y9%J6fb#^]6-,muiOsZ'h?pWmQDfEHS,hc-DnW7<*I;kOirWl6N'u3g%;!:='C)9<'8D=/&pa*n@=8hF.dD@4lYLbe)HBUufP4_,ckA%VG9>scM[WNo>JPGSV"!QQ5pLF5b*ObGW<AMWlp<UK3mjIB-9Z+SB?haRR(3Ma2?"o6h,:/Q5pL6]Q]U"Lg,$bSDc%#98SFfm9!d:%[@Alk:2,W#D<nu.[`'KWi<$Kq1Q_[%r(NoPDM`E]nt*i^'59;ta1^E*C-WOTOB=U`*Pl_7NBS[/S2_-U.',Uei%-%7CZZmpc5Ck:%M$AUuZlNV^kFEp0Cc"mL++,0US9R6m2Ac_=,h2J[4Ph_H%E76MM-"-5BaB7R?7Vcta#'^Qdg1.9l=f4>hWF/n<CU3<D86F;\`ok$%Nssqt,nMip_ct(giFlR)XDs_qehQLD.tJ.J6^)kn't6%]h6T9r(jr31Z'1kI/OZBI47aL)Ol3<`Z1)!1WT6ep,D[$i,*gqti4'1(%6N*2_Oo"pfS;:,MB,M;\0OAScLf=Xk)%ihZ%c0(i$BnTZ>T]CWg6\\*5%NaHE2,(YL5u^<6U`Dn\f=pt-lb:oYC!!V)52#Lj0J;R%\G?)hEf0,9mO%;C"[_1DG7^HU\DIo+VrC_O%A@b+r\7+Dlq'u-P_oP,rQ0A::E@]dW]2rSbOr-Af>&rS4m3&8Ks<at(_1'^9`&E`%P<-q3-,X=R(F7Dl:RG?GHFNJI;6I@gM6.U"2_3qR?8\q(;(`?kG>r.!&Eb^j)Wt.:NuJ1ci\Gf8.JE5PH>^2LbnoAdWV8_2=imRh%P62s'$anII'1s48Hd4FHF=C*LcXsi7Cc:=cJ4U$H,CVYYpZ5]C4APHL/@DE4BI.XQ8h\n<B<dpo7ESs-@(2onoqg16/86rr3OBm_%BWVQPd*narYZo;Kfr2Y^bNMCIfrr#SUfO643fOn<EClqJ=KI0k/FgS+KAAkTS[+?F:_<c;j3S0W,J8n'jn\\3#$MU^Oknj^aRiI_%f^2*\l>3+8@7SpaRZ6a%WD6*e;+a%php%p>U\UsWU*b0[L;BXr<hhVE#WjlC@)?qdUMh-E-SW^aWKgu,$F5hgf.n,[OL)fij-Iu2%6q%^$iiT"e@G4d8W-Z0fN$GfP%G!CIEKTW#<VG\=K_?7T:fVg9[.@CJ@rt;J0;d2IUVj'#k<)l4Fd\ZYeC'AUgo5na?.-nAB?CVV%P/BI-Bb1`1mY!E:Y0SMQSF3pOI"!hA,,^9i>2D35A0\VZ)<VpR-G!'G&]J$j$fmAdT.`W*3t[V;EECouFS_TcH(sQco>?rTVGjf'%pfs?4Ml+D)+(i?&3]3P&EkX(G9rAb"2fIcPFu5bY04+UQr?BX219tk?<qZHsKqdh]5T/>g1.O1WS1CneBKEPL)I]aQ=u;dR/=k;I%?VWGK=tC]VfcCgSFDAO54p1]QU?U/s(O:=n)GR-,gdobO/gm)_/XB/l[eU*$l"7QWg""Z<k)H6:;beq<AOk4KNM"@-W!/s\Pb8G+%$I9G]VkmTM2jt5K@Z*Y'.6o?V`0V042]'G,8(6_B==l+n:-H%3g!OnV!'i&-Ni#b0/Q&$h?U?T?RWsouYKMa!1Y<RJ;Das7qQc&n%3]1B&gA%tJl&6gsQ4luj(/(QnO)K"?cm'HZZM\1/Y&;\5i\d4$;OO!V1[sY`@'[t3+/6/`g!$(lDPg&?\BD5FI!+/s"Wj3]XohUE%&ud-<#mk)s%2B7E(6A\JBLG"!F\:%->Z$$6>u&*g2-6+e`B^=pV-V[<P57HO9aRR^-_7Wf)Boit@WICjPW0a8/>D'/Ht8>k>i.=b%ABWCoFLQ4X439WeQn%noC$mgab?\Mp.Uf3bdu*5'$`([$+JF9K=\NqHfN8l\7Q=O_FM1XUC$lBmMNBM"Vn(i0)#ZjH$`COFA)@\-%h;N2lN@pN9cW0K,NmJk9r&BUmV&`DO?&1!)gp&sA[1ao?IqnEB^]\e7B+L!s'8Fn#j&st9Ntk3@F/%>s*+>doL]]`Q&@A0Qm*NZo%1.WE[f:SRsnM4p3Q?Nk(nO2lp<)&n5mY90DmjV9AEs?g0:.#&Z1,of)I2WHC1-@dUI2WFm_`Q8JJ$9g4^844]0"r&%1CEDP#L8;m%-60,BY%gcY-bHD%R"5Oc9I.5bUp+hi3s(-O=K@\h65`m0*R4l?<enl1'bCFN8g7c`A"^:j_G%OaBp,d!7S:RGYBji[%qi@n@3j^r%$#3a=>jDeU2=<%B1.A_KfXrOc$`Z<p<X(q\U8#=iN'6q(9I6^ig3nU1f+qC7==AKn3_dCm_CYd>S40baZV^EgW-6(P\[/;[(kE*m%G'KQ1Q"bK(&]fLaJR:CS*?SXfQ/cbBBrH'^@c"cJjtb`V76W=X%=(G'1>FH-;k@D[&RM?I7H95X9R2Ol6_+X0o!fs8plKbVh!*pI%KfSSFB=PjmeJq%C/KS$kqCS^->1P3I?nD@jXQEW('HK(jh0ad]b/hWmUAcAS?[/Og%W1X*.g0Jp\N+_$"GF+GGg8rHSh4O[7lqJe%&]A37\n2#?b;0ghXqnr$h%bVF_EB[a'+TYG_!l.0H/C<nQuIYE%SklGQDe=/_[0h9,AH't'gW/dU)Ct8E*u,5l^I4XX@tTmAgL1`%e%s.&WI3$-=$E&[@a[;'"EPsUXL.+(_ac>6GC`uo'oJ^-AVlIDC^u84`40Emg:)r*qo*A@3`G8a&Lk-\Z)?\h:%a0_hj+u:qP8Bo%Q$FCI0fG<bd3)AZDpB2$anuj5@:2Jd)ooI?/n%75lc$AS*[!ERjf!KP]]o_HhF]0'>`Zs<I-2$N?0](;Z0+kfe_1?.iJN/(`<qLj%.m1N]>(M=e:6&V)OD@qW46F9!K(,p<Dl&H9io)H^na??S7I$n9k@%"o?_0+6iLJUfGg,e)6-*WC+q2eIW"o1Gg"hSC3o@;rn6Rsk%"h<n57R9aRrPdUU43^5*c5PP8XZUDpYu)[-9-eI&*0<!,%o!ub7/+Y_JjDhiUXO5ZdT:56@YY(ek+%WhiK;:85:Lk2N[l$-7X"0m%X5&KoK2kCZeTDc^mR=K%/`,hXX#5e*^;W^Mcq7lE[sE<&0CH4ec0+O&ZBJRefff,e/UZT10W0[R55FDXPRD+%RcU@8Q2Zi^6lH0%%.mZu%i\CgZIL7Nh:1:J`oCg6Ac`E/!=BOc@O%f\ML7N!:8=%6=pu!F;g'hA]-j,qI4XA`)8[Cpf1qNlN=h@U8SBrVC^o$Y-1:&*Y%Y!HY8>Ye6ms(I\[d*6*5!=`#Q*'r&3\l7BH\Nj,__$Ni%8esO<;J^ZI`D>u,_mheW=V`m+1il8^3FB"IDX*IP`NIfAD*P;9/cf[c%I85^dcck'EKt,:?-4f4-fD4*i.J&r?!;7;Me^k!hf_><L/oQ..f^Nc<`/$n2FYDeCo"=-%\VX@G8Y!=HDQ[A+odsrXpKG>pkO^=K%Dpa58J;[`#X*.R7B"XLneM;JQS;mWGmN7W7)H#0s,n$U@*GA*5_U<72ZCmF9oBpq2!I%`=)!tECVlu<W9^1_!G1iR:I%"B,d.b`b%JmOBjYE*AXIQBH6eD;0%(J$HJcXMI4D#08fVIHXdVX?I+F@d)EdOOPXNX`C9=dLC(osrmnafI?;$J=+N#j%<-F/9NWBU$rt@/Rs6%pK#[$:^<I-'R>[<Zcnd:As>aI5T*k."&,u"/4MA3=<;i8jZAe:;TpheN[]jN6a%EDB#98PZpTj_F%-2i`W0K*6_Y;<L(sfhF#k<d%$4o-#E7UXt-41;C##KW`U%p*%g_`<;[@TGe:rXtG(8gXBXLT`Eg_`:IZ2(-p7=+7B%=*ntfdK,@(dPo,Sgt.EUJ!BtJC=Bg[Qh*#%/Y81;59no,8bjXAr5PO[1L>dmP*F9@,MR7%o!'noq?kC)8bjo\'s2H>8blui,QEe"I+nCYQ^O'K.t?Y)8bo/g"k]f1Au@U$)2/91%BD#L,DQ*/<g^St*f+71bW.jj>8PiX.h,%:#rQLg2RQ%FBITF4omY4W]l_j1d;RaThkOhbd52EiEk/ck$bfS&Ll_f4f7.=G5R+KY4%P&!W!?/;T2(:u#NY%D!)IFJtFMn/HUaZ;2@eSgHV+KB_coFXt_TfPtU5Lj^@]j&bO$%j6IX*PTS*-qMTDuLCC`#$Y`Vn:;ed42SX%]RK]p@8f*]l/_Nd2g&+r6-k\F:G#7<S9g+Tj'+jo];`GlqG<iWIi3P1oJ]`#fPhT4Hrie5cC<E]7FdW5ooj!#n1TmT:GE=WnuR;G%41e1AVtbtYIYMjG9?HLtT@H`qj9>/Oko[F$7&2H"f2%@_;WC3b4]c^fp!Y92dU8E'f2$%^NI/Jfjl8GPLOu(XcQJbuG!<Woo(iYh%<2Yf1BTALnIQDHZL8Sl;Z[)NA20jH,_(tTXBs$@gZTF$8`G]1`oDD@Xd53]&l_hMT/3cQWIpP?"[?]>&]_V?H*R`<[a1$`d,@pIO%4<GY?&<kN/%C9\)bba;t7\hZ&f2(P]T#p9<7LUl?f1u[;d`X/PE*bbW2+N;>9]u)tcg&"/X\E&,^BK%6R!JWaia.t5f2"W3TBU`N%F%,%;UucE!^\NN@-!C0lXXo^gDq:1)c0D3LbF.%rIeq*s'W]mAH2[@G3[oGKF6E3p)&GkF5Q,rfnFQM$n$eN[b^@WuL0_>T?9_;+%WFbalqt-O*YFdF;82>]HQIeo>0k@E<`Uirj#K1X5o"o\Nj@Cc,qT\56fJcsToD3/O6*(Q+E0D#K?9]t]B&UCOdZL'U^sS"AeX2uo%H2[@O#MgfRV$4fClb6/+H$IohdB;rf:OFSZQ0PS4.Os"An5S/MX+0VF&[j+J-D&8rh4*KI8/_`ZqPLd"*3p=-98eJnqlZoS5gLsK%-!DA-fXJZ+@fsos\]sef[HI9Ip7c@H(f+_t]1efArJmSrf6eHiJkY@?OR0a$Dse)USq6JUo:>E<5-NDHhpY9;p.DcFi7gcE*f_8+%p+NVaDo:JGV\b7S)YSoSZ-1"ZpVP,+_W>7j,BMVO4)ItN,7g=`FVXniG>R\?LU8k%qqA%*?M"m/j%#P!FUZ%Nd;M+1)FglG%p,Y6%HU1.V@W0#OSN3U=h3S]O8gV!XO((27GI?_Lc0K[Of`If'pTEQ76-<QU>\*bdG4XKrN9oFWbX^I)N+3B2j5'H#@iTC!<.mfcRd7oT%H12$]nJsg[mE<P/?YPmD0##NK<mSo"=a]J]F1E>f2fD14TGCEj_L.Nq&&Nd_:6j/ULkUWcd%0O@E=)'d1iYqrN=PN0WpJS,f91JJ%``Le'KKc<GrKaPh,>$5Wi)&1X4UPK2o4jUZ'U*3'(MYh>Iue=fHbVnj<VDPaq>f"p=\6u1k\l`Z#/lrK*Kh"]G&";FSdX$m8t_T#%/)EHZY-P1#P](SiT(7kF7tp_UYEFB+"lB@6L<3p)rp_jOMV&gIcM][4Q;+"9+C)T.$tXg4:E>^;%)OJWTHP\\0-22"Y5J6.$%;s^%=8H5?[-M>KqIKAX6'd_l2fZX^#k\KSM1&h$!WS-u+Q"oH89>,d7LrAG0+^*U,Ok<CN?la9!Ed<I)"8[6jXV*oKm_f6#/HQ&Y+461%/N?@8B8$/T1WVM%hf6Ca)0M[6_Toh,LKWUbgEh7NG]D`+]HHsS-PefD.dI[R"Z"DJVu2H/TD0V?GP%<c?X+8]Mg(1t`KN[ZRFj9"%pPW1`j:uL#K2VoZ*`1i-@/B/?3'.4\j"DMTMmiic)*GU=JY/3l#eQ+%0]6*M%>u2-l^Q%9SmEfK@o1Ii!&:YXm4-^O(`qoG%=A8W%;n58'%tf6!_$'[`$2Q9T]ca7XF1IIGa1LiC$T-c^pjGqLOXqS`.j'<>O_7J87iq+H5)0AeL#[RE9-PT``\'I386&kOM^VD^K5M1*%$D813_I31aEWjs=*kR9LMM9O\<Qgr@:2HH]#8fW;4?q?t,!Q7$rVA.e:JYLl+9DjQRDcY0CKu2tgN-'D\FX]Vhg"c,NUiJNI![#]%:Tptl*_=;s!ase%A<?iB$6]u9+STac6k<0`_9YUn=1@q`kJ+]gI+JA!>raA'=K`I(]R%$jl\2qAjWa26q/,;6km\hMSd.'V@-i\q%GIFiK8DuVYO6sq4etS7FP=8%;&9^O]beB92YL$sHA"1TPT-t=$#P^b$r3o]l/-hF->CbVl.l>_EnDrG80-!$:8'u\0c=PtpdN41=%RL/E6a&2k^d1ljqobQNIc_H!A5bN-iHoWA+*PY\2BoeS<_mdM4k3dU[g>)GkH(4^%iR-f#H?Rq'^&tTQ:D4JQI$\Yek@r3'm.QW$%cg^)Ik%]5&E5gNE)VA]94e*;uaA<,kp%H0(8itD\j,>-(f""X(^HK6b$op_d.>YP;GkgnMmQ&)kl:OegM)^$g%.r#&,)'_a.l%W5%[Pp&4:ciiqi9e>7o_?Y^I@POb^JEGj<]?uM!/["+=$*_h/AnNHRF-enmQ`:"Ak("=.A2d,8=0M,$N&ob@]e&$oQQ#n_YkOPpf6Fm%mn-(<9A,A4\ciumAH\E+9K42>>U$!RE)qp*WE?fS`5&="?A$s5@*L^*HURB["=\NUAUg$>;SLr^1$o3BY5PF=Q,rCQ?%?3fi2Yg8%KU$2H-6<`aU5"HUE5oZ7YJ]@+W5qjP]595$*X3#;m0)^(2mRcOb%(4j".mK//-kT%@i#bP(d53"*+K"7AHkE`YR'm+:anQs\*V!P%_jo)/;KW<-eire4$JJ0&i.sT$7K&NP<U?-e*"S^Q56E%gj6ou5+GdmEOV$%-$odPST-H50f1k,`Ohq2</W'7mIs1k:5C6jeh<Uab%\9E>uJ_1^BS9V%IkogW(O:tr]&\!VmT4'p')h2!\I$`$hh7pRb=qO;Y6%l*W-fCnaK0/aF8>8(-=+O((%6HUtE<Uik!#gJtoX`*-%XaqoEWiRW)2cT^!?uMXt[s0m/'RR47^-&GF17>$V?:b:2ARk3&'hjlh;479Lb;[M*i*As,^up\BJnL>6=Wi;?rA_r\`tBO1FNG/X%J++]hq*Yk2hXm&sW&RQ',f48i2rog7W5q*g&[c;\;,17`6S_"1TT.8/iFKfHs3rA._%ms(m,RTOBqdBA(d$cjE!^`4KM-7?SZb,H%#[WQ=+)q,J//8hOJsA.naR<"oH\r`sLr##)SVXV#Yh8Vq0lrtV=YuqP#WN@I,&#aXI#?;_a$Q;]3bT)mpuHB+SqbXE=h@<A"=>Rk%cc)Z9"p+cbR681r5m1Qk6qdqsPk?!h5u0Oep<K>^#=4;mMPZ8)\-qKhKaE3$8es5?:9Ij\Mf>ZNRD\PT=[-#Ma+/d$=HpkK+n(pD%2urCrs.VW!cuCVZA,`0C&J0W-luMDJ#a1KO&2S"47i*?qiVkt0EBH-4LgkYMGe/2aS;0KQ`197qp>Pc)h91ro;/ED_!",U>N#2B,%XtR,p(aTq:%B.g7UdPnQMakfed%21kIB_@:H4_S>$SchhoJU*e+u;e4+b1tp-Jl@E$&HU5I?$0M\fqfI:RB7T&dEb$&ZYF985!2[%2#!`9`M=g-oUL/c##odeC.>Kmbs(&WbNA'BWUsif3[O`MF-f@n!qQ12NDdFT&,"I^O*PQd;!uh5J':X/@QF=/%^\6M0eZBEP.076%m54@'BAU>Jku-TBPU/Q??T@^^rU#qV*u!7^\U^[E,I"Dk^)/Oi1XYS+oNG`)'=F'Y.4/1j(8mOmqCI2,U,\U6@Y,U.o\1/MQmd7U%NM(;[l.MaWW>M'RU/)U$%KS3')bo`0?<Q1?_9#Um\Lh2W2=f=EGVAmY)#j0t^*)Y"iP%<SlP8%mnB.3J+`_<_'*+V^.\RLfkX!ec%jZ:OaoEek"=6*$5IFTJGmn(*08tG,7#q>XX>gaF"=4:Up??r?MUqRe?oYi6U.D-cK07`m*dC;6%5.bkm:gkWiY5WolDn]f;;4[MH%6,#]aAQ;;-;ChTGi!,;F_l^j8NPSH/V8<I?Qa2W^bJM!mk<AeAIPZ08*M%9^jtOfo_]WN<4'&^EAj=&X2gl[LH[n:M/&BDQ2!'c>%0PKi\\Vm3F07LdQrj_E$PauC]nO5;\,5\KXbfD_lA/;fG68p'25CUp8Bok#LkJrp,7C0)MctUFJnDWPK[@M^.Rh9E1ZZ#R6ikP96%\(auu9eb3q^AH$ia'X>rDdNA%dg,p5LL9rC9hf_(<VSO7FmV;s^?a\P_>!tOlLaMH2pgrQTDn32m<@"qJ+G$0rT2r:WdamF:Oi*d%^]!#mIe,LRmE<i2c-#)HrceD.4.#R2bPr<[9(U[e_?YQf?9E/^0>;-nks+t5,;7t.hKqH[^Gt*Ko7-Q4GPEP0NIXR70WXGNr):-)%;f#`en(TM%rq0?Z*^>$\8)RJ#S+E]@qG5qX,C.4GDeJE<Tl9ecTDmnS,Q<2@o3?`e\`_!pIo6gWa\UgjhD``(rmuA.IJj"=hX)&,%DdVLag4Z'tX38h=nS8$oo_/m*O,!].c<h[k:&jn0?_AkFH[#E9hrB1XETD%X1R]DD_Yikps75]4GO%?Js8MbAo^hp\L4>VOO8e*B%RBua/eZ&MI)8%nSl*&Z1?YpR.TO.Jq[F1B(l4)sR^KN.I#6%?\V8$1a/PbPikbVpooOn3mTAPp_qhOAFJ)kX9;X^[XocY\)mbdo`%mlpR2o=t;&[ibYDe,+(=IJ`HGpODD^hgYEkcbBGT7j%]rU]9M8%mG@1]9aUfqSiEBmb`BkViO(?@8.hko]!47I!#CJB$2]qY-+=l%McD#r#*WgiUDb6Pj8#&AoRm2?P<\s;#QK&Ho$:rYb('HSTD]/;'QJ>!8Da3s2a7/as8:S0r:b^;[C:YTYM\8FJ(`=sm?QL2q9=0Y%p&Fm)8"Y;*GMdcA7o-meW1L8TkPtP7?iJa7>Mo=sG<brGGM`5KO8njc+2%WSs7*q/^AmesIcnBtNmI'c^)5H,=-h,8A)jiaq<.a8%s7WjErq*B<p7IseqY:,>rWi,0YC5H%msO;-(&IHMq((V%=#Biof=q'0ps%F)nY<kr_:QF#0E:]dmSE6#dJqJ+g[8<ZQ2^c<+$Q=-%^\Q)+em5n@P.j.M;?$0:\X4-3l+bk.q3,F%4l1X4ci+Zmc.eS7qEH'MrGiF.6+G`<qq#c"c#*GGUSC4<4N0r0@]mJU&B+4Yj*"LM%F6E"#=2.ngoih=Am-6O1HLj`'j4Mo>]irsG+9!M<e_e%Y_!g.V1;!C4J+q+qi3+u::]30:kA0he)V4PO/cENs^HlZ3cBaLRp7&Ie%mqh6Wb8[memqh7EI<e32oURT4m]AEb:#FXP74mE$21<NQgj$n!APM'%/PsVLCJE]+/WGe(8Se0_CU*Z02el(Eg![&fec.XFqGc@]%q+.ZsoUCp*S$Jp[D!>$%oGb-6^UpbI[lF=FBhdL<d[RrF9j6"ieuD_gr.eJ)hqcr5dH\AIC\l>BIaoLP0l-W'$$;?fYVgiA9=Gak%2el(Efakg6Re*/YVXJ?cB$GUrf(@c8p=>`u`1$\n`g/ejF5D^1rUm6PJ#G5QB1p"@fGh2pmq`i9G5=p8ds&7m]=6Y(2?!8/@t0"d%rS<GbrCbJhJ(g@jRV1st[&3;.l-F#/burM>[e)5XJG]H!oKUR7icVBf]+1DaL2YA+^)Ou7@ech%l+8[CD0rV?o\ECtrY9pe219+1%^\LsD.;Se*NnqCiDoeB]Z_\U*p-u1K].mRYrYr5A^UpbIGLZ0m=jt-K>(2`fr(fP,nLs!V^\IZOl3G*#rqfLKs0MJ"luOG_e8*Qi%OYIH=O,g)p[rl&l/=bl4#4q%/?P^rYHO'.IFeXf1ZEm3L-He>]Y\\L)Xi^.i2eT@B[MNjUQ>b,XH2#mVROhg`@!VE\hcU^VUEX&J%Xd+B,O#o/Zh-6):o%cNbRF68n2cTcRb`pH-dAru3h*6X^o'WX%;#*U9;sG):%@)DW1Z]otj,^;2]4cNja9o]=1@iIapbeP[)\8Ro%R45nQ)?%pm&&7l'DgK=]h-4g^00fF!Mr4IhJFqfE5Pk/aT0E5M5<erAcJ9T:m[jGBm(^_hmsMhC.Ht1PIsq0K]=/5rn(tU)qXj3c%J,ak>DghE;qk&B._/E\.n_;ARrUo@REW7WioQNNGqV**@E<!';p4EnKK5]Y^XW\],$E^1L0R8,G@=Ca+qZ">-GQ-Qr]AN#TkNi'7%?YbH>h]8%,l50JoJ,-kO&-#.LqY0l3s.fJkq=hr.Ds6O8GO@F3dcnnW@]D;MqrAg20D]beO1Tme=6i4;C:sLZ_,U0e6Iq4D#Q=V6%ro`!sl[t6I5QAUX^USW..f#bbX^]h!C\1o1q&qh,DOiN5H8s5Q6],SH][2&S6S?o[-%mM]\EUu3(DlC?oW;*]COF2X\D,B#Et@FG%oGL`I;>$?M*ur=B%u&=hs57ri_W4Oo#8>E%D\s%^"qAKsFeX/Q%jf9^iabF+;uIJk`hgmOUfaec*&$3;0ts7T[Rq[&FFqT3M^O;l%&-)Qug(6c_q&HXD&Fmtir/Ps<V^TdR9@1!/=@A/Hnt2So0D]_:GP(iS?^&3mrV_"*Ut!`U\`(N`koNHRn[>[J:&84V\(g.6-e/[I%$#r);>iP-,3^5DIl'Q5IDgsa!G1I\CPt5(PD,rkMpMaZP2K4bb8h"Jg3ZH'*I]PCWB.^3#.R)[dr1N(oN[sR("Hemlq*)EGE3c+^%6bJqb$'S7(^(VRciAaEqCB9P.kg$'AT;h3jGW9.@1e"THY/Sdag7_0r)H$m>"s%hkDB"rOTqC(i9&W[g#Mk,^Rhjg%]$L4WnN%m<%YrFc-,dD)h:GnZR*H<A?Y9l4^mf)bEl[O8XBY*Zd7dYUV5$!1(/ZnU:#>l0B9[GVL#s,eg:=#0.a&eU2Lj4590=<'TT.ULngT9Ku%1IC[C%^-Z@Ot0TBN)*T''YM"A\Q6h1r%LYnAk2>k`+E-g9[_XjNq+lSl8&Ohih%4$1Ye!q"$gfB@2A7Y^-`iWj5;FX4)nE(*\Z\*%eT1\cF]A)fBE4t(,l"(t&0X3#RZ]'a=F1h'BaKEPNlG*ZD&QaSnTo%4ZDT=FI6_/diRSG1d>f!E#d%%ul%XG&[pn\J>h;lo>baHV%%X@,,`4A>"p::?Z:P!Ssfkt6JmeD:fo?ED"&aR8C#nq*K#=J643PI._D.@0Jo\7N9TEuc`UNKS?A@*3jBK1fQLKCN=\<C^/3Q7(]%"R?g\>4jC$Sk@g]U;ubB4=3*,@JcJW6/#$<)H5uodLC0HM]SP<hSdcsO$@g2\b*Vh'UKk_5FI1B6LO97'.9J0WrnPaX??U7iZ02K%GdZT@Rj,.`j&9b%MJdUsp/c*6]J&B?`oM#EIPQl]EaPj1r:O@U"('J7j?l/_<bq(gUcb/*rC+p>#[^#]QgVDNWNdp5Q0;?JH'fL:%cnLCQ$j_MLH;X=-V!^m,F&4aI,W;;I:[k?*UQ*;]31qF@hbr='r5a`%(9p-N^J4E+9h`#CMM#[9I6-g`E1uJYT82/BOJ&!^H6RCZ%'2UX.4_R-F.!!mgV;O8p0Sn!$)%]-$Mb.`FH\gCS$n]tpQF,tsYnRLZktee!1p;@VGcoj##<EkLhI8NgapoH:qlF96"*n2HQg7SY%?oV]V4$7VcC6+n[7]gVhVM"Z$:OOu^Ta/JnROYd!X*<1h[Y.Uu'7":/]g;!XM"rm-W=.0rJO1@(p-8&^5iE*S388lt<\fDu\V9&-%_T;6d7b\)9Mes=+JD1Y!^5<s>_-M/;\/sI=`-H;nK^`GML!XU\*MTf<;=l7";J;REc%SZbjSg?[.=.q\??A\HC<W4Y6@Xq_1X<"W%qG<Ac,rFWI4Yms@B4$Ee]BQ\(LLJ+uon1e%U2HtB5)?**S0)DD*#e4E"u'A^LkXC>ID#o675WK"f:%$9OjTR<WLIbkOkRh+BW#;:%MUoK%^kERdmQK@45Jn4U]C;529q'^_dEZB+DY&!JZ\.SbU$+KH:bZn(U#-d93$4.TS\[?]#Q1_WT\.qF=Hd'iT&?N)XJIfHfr3n$%budneaoWHo'>i#K/W=jV$QqcCJk;1S[nH#iCWVVJ$#/ZgZDS`?%3e8DQ/gri-sZeAlspV/O9EN;6kiIZM90CoIC).rY%/*aQ$pCg%"(tgdAgj5$7u@5R\<h&ULithm>"Q_[hP=1V$8Gr=Att]\(Q,7PLk8LIGOgK6$)NfG&Ld79HYhSrl*AW]'YFa1l*_em[^d[>c`I#g%bpX4Yg_FcoSB5a^FF-Vj2EBX4@lq'/?i#Z26miXA(/YGA,Fd,8SJ6WE]ZRmhK6Srqie-WX?3!\QMkq(a)CUIsOs4!3M)eD'UjMJ)%k=BBlh6R3:l@9,?f&HR,PME)UG/C4N5QDs.loO0G=gc7m#H*SUAr-UKWC7ENc*A*ZgfPUpSmLgR9)?^uZ;hROID>mLLqe$2hG:o]%r3r;II/ina^\e"g(Vb=mPL$u<2:,)oe;I(<?5q*41$O9/Z]Un2`NL,VLIWa!PZd#5H#DJ.ZoZlb8OTUBb:.`P]Qc)HK&6@6klhEC%L`.S2]Wum:&L1&B`$9#j2tL`2+]LO!)GArVV05mKfJ&jhpD\QPLJP*SdK`0o)m'oldN9]j9)8s<85`aLLs7G:&sQul:n&>$\FdIb%pU%c4=iE7Z(9Pu'es8<(+^V5+7XM[NERV:r2,D&5*L?+$:Z_7Ifq"T+?'mT*3h.4]0n$$YgP)464WcV3+kR)8LTFEZ6mKRZ,4lm-%Te9S:[.5BY9eZ*D?mPGrBOsuHH=C'pH,T),KIK2G?`^UoUNG%!Xpo+-AJTr4r]-q\2Af`/:<Nebo=+rpCj/e.T8JC9+)q,AY'Z`<%EqC_J+"Tt\8\;du)WoXg"cO'W?f@D1LlSQS1_4TIZ(D.[erqZsqno,VUiJC7gM/lq&=^HK]cssLHJE>;X4Mg_(%YrQA%D73aht8p%piSR/+N.8q80NXmV>K%eka;knR;5NCkJV"Fqi2_-2/9d55K5&,IgO+A35J!I2pn;#715cXi9f3foKNL2A-Sb%gEiH9WnT80_?M69%Yik+MD&jd#>I'G_4b&FEhK_?8LL.<Im<m<Q&6:a+]iKKsrD>UMc#U(r9%l?cme_geDJ8L1]:YP!@pa@sZR29X\pH$5L,rWA4i@hV%-N5a;M>60VM8MV>Xp$tZ$R!Apq6*8HIC*k](]^qRQ+_mT*8#?Y^#\N^BXe46f"el]/8&]eF=2'GHFc"kn;[oPf+_jR7_\AM8]O-S%h*#Q-p7R`p'et`(h^UPUakg`k-27\R_)rSa69ctE+hjo)c'O(pjYi[M.%<K",D4Kq]L.Y+0c@s/%3uDZ=d'aJ1eQdrF8@p']iPk1%(%q<$2_0`+MP^C`2i&JGZ,5KhKohDP<*X"=R=UIL_,.NO.BU2BbB3TIBiUkNP^UI-I0k+B;8C(>*qt0YS%F(Jp,i"upP[_SLsk>:%g_c!df6KQ;-s(6rIdBM*QbmEgcV=hVB=>R6&h"g.[U(/^cJ;pBKRm8:idHc+*ApDJpFG7B>sS'*ZDtB#<49;20B0W,m1PUO4nB.,%iC_U,Lt_35o6_VJ^kf[u+!aPWNi6;'HPmD5;Ub"G#_XqHUUu"a[`$XoHfU`>TLTa'f46a'#i$PcKLRd&%Q1aS<,u!:Y$2KI%+!SJ%;!g=H-CMERP6mlL652T+=u$n'c)L59+a'k:QpYs\PB0U>TXkjOJgc?IQmjNuq.A;S"Y)OU@1)UT]BmCjggi)d3hgcMKo"H-&>k&,%?;qh2I3T4#oX/%CN@c:33Rk+D)+dcQ(,.reKj"Qj_o!=H,KGf^>S2E/&<D#C`e8k>"h8%6.#+32?T!u;6/uT(SKomfnj_GjgR^,A%Q^cgKSXk&0:":8_fD*J,Lc)j"+m>GR:1I'0m\9Y@HP$72NY-\q!*B'CaAhaOFN%^^`5de:[Aj":)Fq+M3OGN"&?_GkDF_^=(`N'e%1%19qH.F61G*daJYfm_7*L[&S*HnIVJj_j9>WCW.R3dm/9DY64>7c+=K8Ti0^LDF+qlO?lVRsg3X)li[NF(Kg;>>_SPnT"`"$YoT%oGr.MEOq\ZZsmMu0"$V5l^CNsL&I]eg<!`W'`EcA-D$3G*B2(dg3:3nUj-Wo9\N8UYOo3pf9'BKiB,+o7Y9&2*<b`QH=9(3QF%Sg%a;EVQ@8+4u-PfSf/A@I?W-_L5F2M\-#EaCC)G("K$=FY3mniKVW%":L:3>?<Nh'kZJH,tNdEC>r@RDJTbjOIC(g*/37E9'FE/Z]2%(UAtbC@([qG>6Dg&:-;gg'H*hb<fqtQ,WGVSNJh_qh/!--i[2[lHtr3D7sCFEpSC6C2?q6P5EG*Ba%@DVWGeWm1:*mFNsIZOl@+K%IIcem[WR(*o=:5LnL,.`#`["DgS=5eQNHB!K<9;cr*T-q,h-A])Qr"?'/h?`KW3)dA)3!r\lu:`Y@rab(`"+GD=1^GW#Q_BFY[s2%oIFB7/s#=]A5%,)D%Bl+(pSi.o<Jb7fm69UGh_.>7QPYk)9_Lb:j"]N%e-3p#^.RP>+fHW2>4XgOH]L!=NZ^+N7o3$d59M0!b^O-%LXo$0ba17([Z&h>(_^4]YFcU-E1)V$3716+I=:R+@o%@:(7I$uhKT<EKN_W6/r4KZiI\&B<Z$KbWZIabN-$dPpA=U-4.\FQ(/:X7%jZ^(!Z#74')JE8.p-9FV,<aBTmB2CM.^+UqO*h9Qlh8UlX>&jrFejF8]3\D,6^*V4h'ngd'4GFsEPX8o-:3i?`-m^uZ+2XljP.&e%gRX2s_FXKiNYqXTUNrgpZ%6*>Lm7OZB-K+:[Tbk);j!"+\9UY8`9,@hR"Dc\=-70CZ8lK(8^d_Wo*3X6mj&l,>,[m[0Z_+c1"VoL%_?k3'$,0M#.%8at3I3DrLZ%m_^@Q$qd816M9^kHgnTFbid7tj"JX7ktkZ,6!Yoksj11QUtltM*/P7rPmW';hP_8f9X$mIVsE>6+/%c4'hJ^.bp;nT4]LG,mo6Luar_cO2B]n3!n?*Zl\k@`=(fnR6+!Si]jeQ!T,kBojQtB+R37B8e@\BWB@Td8ZK7R*%_D#=8RS0ZonD%J4@1uLsFs6pb4n6&8q*T4n/M[mWP7^0p)`(NDp,m5Y7j6bmtfmIUSVIBur5>;$g`_gu.l3U<,;.eV^?)-[)(/!_5!tCG6.dN-Jd\%gO.lu*hZ4oRX5Xodr?*!S+GT4=.R5Oh^o,UN2;d/3tk)=UC;H57\]Lt9;DN&\up=6?ZAad+%)+"%[B\;FUbV3d[jNg.?(24-?rrs%FN/ajWrKI2oKq1t"#!-6G[PIYK:XqD4>/D"V-mJ%CI0qrZ>fd!jYnT9:Ag!lBocgdqZGt(]%DReW2VqX$&&l&C'_="k`N`iV)crr%JsFCURP27KU[nudBMY-X<70=]b0KNC8#c#(+lEoJ.]h$,-fISQPB7]#B<j,2)1)IM+aa9`",H$D//hHZ\M3#);8`9?4N0<7b:HOb%bYtb,N.]9WJ)4L(r"QIRd5D5=;5H$ic_cVc!$a5MaPeQ=Yt2m-l-edFSB4q/20s@#H9/H)G_)=(_^LgqFMo$j,i3k)SAt2QLOP3a%Wku^@E-3q1VgGQN(fE(9Lq2b,&mJ")IHWjPF1H1H2S6&2(C8L,8:hbeHX?FQT,7H*a,2sWj6PhJc;"$YN%VUB;t.&e=5?FPX]:AS%r0EiF_3ROr:+QZf!/T=;Ra'Fd@=AV"""$Y?h?B:s9.9n_lFsDZ8<0[sE*YIYm7-bj^'5m_7mSY3dp-1aCC^&jm>;?JJU'l#/CBDK%@Q/B.*?e2'?pZ#GrZ?9%o&2[iI#Un[f/9`'M0DP,5;>,+,S%k3cTeZ3fOo4[NVr">c5MrQ++qk1D`UM9@Qe#3dYQ4OJHIa9_LCR^%o#;k64C7ZgqU#-UB$YsfL)L7Qi"h>'[qkC_fAcicnT_Nt"OT*[8e:+SSQCs"YOl\Y,/i+,D:nUR9tJ0Yj0cJ/P'r,_[./TjE9M[`%9f:R.6\M,rh`Z@-9F)'89Kr)E$4*nl:'f\!Ctp.>R_u!DU&s>C:0a!n)^8@_2cMoq8JHSDIN;=%0oC>rOul=cdciSXpoJ$t+AtpW%?L8$#,LX:iLb,M=;>#%dQo9ARG`@T:UE^Uc]rumj22W/Zf!,dTd6jQJ-pf1.i[,RIkf;W;K*gSf:!.5b%1"?bGf7FP7_PNGU=YQb%&5)S6UHURXk#aG^mZYTeRO/7HOaK:qfV6<J-"io&'&n4IFQG\r+r4l(D-dg%8)'7RGj/[/%#LH[:?6FY*]i,E@;I1k2l'p`c_s#q%068c#q4-+7nW_K!/OHgI'd5sPX;;t"fIZ6C+"RVN"90XUh$p*$0Jt3tQWY'.]LOUo85p41d.XfpZ0ciW]G4J#(mNKYJ^u/Q_?YFQ%#,(/*0`\o,Ka2[p6S,0#Z+mj5I:H0qLap-6B>O+t'B.D.8H#F7SNc9NQH"&gLhc6ge=JRWK^Jo=`(nOM8NUr6N!,tOA1F?t*e^JS%`.#-gillF-F9ofL<6W)h*Pd+o`!>VRK+X7'@$\neB7oY4SoF?7/K/Li@3V-giN]58H$"&>1&c\sA].0sjE!KMSuB8Yf4buI$=S-g%TRF(_/sF@+40>pA0^q,0/rJ3m2baej.Fp"fVh#ab58-LNXYu/[0P,kbiXeB5Fgs%PL]lHGEHjRS(Icgm)[1S'IZh0',pitcj+s&!%G[;O)OZ*_/)u%Q9^!7I3arjr7$X5GU0or@+_87;*_4uGJg?Eto'qDI_SoKdu(6WGI\$s7jIhF-dpi81,M,E_PEA/4+:aFbY#Y@,m%LHRM';5?6V:uQ:U$R/8.-lVN*M=;u8eR0Z,ZAaJ&\aG?9E4^eA`5@;7h,5n$*7futK)/n=(oTs0`(EE`!8cKf^2kL;_b>L#&bW+l%f4\kq#An@Ia+0hT7D6\W>!?4-$t;N77kb6sn*[%VoUXc`8'oHAKeiju9aG`!H#r($G$uYQ=PCriEeK?n-6=J@ThIBt+AqCn;^Yh_%c,0#hI#&umgLfRCb0dkjFV:pmfcD6/duq$a&qHB';MX:aM->!^iT23<ZrUPV"&:Qbikd"?l["8ZlgNh5O"+HJ2(=K4^q[(=CQmBt%>\M[';irsr%j,(uU"'<>8)5VF]ih3ec%sWnh;<=Kh9<pBJTqhbD39),R'-VP/=mJ%i)W:Y^$E\>L1`GJPR;1JQNfoKJF128#n['8%gLPZuRFh.ILWX?C>7n2ZZ^nE'ZdEWmQo#1<o4[Zl(h1p[WBQr;[Tlm@=Ch&Lq%b?2[BnE3qn-q2q:`HGqI[F%m!6hp0,MonZ#k5h%*,4^Dj)NRmC%pZP]Io4(*-Mh=DTliF"I=n,be?"&"T&))+\h[e*C=*P8cF<uGkh"Y++O6(g=/*^Pa7pG8\]7aCt`<d7OPKmHKTn4%4WeJ2F6tiK4+n!T.g"OB,t1bKS?D[DN#Hlj^7$`]Ygt[%f26O_X[Q<:R^DP/'u@^P'TA-5;I%rJnmiRl\Mt'uB.>U_bouAm&;PPt%NYqr%%EHA3\;;-3-@@BB3H>VWdPLAYS_]D$(gN:4nNim-(U)Hl"!X&K6<Pha48?Uceu#-MX9i($kfqp_.l8_M2OJP^GhDlY19gcQ%1,[\84pGlW+^AC#@gG*#)jD"sJWB_<0")h1e`CP6a(oT+=qN0tHAgU;og-FeFbi[o&Uq#;lk&\<URD\qTL4?jPg^c(Q%Fm*k)#2I%4C8?Fk8e$uU[<qa^1u,>*L"%Jk*lrAfg@4Q<7eE:Is==khlAlk__i[MZT0s-?(5e]XhCU?CPki5DKcJL=5C!3GdtIjGe,%OYn[2m%+IFtI?'\MmRE1$bo45e<.Fo&IR[/@#&cm'^]$2dEY-/Wc-mkOX3p1n^<ct/rr"bJd;KEI"LBTt^%:0^OK*Z?'.0F'WHbr`ES'`Y\%5"#E>,?G$7Rn]T#\PEEKBVpA6;_;T-e`e"331f$'`PT=8oGd]#,qReerAfpoJ?u@:B9.S'G7<nb\]'6Oo8DUT,fY^-p%h("L<ulF%$#P;3^S=p=di>C[nCCu:M+1XJNe0/ZlR)aKd3P/YIoaK(_iL2"7#lCYd(@bonBul.*dP^eXdG*Cdu&tb\+L[;MEXUYm."q42qJpS%n\^KNKD"247XO8FO]*YFisTje[jE$!3JudiF7I?h(&8T68Hp=^e.Rp,F1O58]V`o\A`Hk1=PM\Af?A]]8/Gdue3+S>ZpEn;E)BaX%K?1Dh]jo*>mt!\5LBc0hY@e!sY#-Rth"HJ:R,OasOEjt+bMoY?O53YPI4e%!Hj0BeV?HH#PhIcN$uL^681k?gRmqlaVWAEHoVLQI%-&ak05%2ZmfWaj$Ap<`(lF1UjpD@q;?rB:nno8^[#W4Rt!BLipWs-oa"5I0]M^6.XbCL*<NZ09^%i7YO!fau@o&m*@g"6@bTKXVU%8UEjb7-dJ;aM@q1;sn,rg3<0boKn#(@(b.-e:;Lo/OF""<b6@c0Z4R*%k.DA\pX=6"CK(Ag=6&.Nr`BR+q_bYh@sQ1=0WY?(.Yi9%gjioP3_`bdD2et2`BSSS0SAF%7NQ$b+:1nj@tI6_8LD45JOSW]QUEX^%qB;sha9pB#6hFMrl`E"J#,RIherC5gd"QgmQsib%(*6D%*)KKHB=I[LWQc&t%I2bS<2\+NO^!^1MC\CDcBSNA23CAJ_V85(+`N)nWc0tG-5OpEf(LAG%lWHA8@p%.+8mk.7+-eRV$e(mSj<Rf%Vsn*2=brM)K(OZ1r*MNUZM'\('1R]<JlkFH=$GEg9.p>Pd4@[9'3F$>EPeCgO1n:Pa*I1.'TS,nTADU\I*FbQfE34PhG%nZ3h.Rk%I+l94_r%&iM=tHD3?m]@o&2L,+FcF75WA`e%(_sm]O)[b\M?EbLbT$]nXT3n*e^MjgN.>2BB@I8a>qAN`h>r_m%/j9#$,k4CgMZ1%ZW#p9Qpm-Y)<Br4%FaUL2q'fm[5dcpX]h6obDe\rg9t"JF-<Us&"a_:9ADqKkklD1iddR`D)=.(F?C4>$R9r-Y^Z"dR1A^)?KFkP%a!a6.[XIKC&K/0Z4F:16T!^Xq_lV\I+_L,eMOCk6+=qb1Lg\r;=j=;HZ)W(m(fU#k!&>Vl0G,7]ZF8(/*Y9J!84ZIkeVt6=2PM>F%H'7b>AQ@$[iOYZ8bTPcKDU^Um8$n75nDo0^dn[jaVKqi)YsWN+i\:S@5!ipC2S,IpYpt/;bXSoP%^1XnDn=SpJ@)l+'[eRRLa-%b%<t#@kEMAO9+X(*u5;\2mdbp7>G1rQ/B%6h4f&4+$n^f60mE`(`)sr^B1]j/"+\M9-q6Skl7JX86<oqX;1FdlT`2rmi+_KgHR-_og%8JDc+0l(Z/cU?V%O7U^fq6L+G\fW%iVj8nNgK.G3&+?RP/Nl,!;I%a2ld8mY5O/nePs>^hUCCB](U]@\a'A#7q'3LGCla>8_I531%8R\Y8$:enE6<^T5j//.j,@1irGJ/=efm.Xr,/S3*6D`=#G?#$uciSc',ST<8/[WJ*8tUV[\Jg;<PFa[ITcITC$\:UI"ib#'AuuVp%5dEtb&RGO4#H\O;D2!sKS9ik&L#t=2NIR=fJfA(k-+r/OL-InX5"CZmhua=@kA\T)qmCYt9Y_Op0Xtqfmr7^6CjNp1Uc*ouF!;Y<%?.jGG.c@"?(R8>JZ?S6c[pF+0=pYS-3>DOcWp$*,@5BZD+1<'#?L=4cWs-WV%`3T>5ELi))L706D`Ql(M-a-ppAo\(?'nV`TA?ro%i69`'f]_&]%W6;]'>sN?%t]ni)RjO)UC1oIfeSTH>s.lldr:DCYauTQZH^7I)7O'G(*X'^_KFgC4:(F-Q7\r/[N&*75:-W"2<\:J%S%H28QQ]-pgBqCHm9"TA4bSXaHif3/-UBk%$nuLr.sm:@#"up.W4Jr0-0Ge&i_0D$P<u@(V5H(-j/=Q7g#YQi\_;'[jW.jo`T";I%Y<sMT`p/Q:[)$-((FE`l2o@Z=?JQ79e>Vot5T4]Xp:;Dn`=TG=V2IHSjq)n]A($6hW>>toZ_AJFJ$0^2Ob.-H+pgqa4EeFr7-boQ%b$:4tPQH[$ON7PrdViCaiKIMBcre>Ao?E+2BhPTeHK9*SMk-0Od_2fgYjD1B;OGOgV"87D8fBI0ZKJ2Uadk;u:t.dc#G?X94%^)j%1k4OW(9lQ4K7BV"ElLT1gl"_)-UCjVEsMi*EX]bdP#38?a$]Ga=^Wl'PK!V3cO:X`qOQ%KjD>\e=fbnO-(@tPG5\/>Ch*cZ+P@k!%'cUp.!g06:.u-!m?D.LqnL[-H?bFegXG0+?9&faJ:XA'OdKjhf^J1's1;ph$E;i`PU7scaL(F[Co'6\bBN<*.0Ge$oH3@_Ya1S_Z%jYqM#".^hKmu5U,>(]Zinh=eaERtR1UnjaC#)Bc/M("XumcO_1f-YNrp>3\_f-Xi'+\;\DUARb.[&h>\4W(7P/<3.**Ba'jgO=m>%33pV7O:E%o6m!o`K[1p#0N5q:K!.uCcZ^kU`.?k&ieg\'I)K[GK/m?]M"",Q5DIB9*N4mn'CZ<F.IM3uU/d80:/?2=#^lr?+%@,,%+Fc+"N4kls_ZXuC.8?u3&AD`'3_4acdWRf".RHZe8F7+-;+?Br=IuPA&4^C_qo0H`q[R44I4%;DG2'o^Lp#/*f@[sn/^rj!h(0hk%HOr]X(m2gJ0I)l^f"NqJE/[K4U-RlgD,b\,Z=FM6pafat:fQ",FoTa2)NtClom2*L.#\OP[!F(U&3%T`T`^0F970)lE&@#]n&H,P%?p_+F2h[S%b8\tB0hlKTZ<s-SR0jM,LD>AA2P87QD[_N!Jjl<HVrh,7d;R6)=#Y\c@n#TC-TW',(2:V(rbQmH<D'b%R7N*\2jX_c%aln+DYEu+C3K^?)LU4`tW#S<m""HJ^?DDdX7W\\I;q<U^H>21"=hQ3'/qKM*2^AZ%>bmWW8?jo@^38$[i^$`YgpJq@_Xr)M(<<*R%cm0e0#3,ToV[3n.m`.YiS,rslX>W9a%'Jm;1*D[M9#iT;(pdcC*HFkCEh11D-8:`"l\^PEN$;Q:3[pb8SEU-H'n)Gc26In+GCOQ&%@?8NB9,QYOEU4sV@1<e-/L>V#YQke;``45IA2I'KXN'-LiF@3(>/gmi+n=YP%1@h/p,%+Ciije#ElZ`dkS[b'!'fZ>L3T3)8Ar-Y%k4q/\0J<lF*[-c<+lsF"@"sA`Id3r&P&3?@P`$0RHSFc]4_bMip^l$m-[2&*-/fBKb,"JlWgS2gQCr6/>2XM*#Z_chgAJ-.S\%TL%(7.oY.^5ScZ&_B('g[;)d3,Z$Lnts`@3$(GBh1KWd2ZdLf/#fRit&5NZ)ljtbubO:`Bij%c=^t@/TWQj0J]88C(lu8q<0X5l>uH(%c+4tPGp*R*W;B4'[Xq#+AG:l&gM)-Lg#@k,[JTS4?fBu2k2rpBA1EhBZfMe/@)U`>_%>B[]c::C`!+=AD`W`RYtTp<25Y=3+MBks%*iaL2[mVoelj'fC`7kppOu=Tiem?rR]A3@[h0nhd(GjQKc=??SXCu50d[Uo(5f4=6GoVTIMZmT^G2nZ+@`@8WdZ[T@h"?Po=A$gZ%(&AnTX@d<G&_RgN6KM>K#7Sm!_FQe(jfh2_#`@u!5iui_h;5<@IV2AR)\70'Os621961r16Y;U.<3qs5FGL]Iaf>UT'PW:/q:nn,%mJ2?aoFo\m=C1psBGoUf?J;r>:9pq\n5(lt&reR5#;8V_3eiR).k9RC$2]T&jo6Im/dU=90djaHP:"9"!HZ&)`YGJ[XLmFA^CuoD%mlSa\g)R\d*2/k53)oEMddHN7F5C1Vrog4mH$B/,,;u<,\MmZ6TfQYKZ_b>dS&Dsek0Oh4\]O!@]1]aDVWg$Z"Dt^Ea0`I?/j9('%!nVh.r4@C.Se\LWia"7(>ISfd@4XCt'Nc1Z>e*!eI%u`*Q"2CU[:&Wc&8pfjB0:7G,jQJ=[R,5B^4Y6"LR,#c1ah]FA$TFLLd_,n%r/gR*Cf[7=C+Yogaa-I\%PZ<.U*Ai3b::@nhb,b/ocin5+V%Cr^@Z_co!+P:XpoiCVn7[co>I2#b:1LD72RXKFF1=;@M-/mP,H`S%$'Mg,%HC7=8rK$E^VhspZR+PsdiPgX3*0.-b&l2dL[IG!Q]j3MFsh7K4KTGnakLGnfO9TF*I$k[kgn,B2_WD>25HJqBgMi4R(=JD%Qe4.)QD,c((%Ysh`:So)RtP:(JYY:Uc(1)K3UC;uF!2El-W)^L](N/:/A593OG#QU]-i&MK4sX?DK4Z$LITCifM#.p[0f<s@"A<k%VNK#LeI+iiR_%"+TJVABPcK4]aXefXcOqmQs2Oqa$(EoZP^8nBjrs.en*J$Bq8,k'@a:T\_/JJe'J175,>ZUB^T7hcM6/3#@=`lM%cW="JKG0"paAI/p7(c<(/G8jD4gc#ER#eB]<%/b'bA`n5&IX+Xp0U=nhk9&*6"bSc=>%:)(e`lXF=m`r#O/d#`\KGhc?cXc)`DNn%V.mt54uY&ej#iKiBq4@m@iFN1=dd9T6!'q'q9F``ReLo8)KdZQ-KZqQR*@SVScr/(30Di4>-Q\s1d]pOiQ*XfLN^@)a8="B691`Y%A:o'%Co9R%>-i=)'4\n6I9[<kqm[b,m,J:+Z&b34Ku00Q"n+A9j3ku&IGA3Wp6!/Yk9.2`'nZeL)AZp^95O0sk^:S026i%<Bh[$Z%kHW^C-<?6Z?V,L59L.I>M?IoYa*C61PZq1NG`IIC)Mp>s\mZ=>*1:,R/AZ1*`<EMT'kbaN%4%jo8R.1.BSqll-BT?82ouJX4'#2a%>R`r[(3.5A>"KHe=t<*WG+++bggDI0OY&o@X17+Fe]u)_cC;=R'pAfpj&qAQElTZT[rLLI(W;&RggDH]E^;8Cj9DmYQ*:CO(Jr/?%1cR!m8`efeK9NR([sqbp8B^[jD(B[NBu<B:eF^D,mtOK2g@tq)LMF^q/r+Mc7F%8@(V*oh/s7`!mm'Xua09gkPIWUt$X,#4DRi='%Q_hq/qIE8-DWri,Y3p`K!ZO(/Z(0)7ARZ^K)C8o"D]oeKNd9Dg7NO9+Ue)*jC6H7#[1E^-.1D'FG[I"1%PI*Y,))_eIB:_/^+Sat%k'"[,Nil0)G&i&c<do(<#]<>nSkkm08c2W9k>e#s.+95@T]UAs?Q'.3A77TW793++V\K33co.''D@n/2XEZFcC9BI9G4c$FE*Q0X%9Va"\mj=3%,&5,\-t'\i$tH>i7"f\N7CqRs>Nqd76EaXl4kr/cj:MoF[A2H"I-d9V<lpO^O+\V*c$h;:>Bo@*@*$@[b5s#K6QlRg%VFqN[l,V%pT]:'K*7Q"G?.dVfNnb6W5E?j!$@,98AP/t_FiHb(^2b-UaMDJ"fBtS501+9<FhG/\(pDf:<Mb$hl;3:MU>fG$L7TrP%%JN%rG&7).Z-80?HOJs&["gu4"#!/\bFs,/NTPP&\!ZMFDFH5pg`<n[e@XE.@9S*5oCH%0Ri<lI:p5^g43j-?2Z(T(.UT99_@TSl%dNS=PI6^V1S,MlV<BZ26gE(d13#R[3YQ1Ds`+7)c.BLL\T;9$6YAL4OcRHl?V36!";GKXOlKL"b,b/SjT'MDR!P)<9&qijoSr]47%11UFpB_nAmU*GKFJcpiQ`@Jgj!#o!!2\E8Pe80u;TnCTA,+1sE:uD\9U"Soj$#cQj/k[-g`lsmV&>#h\/_>;,c-I4q(TSjfdK&p2%#&j5qHFg:-D?C/dj:mU*"pRf0?%sWh.CA<5lYg`(;1lWFWJU:N3h6lTITXu<NB):!l(_K7+U+/2&NA#cM%3>)N"j.JP;8EN!?pGX%K(c#"-=Q@:RmM*hk9dcBYfs5qb:B3iB3QtkequUlSE'"6*Q-mO1^Nq@BWtT\PMml^qb3j.l`;&5Bs;'gSTT;Nb]-+"mkNFc\a_tV%1%m$M7<N'-R^`/>Y?JeIS;G3+?[V"Z<1B)"];RaQ+.)+.92HkI"JfFc]bBme+>.lrE9Mbji0$;qp%-!CV0!0q1e:?`1pe977D(;a%V=A%*HV!#f689GuL2`_cSqik.pIn:S>i<#r\LihAXBukMLNtR22TNcVDet5aFO#?d3otu5N226+_C8G_C?bOaiJ3n:@D#IEiZQ(q%lJ82`"?k.(L7\1%>1WGaUJqZjF+KW2\6<kA/O:u]2D2tJAlVeV"I"6(Q!3PoFd8(^I)1Lr0<qXC.VerVR?E^&)%mK^a<lI*k=ttd%%ZY)Edh7o.$D>9[,FbTZ^JLY7UKjPjde)9n6]>TOU_:$1J96B$m0G;hDak9ZUUa#[FI,P6AJuqY/7WCdBe:)'^@m3Mj!;bo_tU%k%<+ba!&-s7l3_)/u%T.i*C"+1QXlLo<m+O_AlS*S<>alL?(9SP)LD8;4Y`lT-%:8Po1]gcfd3TD%QA'[+r]TjaHc._K,ULBLght9`%>rl/?-daDfPj$\9^kCjL?9A8+hGWZ/4?D"h-6&m0U0&Ac\Z_BgZnSrBFs1&&5HOO+adC?HJ?d^j4c3rpYOm20H3/(8HoiC5oeYoB%ZXpJD8WNCa]/.[Re59>79%r'V6p=DmVHCAe\%=H\-r[7([?leQ^W7[<+fkHALS_*odX5E3:>KF8+t"E\%EoEu9Vj.&Qo#t>Y<2;C%pD.os"L6_YbojqJ<@\5=NpMH,8lTN%Xl<V7frn:=,-$Rt;lJ2\8h1d.I#VcK8iW1DeY,;h][)^d@o)[Xjc6(9`6O'-Cl0!U/<2Ln%G_lQr,oJ-q/P:@),SN@l_/fF:->R,W@9j0mXOuh/p,cG6e,&B$]!I_JBqb=)-/n,g(Atl1)n"uWX^#DSV9`.dj@GZ1B#3)tV*Gn-%4Wl/GJM10q)[E)@Y_nGsA0X)eOP(2PN-$cWc-tL?h.b+l2h7hg*e/)_[@:C=BC$Du1XCU9.cS!B.&Gt&#2etd`a1plaH.W4e("i<%o,ZiKRK!Ll%J/G#84QjRMB:ACm^@3.QHog99$oam"2mai9H*NR$3\Ak%&2B9)CmgOJQB^*"^2M='ki@?+&3BeFUI)!]!GLieim+b%cjhj8JY4.*L$!tk='Ej742bqO!^kqR8l4iMB[C-(@T*R)'S'^(X%A)[V_AZjrAj=>G:0<?fCn'g?+2TuJYCL$QrI7,XO/_4#`:SL%;(e7G#J8=a=Ns/gA7P.$Y#s\#M^j_L*b/c;#_%k;Jihe?!F_]]Yrc[_5Qnr5cH&K<Su[:#<hUOGZjPLc&B:RFWLbqrZW1\q_2V=5%DP#KGDI*T['*:#Jc,D$:!*5<1"u9A8(;O_tg&P`3&.ldN`O`rb-Aq&<cb<`Q6+_kS8HQm5l:>\nI9d:L]ZuagiC)nTDVU0$F0up@%QK,O0KkAEG/@7ZSX,u/XZE_q67cV(YMK>)c92T`-"oY4\NG&;N<[#O#WTdi0UA;YW?h+n@YuR.Kek2!a<Zr"uiG>aP9A!C$[[8lm%gtZu[`87A^Dp]%L>D9k[_Bihe-frl."N'$T>`R1JR7F"`!7G@2<*cVIB,"NU]#BK0]F-[dn4OV@<sH=H5^/"-+U2%B.n0KZbOCUK%8*T,mnSfb_$_$P13`Rl_D=iH7LBK_MgfP+@mcn%sBu(?H<P?!Rc=>>j2<#!q7,nB]nT_NP7"I__b9neeibm>6UoYsMcRtq?iXF_:%jQ_Q.`Jnbl;m3]\f-,ln_@TX4Er$`,(m$r%7Q&G?Dkn_bbt*2<;&hp#.-*?u19u/55&D0n+cfdf"`o=2oRtS8i7S;Rb0nI)\r#:7%`V>be.ZpILV;3[nE0asO$_#[V7Ek'hn$a.L*PuDc\j1M0Kc<!H$L:4elt.umN%KkIE'<'[(`fbFVu4Yonb=_XP9aYr[cQN`$?f=;%[HEG`KN=7,omApAERP:elhX^V^,tE1=V-.Zg2!u9moE,Y.WcK`pW8<OMRd'O[.qC%6Tne]P9B[*Y@Y2D_SkHS?K.&WF%%YC.o0_C%GGc-VX,r,*N-A!,ZBAe!+74;GoU`N!]7p%0\3[b]Ea5/D#`_Nh?3pP]S#*Se9R^+4R^6`e3Ln%Z*b@DT0U<E2b+H0EJgj'h,?,pG%YD[9-,hshn/sWs$(8cZ3pi=E@kCu&Frb64O%b9TT]Ot#ahnO6.aZtEFanFgf2+s<1a8<R*@*2H!_H@HU13=eH7?QBD<ftfK,12WS%N$l4[r2[.oH.NbU50XB>Zqg6#,IP7;P-ss':ERt>k>HeY.$puW5Z4<8A%'h1`7@.LPkl8]W!,(hQ<!]jK<YufI_;6Z:?7&!nl7ZT%cA5r#kY[3nMIknDY1of7J70-qQs^E)$cW`G-jtS`^t*Ns<U4%DaNpKh>gAWl:NA=[K=p&EF7ZD%3'-qlO_Na<hu(G,q==(4c>%;d%]iu],LnjceK6kLhSd<8.^TRHnK]>Bk;.rSZQQt`m@&c7IIQpdu:oGF5W*`Q"@46UsK-cGQ:l7[&buu^TmoK@"R4gF0amHNR"4IDr%(=FR%G!N9%Yu1?F@R\N(k4*?*OIB]0`Nin26)8cD-U^o=H.R-&(f!peMkAD4'8s+A0TJOQ,`k'CXkXI2&2?GIXC@Yr6)luSmVt<b%K-uf(6MfD"SJHQBZuObQ:<_&T=)3P0kj*l:fch,`ZZQP[,.*L6;\rHjZjW*Uf4pAZcI7Z%knpqe:K@m(C'K@lLd4[[*Ih.]/ZKaH%O"QLp!gBM6,gtoFQ9E$)Ep^2H?;0[+]-<i5SaMC>.pB3\mBVLd\YnM1fY2fc\c\O\Sk&IcNM4k6hJ*=paNB6AD1qa21c&(qcY^F<%@U!l?#KaYfYO(1*j)E&ZjWn>o0G"/*5/JSf#e/#YH0%1SKX,#gBs?<:R<ipgbL/-TN\KorWf<kJ6Wr"%SVu.pqL"J7@Q@_TYOS@@%]1[ud&[7HE,i4DM28Z<T(+48fKCjadP0>kRM9LBG5`5^/Y&?knd(?'HBGJTT_?L4F'/Voll&o@<M!0'O:9m3SN(7O%q^jBG'cTRs%o&4WAdF*]QlnfN/N!g0M%l`9t"gObt1M1jCB2#*$@!;L%`kegEH_0cq3).T)Sk2sHg,<DYX./.n[ZN\8jHb6j>3@JEn(rFq<lBC8%G'?',"B)8)V#oLNMWWF"\_:^O4U09%7$?hY)L+D7^KCUX$nD@+2%k,C=[ir-Q5L[f[l].^T\43Xopt^:@PbVP_-M@;T<QD:$Y"=b%B?ZB->VIGmn,$6W]5ihiN-DaJ?FBIO?5EI]1!Q2p,8HOc?5^WUE*VYQQP$Jm-lcs[X-MOQbN$a7^MFa%Rj>"F(E:rhcV,KcUA$'(%lR7%3%)Bc*q+imOQ&Iu$[D%M8g9HO]$C)sTl,-6uTcL0=EMujdV1M/oU-CV/JZuMq.H1E9HT7HW:'f;,mDM9T!LM!D;qSa!BSnUX%A'H,'Nj;_u@-N,]_[9i%@Yr&7'b;7ngf)D4<NWnf7q$JXWFEDRTH8%p+1Jg/E$4N.FfLp-NJ8F]>:QD1PC?aB:R7^Q1rt#EFdA3B%Y5<)GQA1*[U3d/S_HS5N2h;B4Q0ZP#C/^\UC!s,jo#\#P_^^m(LmaY"SJcKB=gUI+:3BaK>`FDm7WK8IF_6M$+A%dO)"+HrKeZ'l%,X@NnV&f_:'h's*45Z6%<n;>"Fd%Z@?2N%&581*`WD-r8JDnq8>b%0O!fl)G`Y*cnW_C`hbo4e;5O$0)@Gt;PJ3u&.Wd-%O'OZDG%V^btd\)#.>@YIk'iHN#J:-pr2^F'AO]5Ti(9D=osaQapW-;s!UF*!ntM_LNs\JR9:?q8Kn_QqYL`S5<;jqh(jgrraf1u%,hP=g,I%[@u,7G#i,+iZU4d!#(OG==0Eq[KJGN'(T0s+(<&?>PIrtmR)#;^B`:/f.7_1oOUB,:Qe6o(.mN1O_tLW4@kI-8Ku.!ZdB5sq>l/0%VF5=;>UT*%a_6+U?<UoDd6q^M6QZ/_T`T*WhkDHe3>9^lR4!*jk"aH87>B3@=K$e_4aL.8)3#1?)k!UB%6E.0"BlFS-"u]f?SG\"%Sd$BFpi5+=1=k;`L;@Bf,eLP(,>(((olDs#9>6Oq0#cK6nJ&*]Pq?>s)n(.1/8Y,;a@4._9QbD)kOi"Sp1:)(G@B`XAl;k+m9scH%2);(]KTbCVEOmin$]Fa_-AR?n_RO+*>H)3A"R6h9j*!>o9Lj@O9G@S`bYhshpWDlNYkV7i&RjUfp^S/t];8gFGUTn'Rt`X<kcXgY%q(m[>!eb,2$tKI6%c$t\23`[LgN4Nn!pRB@5WC5VBasa><C=.1[VGt'j4hLV*UA#hUjm=,4?4skE99k858?+''o0klpA"-N\eW%m%3@-YVjFPT&j;%6BOdK1S4(:j$6Q'Wu(o"]+"lFc=+3r^FImr92di30GmoBk][]c;X<J<B8[0hXnbR6b4op;KSOj%h)+r1TCcmk,e%VtD1p$J&7jT#V$f?5+YZQ*jrRm4d)@bJ#6;+N(,U?2&HsYE1).X)5;rhX4=UF?5]5Rr=g^@NK;.cNs%f^8,c<1WDX$ppn3uAa8s/%42_tLEg]C1;_<<_b`5kR2`=\I?A[45HBM?&lP;5IdIr+]BGUFR;\d/Si0IOHj:Ocq,G8'C5NFkt:Xn164-qbcBuQ1(SCdIu9p8\e%co[]K*K65+(QZUWXj<RC.CSdieBN&X(5.G,S^gbJRQ`G=Kch^';ojd-ko]Y$b.d27BH'4dUNa^73Z]aC2W]g/(N)ri.0&Uk7Br"K%9D>O%*[9c%0drD5hAApXB]:WKG8dj=A?\Z3;>93ne#,>5+YmtXSH._t]D5A?l1om6'FkM%hsbEbiqcJ;>UuHoWb>4Y2-\($/ft79%D?o0t@8,dDqlU4rM?2+^P2kMEDL/#%CLLdrkcC?sLnUW^j5#=?BTZ?>7?kC.59U&*r`BPmG;_re`WH&KK38F;H<on@M62CVI<(p\%M(<Y(O&e("NETg1.-AQGZWTXS4=r8f707tS]\^"mdmbu(I:ellajQ's%edI*lo.A(#:'ZE'2NYHf?JLK_<Rud#,W`R=+m#omf-mF%OmpR[:hcXBcFP^U]l-r:grRd@rDj:G>*Rtg/FPfHgmiRnpO_%:h(rZ`FjHFf!K<c'Uf(fd=kg9?k:A0<HF3n426H-u'ncR]acdF`%A+%ul&ftfZ#TLH!D1OLnS'ac<F!!I'(cT0F;^?5K=>lWW:<(#nos?.NQL1TK/e*qim7/*Y\p6c+U1D/6lP(8HW6=@EE[rZb&\"5I%8@hk\#d+2RpIP+H>V'U@af1PcjDTt+H!&mP(5/'c0Ek+PR(Nt>e3k#(+m/eQ`eFq_q-#7_dL]3N"4J=JV;+'kG"B$$hbE'ISl5gq%:EG/pTkptN>VGW"SQCs"<Z"Vg5cJ;/+t/$M]D!U9D?[QQeC]6:`Y+l4mbM.#OMs2XSrN-MmWqHJ[rk*XI,u>,O""XgW%f([PaBD>%NNT[K`l:C<7kuF3#YYMPY&;N],g0db'B43(at)@&;n1_7?n[;,?Y9PeGo*tkK9,EC<mWr_F$^[/`1ach6Boa)qNYS1pS66):tWF%%*2OlZLskjU?CL3i(+7EI9R1)WUiTnH!(>**mU_HCq1<"n;/SY/,d3LFGJ.+`0!,ahPpD6BfZHI^%>@2+K.$SK6+F&WUH'?bPq957%<%QD+cJge*d205`M#]5m?P^*o^``"6&L'@31/Z_+*J_\uW'$Uk&l.*K*tB^i9D]+hiG@%E)B1b+XVeoPER:`_E^`AjHXBJs2Ha%`%'6g!Xe:O'b(Y3p`o*3mW.]h]3ma&QXk#LKiF@QGO?HZ%$o&Ht2'>Z%=k,LjX,Sfj4OZUKDV9Q:7G2VmVcIAtu'$9JE:n+a,_/P!d%PitItQ0m8FN,q?_^c7f"+0YWN9r<M_TdYF--ce4)#ClC6ocU?mZR>Mn0e_AW3!:7(*G-ghM;I5GrcHYWZ<GqR[a`U7@T6g8@CiOb%-rZQ#[O^c2V2jSD1n29[Jt/3Q$b/8=Oa0'&RWqUMX<rA.e>*VPCR]D7;prCq2gAf%U1)%k3@q+?l%_-uc)Y%V1p&<,,RG=9ffW2d%*R_fLo;/@D:bhtairk*m&eM0[1`>qVBs\B%=8;koD#8@,--nmGcDfZr@1mkX)0@MCf-uduKWf)Z*6tEY@-$TN!<gVCW.dO/U$!UL%eLk[4KeRr(km_c54HB8o3;SEj@P_/CB6BQGOAMV?Kp2:<O6:$8\5hZS2-(G-U;XtN3JbmG3AnhjH)hWFokW]#'R20o9Kd@$Q[5[p%TI3hK_\8[Rq^;J2%ui:f@l_>*L>.h%)*^G^S%CW00@n!Dbm>sc3WBm?K,nP<f:MVSn`#6`<Wlhh[7R[EGp@gTQ@]*Bl6DL)`MA]K%ELWp[0=b);ZjNmpUc15&bEl8%f>97)EMVucemtUgnHn^I,+H/uCp?g7AMIjSS-:)e^MJfNl;AS=1^ZVnlmg6Mc;HlS,8"'1<\"G,%VPQ2#bu#Zo>">4FHZ9R"&Z\=,?oAYFJm%FOb@h^lTOlCf42g`B/PW\)#i/\M:cD]u[UE51f^!S?X[C@=gP_b53@HCe5%P[c7)57s%ZXs=VXg#]7BQbsH4+nZU#P._^eAF9EeqF]p?:J4]K=lpXgIo$ZlE/6#pUDWPqfm!Ark]tP\L)!h#Zpo!9s:br[+MW"`5XNF_/*(3%.qWr5>"6-&FQP%@DVA[4en[=MoWr2WZ;!FO0Q6ZZaE]rs=/,:t'[4X&`4SC7]T-TsLt.,G`boX"mNA9W!s%=X:Zoi_@"oX[0TS<6%p_ceb]\drS;s3maW5=YC9e91#<*.mIHAe."h%X]E?sN1JG/9<3AOYg9?p/#_>ejc.Y*c+%ZTCS`AiW<$!:2LQOi'pK(uiLZPVSfo%f]]bGQUmP`ekY:CGFY`]PrCrb0=C!'KMnZ#MOkkAA9XPGZ/RL&C@#LFJe4BYYqSrf/%9R'2i9kqh*Rk#'S@$u>O=WkiE*YKK\XcP%Uu[K.Fq)R!:%!c2li><M'[GNe-q'lFZD/J0h^g".<4gN-h*N>HTB$<;<)$#TQVe%YI3\h]?WK'<j+>prN&,'i!%B-cBaSr@bn4iH%kklU'f76@@1sg)W"%!7`*mQ"0Gn(jC(5cMn/TKNS8J8G2\<`K(@+:i<n:4_7H#oeaMP[*NOAQ\$01"7\'@kILgm_r&+-5/?U\?Qq%d64`&N9b&2ct=tR9k[fOr0$;eLP]MD:5[%hQ;[m!Er?hBD!g:=_`KkY'3W<XH0m,RU@Cq,2*\LtW*CGR^BPH.PCf<Z'O.c<VGmY8%%+]3cHhBd/n`-Aa9qe%]Dj<'\`?'`SWPrS1]e%3;#!CbE,]gtQ@\h\eHYUNT(7?k)aL&:Y5i>RSr(@q:ZQLmE__P.!%#BpI_K#sP%3<t%#4^Li5J?X9T3Z')>5`DcieOOQ88XJlgI.34phg*+5o$kWl:Rrd!NSDX6E9(LIe;Pp?^mFZfMI)m&,$t'bgRBeJOfF]]O>AK2%i]3u.]2ZuB!0n9.#V.6dk?>/Nr9EXDUE6_C/-o/]N=gRhB(JnQR+[,sJs&Dd\9*R1S6efe+d,,K+"^^PRaAi@aJ6\RDI;%(5bNr:%_7R+#9)+F3F!PC1fXRie.^-k:8/-4?S`S+,`k(Z`fU)#kUM_U98C?HoA,g!Rhh\*7F=G+'%LN*MTt&@THV&9qC<JtR:HA/&-aaWp%C9Us>FVCSWU>g,<K[\c3//d?%PQ8fAh>D0LSRn0$`eE-@^o*N_K[eZ4F]1gu^HS/D@.S9]OSL_^Z9SK2o%oud=@*pd83)&H4#&!f%]FPO9nqN-Z3U7TP:@0/mA5i3I^$q+[_MG"4a!RApKK[VT>*MN^8IaQ#j+]LO`j1FX#B;^2.8*C7%+uTBA^a.aI?7sB4^`_8BJH-&%`i;#a@h\eR0$1#">;B'^Qja31Ahh-u%YC[/=L)-CHj;Dsq/9R,dKJ+"(D8e>66I`9HfZm!K4?E[/@P.(?.A3Y'1se;Xp\uu;GEDF%]b6_7_e'ZDE/Ze9!C>5n4NT+%@%KA:nM75tB<1u'qWN!1EMR'B.K+6J%`]o,LI0"_%h8"@0sg3W"d62l+=FB;Dg$ETb@l@/K$!N'%'MK!25J*GpA[KXk7KJj='m\sghE3<lI%5GuQ38mkH[!c7@$^igqCP!,K]<SBDR!3#pF]4o[9ac+5XZ[gJEr.e;f_@T_sfL6a^heJ%!Y<!;b^(F"Z4N-G)WCYYCINjui#[P)JQT3LMtLc@BiX3#MSrg_C4!lRHS0bj7$R$'g4/Fd;W3rhMuttD?.2&DP-2cc8,5B#J>X<<%)&A1'HeF@sT+bpc*CRKgl(BL4XrCWd4r%j;1<Y>>SSJWM@,S&W/ko=FTrC0Yf(=h(h\oD&28!U,@qANZ[[Y_7)t2P78<,&8pX_O"%N<q>+SmO1&lBFF`1'FbC=CQ2jm*[TO]8-QVdKq^U;W_uoFE>9W*2?dSlA5"&`'>J4#AApZp7.?sE2,4`SIC8m2"_,GbfG!g5$;GR%?BpU],FQA;Roi0c74@1j"d7m2[@pV!6I`.iEOY7_6TG9$Qg+6lC7cG\ag>_TZ?q>LOF+R=+lf,(,teRXI@GKJ/HS_&Z%=gnAG)hh%eUa?+"F`F5R7mn7[_d8KWsqLP(7d80[2sKV2=IjM]h[,>?efK@LeYA;DZIhn\[>9p1JbU9Gt,9">L$2@Zq9P>Z6k$us(I=#\u#;d%B@r'`%267I/2:Tare^>"W'Sa]%1Z_e)U^VkH,f<1XM34Imco[CCOk7K9K:h<lfF;N<^Ms?X1&*<WDu4E8CD[d^;jqTXFh.9j[b`D%(hB4sVN\RW+#gq\NOB`KhT?LS<k?B4FUWGr$1V[Do"5Ep6gWfiGqt??orV7S^p\<aird/^i0+<6eX"_^U%H0Q0_bCZTlJ&).?>6S%JKa)4<Y)7>a2DRST:;q@Zt$)%Y3D+iWph-?k0t)<cX?mui.:l@h+.(a6pE_4A;apI1?Yt$D?a]pC6%F+`dJOQNmSQ8*k,&d.`PAe%5gb$q%57&R@!H:]_^1DrLS::WB;,8`E@,O=PUQKU4$Ns$!)JJ.Z19m:%DM'&2;*;d@&YFoVScSR*N&*@+Ca;78hP96C6#scMXZj:%km2@"g5PQSiaYE5*f"`,'1nHldc@\7`Yp;n'&g!$OFX(V9k?17;td=4Dp^Zk@D,.75qH<:+OMSB7:%TjdG1\nmsZm!$1H'?;KlP<%[.9TMs&#0MgYgXh8F"VuAc(ahjaqYr*L`h\L674SfadC\6ONo\/@5eOhsu5[@s'J_Y;^;flu)0KH!2rPg*Zf3f-JKYa*7).'qd^0%>c8+K=nnlED:PF``1mp(9/$8uhK6cE]g[E`oGhecc'S!tQtXn@=NU[;lK`;TmE(2!*\=n6#D(OP)m$_f_%osDY]+-a)=/r0W)iFf%/3tFApd*>AT*u<ti-*#`("&U!ln+KUg@a+l;Hge?,^X0$kmp6>BQ2@tUZ>%aC=/N^[Xc=jHSfGUeKu&YDmlQu3UEH&OJW[[Nn.]H%AG@iFD=e-s5;3n6.CV.lV"m39G0'/Ug6.cWda%/9DZ\-W-doLqfH<g9X4raflNV*XTqX/7rcSaajR.o@223g>p9uOtAg*BRd>1fN%ZVaH_RD5Pa_oecOF$`M),4noDHQcQ7KYSO7.@2!tX@DGYEo[<W@27JL?7up;B9U4)aRfYNE6>M-HBP"4PN>8%X!!A&d(%*\2SG3(%bt;%Lf3Ha93AG^uE3CY^^$@/_5/)c1qt+'Z=(GR,"R?cC0X$&d-'rIoa->R:XT0UF6<%sU@EpBX16/K'b^D1MqA<Os(o_odK:enW%aMjioSB$>DR%p`",VI`g#YMdYa'12tQFpBb,gp0b`5/A"^=1]cj5(738Gc0:/oi;lKb&f7(k?:t!ggrDA4-9B*X>"O]-.GPFm&D6%[*L:jF/WFJ,!c4=Y>A'fA`kmYggHEPC,d8Fj+%,U30)7E/Z^:1&Cbt10sPpA6n#_irmAH4-5t+egPR&Ilp@dF,d`.#;MS,>&r0aa%_(mW^b02G^6+$3\cEmj$8E<J"oKpDGBH]6JK'iR$n[]q0>173%SB\m^qbAnF-R8/I3:CO<)5]]iKGktXUu\"[JQYQZ@m![ILCTAi%d]YVLlKKLNi%ucW,\hQ:B*:/)/=WkQC.mGl>@CS]=l!7S4F)nI:*HO^9&6bYD@gZAN`P2HOL&`S97AKTXS8`^n3;YF;Ap>j-oIW>%>><?t5(K!2d+QS)@^KfTa?ppIeOJ<ba%=?!OHm-_$sjO"j9^HiDMOo8:k')BjP`ReoN7rZq,lljnOtC8LrWO+f];*Aiag?SHI@Pp%8V8!`_Db?he:nq-W.88qN@a"T&5@HjIBTd<1U5Df^]dY)`B;Yf9[Oi6nW#!Gabk=O[,9OPl+]R6gWdDk1Db&$@WRk^S,Y`>Actog%<.8c%;#I%@S\dpL<<,bGPYE&8=-!+/ER^P\\HRJBNnftj:#:*Mm$M#Par%_72E+bo3j^Ic)Ps#a=qK')fIMd4E>gQWd\SX\86?%E%1+;WN0BT=lh8e,lRt'>9raNpB8o$tWg#>0+D:V?1(odbZ;=,LcHc:N>;?@E\e&B=E%>5X8fP-q!%Y"`4Z:bV=DtQYD3pamhs(R@C%50LNu9k,6aJuHC`;Bm?AARBd4(`sj%YU`=:l5fI<Ra)ieYqc:XLlJun`ooJ5_8GBV0S?_,(?8R=:-ChO-Ee6t`@-T2V-"HDA#,3O%AYgkZ[7DsGBdm3M/Xi+\0q]eu46_OYWAXmBm!q[TJjlgt-7R!h[po`2VGVV*O;ZSH#j!17K-A7JEifHHj`p/9S.Vmin"l7k'*#<*%jfl*i+N.DA`/p(t&<ohiK[I4fYqXZrIC/HJ$=[X?.p*/?gfs0;)TJqK0[=%tQ]nr![nNt</:-)NZ(]cn[.-VT&TJqjjrKW9Y))[Q%BQ_d'dQkK2R!o(XXI.K8`&iLRf1!l6801G8l)q'pX.@A>JoZ6XL;-FO(jrG-@d7a)>VN(<OHq:aQulqi.FB+g-(:=V@>kS2-(9m<%-?+]H&?V%ueZbm3YW9ekHKf/NfH=,;4n/^'7O%!=gNV).TBd1ioTs>^ko<Y%&+s\=*ccD*??/aZl]'G]FjPYRJb^EtYO,u)bD!pB%S8STL'Rd&m]dUm*$.">3X08+oYE#9/G?N1+rug#okTBkl&KIR6W3iA%#egGb)2:#A+^%QY7t'!$SdJsnh+Kb#X[4d5^LKkQd^lon%^!ofZc&S"C:k`53dtAfu>1X=2W)5tQ?/iFHD&d<F"juV(8(5^&<eGVR95;JE1fUEJ+e(Fb60Z^:S]7FITCM0JQ@Hh,USH79_cU>e%c>;8(Oje07Ao4oTd`-)<hqJ<O,,UDHQ`k>Ibr!r,>S&l:NU]t09IP<Ol\[)B[@IcS=UAWkY[R_f:GtEkVY"B#c`e^[I)+81jIGqX%&`!ARHs1_'bV<-!T):F)oFH)d.<'*,++AC<O3G#V3Fc[cU_lfgGJ2pkQRQP5%Wbd%*Q/f*ok<7)/bT+;!\["e]8>%*SY:]jV7?/K%@Ym4u[sk+g$_S(G1H4ZFM:T&<.pZ(g>06Hp#ucD>M%lP@9cMn^*\TsYXTGe=RWP^"=!N0.^#4m'dMdK1^6b]>_iU;2Gsc+]=Jch<%(^;mc,GV6_B.IVN1p1Cnok$+A:i.pBQ*GNO\sYIoq+b2U'IpWX$?NrFQ8J<r_H,]adma90.)PPX(Fj&O=s=I2U*$.s$G=*pq-r;R%K5'rAKuh<dO9_@`$hG*"82#C1?+mpU#Casq^)9>XQQ$@dG'YmhLl5Pb!_/_0ejnUbWkFl/Uf+O\'qQ#>,!9YFq(W(KQJSVC>PIp.%D&P/^XJ>K%_4\Z^<6=;sLINl_-G)t6IJcB8)>c`,PSJ0]s23@<?KU?*K6hHFJ)r$LFiePG,Sc_'.[6(u5s63?P5@N#Q\J(DNY0:Z%RtGDb9sn;bQK%K#m,hEA0Zmm(VYBfQ.$i)SHg5kQCI>-nNln/`@V&'AhaDNe<s(IR_U)\V:u)`=XP/3e)Uu#P\kqMC[sLn0[u!u"%S?,m:!pOXfIL&e0"QI-,\hD;BOrMG5P;bRuDYqgT"+s1s&>DdO5hlDq1:/!RisibF5;bn#=BP*6#Xfii`u/a?K>-.W#7D9'6ulB1%U(>eeeel%\ZL$sf%==-S6Qiad377uXLISHQ9$a$&U1;2NN]ec9SHXZ'A7m?s0;Usi8,f;J]bUmJ:H0aSlbSO)@Gdc#&"%#r>\buh%5cX"1;:uh]%\_Z#&jc`S'@FZp82EsqJhY$MZ`0-o%2/tDKTh6F)(.8)n/7(P&Wri=Brm")++nc,45WQ5n"@$BbZ)m1DEtJuI?;)\%0+`WthT+-K:\-Of]b/sL;S/.gE0o):IEJh'EQ41$6%T+J?]7idB%`qT^2s))6Boe>o*nYC=]ofN5S2moJ"8\;Wj-25.'6OX.*mig%nmkI*]N%nHf@$,79!kHVE2&[G.$hQ=KbPZ3@4Z4!_UPIpQPS[*q6K>OdE%nm'qJG]OVS8NgTVW21n,8J<h-uhO0)_H-5/,d1<5j$%).Pb-n4XjoC?Kgk%(7:_9D"V]gY`:[E\j=GR$@`c)K@[[".;&QZbha!@ijCr_?htk$nJ1ulid\3)q,)f2s[9ndu_\%\+rk-Zj!u4%8iG*@CufV5iG9'`3FTa+d[PNdmD+k[,cn2G+meK/3n\?]O0A*95.q`opX9_Hq*H<9p>4II*iCPYOWo:.^mAROpkjp+Z[BVVe9j1S%OYA9=(IXg)AhEY6Ti=r2lpI\[K"KM;)fc,H"b/d%?(p&QQ/f0m,hF2'[V6RY+\';UFBA0\T)S:;VOUPgEb!-M#d=[<P>*'?=UXB1%o%%f>$o6HX77/(F&;9]7R%0P!,ie2FEWLmEN8Qc6.l&PZM?SZ/Qpd&u]PL!)@nZM?K%8O2(-o^"[]:6@V=k4I_e6/&8JDUj2nb<Y%9?i2)qKSQU,!I;.,*3JHH-ZrNdDrk0WRZ&GS.6i_p&.RHL_>)q_65Iq$Nee:)mA[e+Vj5!j*dNDE)tmFG:38fpZ(d$mLY_JS7*Q1%)?<o89CXR9T][W2D>L[1cJ$eN+&"V-Z8fp+"eB0eNgMC2W".8CN7d!q)3Z`%bF'msO1XJ#o-c)D2<8?T.p0u#]Je,>`NRNA4c9i1%h/?&H*FjNJ@$C]+]d'*VK!+)]^WdUF9W<'B3J?GO.-rMXMUOB9T4pc5.bK?Q3STtnK>7HHC[BBrCLR4i:i1?o&-g;e,?4+d_G7#k%R9*4NKG@rd6!`M\HBo8s3/SGJ-O'4%]+oteq060&Jh0\V9OZ-(Rg+f<=f`S[ag_Q"`1q1_V<:MgT7dm.'N@i.mu13i*Nst5ft7!3%Cth';#V>Mk-j`j^ZTt]tji?!*M:[235I`nH,2hP0;l;%gTAST^Ym)%s-?17=KQ&Q2jP8i`5s:\/4,0DYBV'*fc"_,?m<NbaY^5i"%Qk6X;U7gX/8^bWX!bpO66Kgh6B8KcpLkTI,Vs++Q-[qs<[u_q/[Dl=[hdEO@GE_eq_U2RT.pR_d09F\0R4n43<L>/OO?(bk4[\g0%SC[);R"c!:#GXlD&i#+Y>E$9>`46am2hn:d6TmKP>OH1C("5GYH+pAH?JTBdlCOq.<\(O`8DAAI(!nu;?&3C_3=$,X98X"DQ]bSH%#B)VDiIuCs<i?McR1Xnreao=L,>k\*D`4SD:YY=#<8>2h+u<3]@&]])QYa3]FRnL#3'4LA6rZ5&oQ#eU.jR*Qk#"A*MW5,5Y?^V>%;C[Hu,RG%Rg(U:E(<`h$1UoW#d=[o?:;p;pkX8&KK+8`T(jmf;hW5Wl(7G9*OLEHf?qtH(FiTIe.[e1B*QkrGljGn^AI'T=;sH,*%&4iO%["]@20Nt)b,Y&f15;.:WVCYTG/bNtkIGQ!(0oN`C!;dE?kaa?/@jJUqa0N6M.Hg3OaOc/96DuE--KcuEiqYO-5Gb(_4%Kp,%aau<bp4>Qgcmq$<I`=Y'oFc.SdD"qY`,S_VW?k/EX<]em*BV1J4k_Wo(64$L'4'UVGr!f`*Xd43PFH+!J-b:n:-.'=^"eKb1Me<+%(9&MGok<dU<Wi<jDV$_Be,t72$,11o`LoL50]V%BrktoEQ7H'$0k%;TD(m)%JkjP=5Z0KG8t$4-fFaa82Xq>%a_,\*ml>&#al#u[%/!rUZ@Z?;_`Cpq875c!g!EH2)i@i>k(MkfU<OE0J/DQ96^[dqDI#YW1pQULJ%\Um$\OJ;>ALA-=B0M%1nrWX.h24djr*ZI+;G$iL%?%Rpq&5-'hRT"#Z3[]pfc60&'EXQh,'6GSr/8XtSP550`E:AV29#:>^J16H558,&a&bX7"Pc:eK!&6qp(_F+L\L'O94nCWK13q9f%iU&FrMYi*U`jDb6)'.kE0ID-&"Pb`cYh4=u.72jm0LLP/;*6BgS,\idQ5-N]\s(<sWm2sWp,WA#&t9G8=i_V#r;>J>^*8S/[Wlf$%@.`oO]Sa%<@`Dq^D:YF93GpU?V*H&WYh^F(2rC@N1W_r.>pjk/>"0(%Xa*Y,TDO8O+R51>PKuo>Nuu_'Cl`KhhO0O:4Gr2]*f(O'%]Q3b,/r1<eeKbX1-tka@Xqr'3$9Id3-^)#Kf3\(OdE6)6.lpdO=`\XQAKn9;JEF`[\[]Fc@Zb(D>(*@V@ln>D\X$8LISQPSM#L#>%TGk88NJ3<6=Nk#b/=`>8?Z[-P_p%CgOY'Kb&3SX/RE>ZXZWFEbn];WbWKl$KqdY@mp<41*Xf[9b=V:!+dK>\u-sq-7Y+<OK:t$K_%)[_HG%Ej@UWFco>SdZgb3'QIl!gR@cS4Mus$2*=o&G%Q%*L8q"qtL-dVDttsBcQ9+:.!%&Jb\=2_qL-NJr3m8%siLQbl"T@f,,%i%I-\]EhZ*M3%t=E8Mr0!Wl*!>OO8Ek[:N$p4M:MKoqtGR9`TP#7o],hX^\cj]?bH0ibFa1U`NOj,F8l[M^TIP);L(r-4mW@&$9=<6%g].6$>qV<pRPU)9h._-@L9_B"q10^^p?`Be'l1EV-55JV]3"ZlGP]d%\MJ#N)?bJO?lf2U#2)cMUEU*q(GP@:iE/1-SrA&[CV!_6%k=MO!_3m@4JP4OT?<RT>:;I3`B*oU1@n(YaJfKBS1_!+taZ+XBS3Nm,([>+`<=`][$bB,d+6'Gi0btjW5Eo7(+i\79p72@SRdt)b%U),p/]1)Bk<A5Sp.,=LS-\fO)4ba_:4mM`X--,%9kjOW!0HP:<K1h4*Wb&_[V9`2`b7@:hj'C5sl]=oo[hOTnq^0a`=jpJd09@9[%f?*!&)p+>CLU`RdA$-8AZ/rVU]X[9rio&"mILbaaY_HkJ@>]Ndbto6AL+*<PZC?AUjmC(':7Lj>%"Qh;2]Hl7;U"N_?.LW]$%k\;%2P,<?H@AN,PD@\Z&-UdCmZc@=/f5jrgRL%Cb?u%+PT]<=`RUr76KjF8PMG[C(_?dT"**'j\>40YMEm88\A'8$.m.P%pR^?t5,&RC%Cq\Bc6dr?%bE8nB_2q6>Eu+VIP-#Kcmf">hd.c[_9[\X$@glB@qNuB5*EegZXk&I<%o1rbCcUkK,`LpN\\XU1*9*`bRoo'/V5D*'%LRXPK]Qkrij,`VJHG%.bQ`OQ'4`f7L#$5:b!7]Vh`#7\#:U4EgE09XN3deEV+O4<V<Dat9Zu(nL5D32,0]T!'F!(_%4$!#9>h4`-%W2^#pn)PqThl[b'Gp+'ZGl%"WYqa2Hdfcd21E2hd@OkN!*KtIJj30!uOL]^a$o;'k_;s*[j=Mg](:R2FZ(1]G/kEOL!k^EgeGV:W%5cVHE%D0($pC<=_Y`o=]iiZ;AFC3kI=KK>Zhd$a?.3)c>@MaGcSbgd\O(sihh.;C6IP<A/'gjiM8LZg!X[c$*HX5#^U3<p+hmU4o%1C_bZImZkRS!8/bOg$DC.X=esXBdJL8KEpr^V)pl1U-=a0Kh(o7E#1-mh,L)VLj4HluW+;KmZSSpH0N*L_&;J9!MqH]`*RX'n[a-%V6?oTA,(:m%Vnni4YH\Lpk]X\]"bhkppH8QQo$1d!P.i2%:rY<(B+-S_UJW2-[._>SF((ZA^Ag;De#IO4l*nD5?ru`!02oAr:8-q%X6AafWZa.XqrXDoDV[KOU6(K6CIQ4no6K<9JCu-/D^Qc4h!t!6*PQF?lh5R9'`a7hBK1(V`SHN-AEH78p8KX\@Ui,uP5b/rF,0)F%c&/1he9-,_]5#<T/J[OC&&D_Rj3S154`6$AbA%'+h1]&e+p\]LlC:)-lhYQ&`AU].k^*UQMdI?tp]Z;/(jj-J0S<1Q8^e:c?YB@Q%H1g&?7q2p]Vn?TM8Z#tk6Wp7PG;tqdCU%err#[esL\\QJ*;OcZNbQ+^0?Qdl<#6imA)km$,"8"RP7HrE_n7B_T"]RGf)%[*++E\-%h`Ul65<erAS):l*l`IqtouA0Qm.4Tap61P$^\de5J,O:-h>d?#:JhIHoZq9_s7l2Hrq22q56'jG?iTT@rgggf-dV:khYQ)9J,es:%!u5SC&H~>%AI9_PrivateDataEnd